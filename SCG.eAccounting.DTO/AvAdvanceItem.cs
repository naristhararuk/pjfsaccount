//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using SS.DB.DTO;
using SCG.eAccounting.DTO.DataSet;
using SS.Standard.Data.NHibernate.DTO;
using System.Data;

namespace SCG.eAccounting.DTO
{
	/// <summary>
	/// POJO for AvAdvanceItem. This class is autogenerated
	/// </summary>
	[Serializable]
    public partial class AvAdvanceItem : INHibernateAdapterDTO<long>
	{
		#region Fields
		
		private long advanceItemID;
		private string paymentType;
		private double amount;
		private double exchangeRate;
		private double amountTHB;
		private bool active;
		private long creBy;
		private DateTime creDate;
		private long updBy;
		private DateTime updDate;
		private string updPgm;
		private Byte[] rowVersion;
		private SCG.eAccounting.DTO.AvAdvanceDocument advanceID;
		private SS.DB.DTO.DbCurrency currencyID;
        private double? exchangeRateTHB;
        private double? mainCurrencyAmount;

		#endregion

		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AvAdvanceItem class
		/// </summary>
		public AvAdvanceItem()
		{
		}

		public AvAdvanceItem(long advanceItemID)
		{
			this.advanceItemID = advanceItemID;
		}
	
		/// <summary>
		/// Initializes a new instance of the AvAdvanceItem class
		/// </summary>
		/// <param name="paymentType">Initial <see cref="AvAdvanceItem.PaymentType" /> value</param>
		/// <param name="amount">Initial <see cref="AvAdvanceItem.Amount" /> value</param>
		/// <param name="exchangeRate">Initial <see cref="AvAdvanceItem.ExchangeRate" /> value</param>
		/// <param name="amountTHB">Initial <see cref="AvAdvanceItem.AmountTHB" /> value</param>
		/// <param name="active">Initial <see cref="AvAdvanceItem.Active" /> value</param>
		/// <param name="creBy">Initial <see cref="AvAdvanceItem.CreBy" /> value</param>
		/// <param name="creDate">Initial <see cref="AvAdvanceItem.CreDate" /> value</param>
		/// <param name="updBy">Initial <see cref="AvAdvanceItem.UpdBy" /> value</param>
		/// <param name="updDate">Initial <see cref="AvAdvanceItem.UpdDate" /> value</param>
		/// <param name="updPgm">Initial <see cref="AvAdvanceItem.UpdPgm" /> value</param>
		/// <param name="rowVersion">Initial <see cref="AvAdvanceItem.RowVersion" /> value</param>
		/// <param name="advanceDocumentID">Initial <see cref="AvAdvanceItem.AdvanceID" /> value</param>
		/// <param name="currencyID">Initial <see cref="AvAdvanceItem.CurrencyID" /> value</param>
        public AvAdvanceItem(string paymentType, double amount, double exchangeRate, double amountTHB, bool active, long creBy, DateTime creDate, long updBy, DateTime updDate, string updPgm, Byte[] rowVersion, SCG.eAccounting.DTO.AvAdvanceDocument advanceID, SS.DB.DTO.DbCurrency currencyID, double exchangeRateTHB, double mainCurrencyAmount)
		{
			this.paymentType = paymentType;
			this.amount = amount;
			this.exchangeRate = exchangeRate;
			this.amountTHB = amountTHB;
			this.active = active;
			this.creBy = creBy;
			this.creDate = creDate;
			this.updBy = updBy;
			this.updDate = updDate;
			this.updPgm = updPgm;
			this.rowVersion = rowVersion;
			this.advanceID = advanceID;
			this.currencyID = currencyID;
            this.exchangeRateTHB = exchangeRateTHB;
            this.mainCurrencyAmount = mainCurrencyAmount;
		}
	
		/// <summary>
		/// Minimal constructor for class AvAdvanceItem
		/// </summary>
		/// <param name="active">Initial <see cref="AvAdvanceItem.Active" /> value</param>
		/// <param name="creBy">Initial <see cref="AvAdvanceItem.CreBy" /> value</param>
		/// <param name="creDate">Initial <see cref="AvAdvanceItem.CreDate" /> value</param>
		/// <param name="updBy">Initial <see cref="AvAdvanceItem.UpdBy" /> value</param>
		/// <param name="updDate">Initial <see cref="AvAdvanceItem.UpdDate" /> value</param>
		/// <param name="updPgm">Initial <see cref="AvAdvanceItem.UpdPgm" /> value</param>
		public AvAdvanceItem(bool active, long creBy, DateTime creDate, long updBy, DateTime updDate, string updPgm)
		{
			this.active = active;
			this.creBy = creBy;
			this.creDate = creDate;
			this.updBy = updBy;
			this.updDate = updDate;
			this.updPgm = updPgm;
		}
		#endregion

        #region Constructor of DataSet comment
        //public AvAdvanceItem(AdvanceDataSet.AvAdvanceItemRow avRow)
        //{
        //    this.advanceItemID = avRow.AdvanceItemID;
        //    this.advanceID = new AvAdvanceDocument(avRow.AdvanceID);
        //    this.paymentType = avRow.PaymentType;
        //    this.currencyID = new DbCurrency(avRow.CurrencyID);
        //    this.amount = (double)avRow.Amount;
        //    this.exchangeRate = (double)avRow.ExchangeRate;
        //    this.amountTHB = (double)avRow.AmountTHB;
        //    this.amount = (double)avRow.Amount;
        //    this.Active = avRow.Active;
        //    this.CreBy = avRow.CreBy;
        //    this.CreDate = avRow.CreDate;
        //    this.UpdBy = avRow.UpdBy;
        //    this.UpdDate = avRow.UpdDate;
        //    this.UpdPgm = avRow.UpdPgm;
        //}
        #endregion
	
		#region Properties
		
		/// <summary>
		/// Gets or sets the AdvanceItemID for the current AvAdvanceItem
		/// </summary>
		public virtual long AdvanceItemID
		{
			get { return this.advanceItemID; }
			set { this.advanceItemID = value; }
		}
		
		/// <summary>
		/// Gets or sets the PaymentType for the current AvAdvanceItem
		/// </summary>
		public virtual string PaymentType
		{
			get { return this.paymentType; }
			set { this.paymentType = value; }
		}
		
		/// <summary>
		/// Gets or sets the Amount for the current AvAdvanceItem
		/// </summary>
		public virtual double Amount
		{
			get { return this.amount; }
			set { this.amount = value; }
		}
		
		/// <summary>
		/// Gets or sets the ExchangeRate for the current AvAdvanceItem
		/// </summary>
		public virtual double ExchangeRate
		{
			get { return this.exchangeRate; }
			set { this.exchangeRate = value; }
		}
		
		/// <summary>
		/// Gets or sets the AmountTHB for the current AvAdvanceItem
		/// </summary>
		public virtual double AmountTHB
		{
			get { return this.amountTHB; }
			set { this.amountTHB = value; }
		}
		
		/// <summary>
		/// Gets or sets the Active for the current AvAdvanceItem
		/// </summary>
		public virtual bool Active
		{
			get { return this.active; }
			set { this.active = value; }
		}
		
		/// <summary>
		/// Gets or sets the CreBy for the current AvAdvanceItem
		/// </summary>
		public virtual long CreBy
		{
			get { return this.creBy; }
			set { this.creBy = value; }
		}
		
		/// <summary>
		/// Gets or sets the CreDate for the current AvAdvanceItem
		/// </summary>
		public virtual DateTime CreDate
		{
			get { return this.creDate; }
			set { this.creDate = value; }
		}
		
		/// <summary>
		/// Gets or sets the UpdBy for the current AvAdvanceItem
		/// </summary>
		public virtual long UpdBy
		{
			get { return this.updBy; }
			set { this.updBy = value; }
		}
		
		/// <summary>
		/// Gets or sets the UpdDate for the current AvAdvanceItem
		/// </summary>
		public virtual DateTime UpdDate
		{
			get { return this.updDate; }
			set { this.updDate = value; }
		}
		
		/// <summary>
		/// Gets or sets the UpdPgm for the current AvAdvanceItem
		/// </summary>
		public virtual string UpdPgm
		{
			get { return this.updPgm; }
			set { this.updPgm = value; }
		}
		
		/// <summary>
		/// Gets or sets the RowVersion for the current AvAdvanceItem
		/// </summary>
		public virtual Byte[] RowVersion
		{
			get { return this.rowVersion; }
			set { this.rowVersion = value; }
		}
		
		/// <summary>
		/// Gets or sets the AdvanceID for the current AvAdvanceItem
		/// </summary>
		public virtual SCG.eAccounting.DTO.AvAdvanceDocument AdvanceID
		{
			get { return this.advanceID; }
			set { this.advanceID = value; }
		}
		
		/// <summary>
		/// Gets or sets the CurrencyID for the current AvAdvanceItem
		/// </summary>
		public virtual SS.DB.DTO.DbCurrency CurrencyID
		{
			get { return this.currencyID; }
			set { this.currencyID = value; }
		}

        public virtual double? ExchangeRateTHB
        {
            get { return this.exchangeRateTHB; }
            set { this.exchangeRateTHB = value; }
        }

        public virtual double? MainCurrencyAmount
        {
            get { return this.mainCurrencyAmount; }
            set { this.mainCurrencyAmount = value; }
        }
		#endregion

        #region INHibernateAdapterDTO
        public void LoadFromDataRow(DataRow dr)
        {
            this.AdvanceItemID = Convert.ToInt64(dr["AdvanceItemID"]);
            this.AdvanceID = new AvAdvanceDocument(Convert.ToInt64(dr["AdvanceID"]));
            this.PaymentType = dr["PaymentType"].ToString();
            if (!string.IsNullOrEmpty(dr["CurrencyID"].ToString()))
                this.CurrencyID = new DbCurrency(Convert.ToInt16(dr["CurrencyID"]));
            else
                this.CurrencyID = null;
            if (!string.IsNullOrEmpty(dr["Amount"].ToString()))
                this.Amount = Convert.ToDouble(dr["Amount"]);
            else
                this.Amount = 0;
            if (!string.IsNullOrEmpty(dr["ExchangeRate"].ToString()))
                this.ExchangeRate = Convert.ToDouble(dr["ExchangeRate"]);
            else
                this.ExchangeRate = 0;
            this.AmountTHB = Convert.ToDouble(dr["AmountTHB"]);
            this.Active = (bool)dr["Active"];
            this.CreBy = Convert.ToInt64(dr["CreBy"]);
            this.CreDate = Convert.ToDateTime(dr["CreDate"]);
            this.UpdBy = Convert.ToInt64(dr["UpdBy"]);
            this.UpdDate = Convert.ToDateTime(dr["UpdDate"]);
            this.UpdPgm = dr["UpdPgm"].ToString();
            if (!string.IsNullOrEmpty(dr["ExchangeRateTHB"].ToString()))
                this.ExchangeRateTHB = Convert.ToDouble(dr["ExchangeRateTHB"]);
            else
                this.ExchangeRateTHB = 0;
            if (!string.IsNullOrEmpty(dr["MainCurrencyAmount"].ToString()))
                this.MainCurrencyAmount = Convert.ToDouble(dr["MainCurrencyAmount"]);
            else
                this.MainCurrencyAmount = 0;
            
        }
        public void SaveIDToDataRow(DataTable dt, DataRow dr, long newID)
        {
            long oldID = dr.Field<long>("AdvanceItemID");

            dt.PrimaryKey[0].ReadOnly = false;
            dt.Rows.Find(oldID).BeginEdit();
            dt.Rows.Find(oldID)["AdvanceItemID"] = newID;
            dt.Rows.Find(oldID).EndEdit();
            dt.PrimaryKey[0].ReadOnly = true;
        }
        public long GetIDFromDataRow(DataRow dr)
        {
            return Convert.ToInt64(dr["AdvanceItemID"].ToString());
        }
        public long GetIDFromDataRow(DataRow dr, DataRowVersion rowState)
        {
            return Convert.ToInt64(dr["AdvanceItemID", rowState].ToString());
        }
        #endregion

	}
}
