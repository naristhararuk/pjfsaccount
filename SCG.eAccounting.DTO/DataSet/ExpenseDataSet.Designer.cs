//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SCG.eAccounting.DTO.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExpenseDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExpenseDataSet : global::System.Data.DataSet {
        
        private DocumentDataTable tableDocument;
        
        private DocumentInitiatorDataTable tableDocumentInitiator;
        
        private WorkFlowDataTable tableWorkFlow;
        
        private DocumentAttachmentDataTable tableDocumentAttachment;
        
        private FnExpenseDocumentDataTable tableFnExpenseDocument;
        
        private FnExpenseAdvanceDataTable tableFnExpenseAdvance;
        
        private FnExpenseAdvanceExchangeRateDataTable tableFnExpenseAdvanceExchangeRate;
        
        private FnExpenseMileageDataTable tableFnExpenseMileage;
        
        private FnExpenseMileageItemDataTable tableFnExpenseMileageItem;
        
        private FnExpenseInvoiceDataTable tableFnExpenseInvoice;
        
        private FnExpenseInvoiceItemDataTable tableFnExpenseInvoiceItem;
        
        private FnExpensePerdiemDataTable tableFnExpensePerdiem;
        
        private FnExpensePerdiemItemDataTable tableFnExpensePerdiemItem;
        
        private FnExpensePerdiemDetailDataTable tableFnExpensePerdiemDetail;
        
        private FnExpenseMPADataTable tableFnExpenseMPA;
        
        private FnExpenseCADataTable tableFnExpenseCA;
        
        private global::System.Data.DataRelation relationFK_DocumentInitiator_Document;
        
        private global::System.Data.DataRelation relationFK_WorkFlow_Document;
        
        private global::System.Data.DataRelation relationFK_DocumentAttachment_Document;
        
        private global::System.Data.DataRelation relationFK_FnExpenseDocument_Document;
        
        private global::System.Data.DataRelation relationFK_FnExpenseAdvance_FnExpenseDocument;
        
        private global::System.Data.DataRelation relationFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance;
        
        private global::System.Data.DataRelation relationFK_FnExpenseMileage_FnExpenseDocument;
        
        private global::System.Data.DataRelation relationFK_FnExpenseMileageItem_FnExpenseMileage;
        
        private global::System.Data.DataRelation relationFK_FnExpenseInvoice_FnExpenseDocument;
        
        private global::System.Data.DataRelation relationFK_FnInvoiceItem_FnExpenseInvoice;
        
        private global::System.Data.DataRelation relationFK_FnExpenseDocument_FnExpensePerdiem;
        
        private global::System.Data.DataRelation relationFK_FnExpensePerdiem_FnExpenseInvoice;
        
        private global::System.Data.DataRelation relationFK_FnExpensePerdiemItem_FnExpensePerdiem;
        
        private global::System.Data.DataRelation relationFK_FnExpensePerdiemDetail_FnExpensePerdiem;
        
        private global::System.Data.DataRelation relationFK_FnExpenseCA_FnExpenseCA;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ExpenseDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ExpenseDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Document"] != null)) {
                    base.Tables.Add(new DocumentDataTable(ds.Tables["Document"]));
                }
                if ((ds.Tables["DocumentInitiator"] != null)) {
                    base.Tables.Add(new DocumentInitiatorDataTable(ds.Tables["DocumentInitiator"]));
                }
                if ((ds.Tables["WorkFlow"] != null)) {
                    base.Tables.Add(new WorkFlowDataTable(ds.Tables["WorkFlow"]));
                }
                if ((ds.Tables["DocumentAttachment"] != null)) {
                    base.Tables.Add(new DocumentAttachmentDataTable(ds.Tables["DocumentAttachment"]));
                }
                if ((ds.Tables["FnExpenseDocument"] != null)) {
                    base.Tables.Add(new FnExpenseDocumentDataTable(ds.Tables["FnExpenseDocument"]));
                }
                if ((ds.Tables["FnExpenseAdvance"] != null)) {
                    base.Tables.Add(new FnExpenseAdvanceDataTable(ds.Tables["FnExpenseAdvance"]));
                }
                if ((ds.Tables["FnExpenseAdvanceExchangeRate"] != null)) {
                    base.Tables.Add(new FnExpenseAdvanceExchangeRateDataTable(ds.Tables["FnExpenseAdvanceExchangeRate"]));
                }
                if ((ds.Tables["FnExpenseMileage"] != null)) {
                    base.Tables.Add(new FnExpenseMileageDataTable(ds.Tables["FnExpenseMileage"]));
                }
                if ((ds.Tables["FnExpenseMileageItem"] != null)) {
                    base.Tables.Add(new FnExpenseMileageItemDataTable(ds.Tables["FnExpenseMileageItem"]));
                }
                if ((ds.Tables["FnExpenseInvoice"] != null)) {
                    base.Tables.Add(new FnExpenseInvoiceDataTable(ds.Tables["FnExpenseInvoice"]));
                }
                if ((ds.Tables["FnExpenseInvoiceItem"] != null)) {
                    base.Tables.Add(new FnExpenseInvoiceItemDataTable(ds.Tables["FnExpenseInvoiceItem"]));
                }
                if ((ds.Tables["FnExpensePerdiem"] != null)) {
                    base.Tables.Add(new FnExpensePerdiemDataTable(ds.Tables["FnExpensePerdiem"]));
                }
                if ((ds.Tables["FnExpensePerdiemItem"] != null)) {
                    base.Tables.Add(new FnExpensePerdiemItemDataTable(ds.Tables["FnExpensePerdiemItem"]));
                }
                if ((ds.Tables["FnExpensePerdiemDetail"] != null)) {
                    base.Tables.Add(new FnExpensePerdiemDetailDataTable(ds.Tables["FnExpensePerdiemDetail"]));
                }
                if ((ds.Tables["FnExpenseMPA"] != null)) {
                    base.Tables.Add(new FnExpenseMPADataTable(ds.Tables["FnExpenseMPA"]));
                }
                if ((ds.Tables["FnExpenseCA"] != null)) {
                    base.Tables.Add(new FnExpenseCADataTable(ds.Tables["FnExpenseCA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentDataTable Document {
            get {
                return this.tableDocument;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentInitiatorDataTable DocumentInitiator {
            get {
                return this.tableDocumentInitiator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkFlowDataTable WorkFlow {
            get {
                return this.tableWorkFlow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentAttachmentDataTable DocumentAttachment {
            get {
                return this.tableDocumentAttachment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseDocumentDataTable FnExpenseDocument {
            get {
                return this.tableFnExpenseDocument;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseAdvanceDataTable FnExpenseAdvance {
            get {
                return this.tableFnExpenseAdvance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseAdvanceExchangeRateDataTable FnExpenseAdvanceExchangeRate {
            get {
                return this.tableFnExpenseAdvanceExchangeRate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseMileageDataTable FnExpenseMileage {
            get {
                return this.tableFnExpenseMileage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseMileageItemDataTable FnExpenseMileageItem {
            get {
                return this.tableFnExpenseMileageItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseInvoiceDataTable FnExpenseInvoice {
            get {
                return this.tableFnExpenseInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseInvoiceItemDataTable FnExpenseInvoiceItem {
            get {
                return this.tableFnExpenseInvoiceItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpensePerdiemDataTable FnExpensePerdiem {
            get {
                return this.tableFnExpensePerdiem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpensePerdiemItemDataTable FnExpensePerdiemItem {
            get {
                return this.tableFnExpensePerdiemItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpensePerdiemDetailDataTable FnExpensePerdiemDetail {
            get {
                return this.tableFnExpensePerdiemDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseMPADataTable FnExpenseMPA {
            get {
                return this.tableFnExpenseMPA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FnExpenseCADataTable FnExpenseCA {
            get {
                return this.tableFnExpenseCA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ExpenseDataSet cln = ((ExpenseDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Document"] != null)) {
                    base.Tables.Add(new DocumentDataTable(ds.Tables["Document"]));
                }
                if ((ds.Tables["DocumentInitiator"] != null)) {
                    base.Tables.Add(new DocumentInitiatorDataTable(ds.Tables["DocumentInitiator"]));
                }
                if ((ds.Tables["WorkFlow"] != null)) {
                    base.Tables.Add(new WorkFlowDataTable(ds.Tables["WorkFlow"]));
                }
                if ((ds.Tables["DocumentAttachment"] != null)) {
                    base.Tables.Add(new DocumentAttachmentDataTable(ds.Tables["DocumentAttachment"]));
                }
                if ((ds.Tables["FnExpenseDocument"] != null)) {
                    base.Tables.Add(new FnExpenseDocumentDataTable(ds.Tables["FnExpenseDocument"]));
                }
                if ((ds.Tables["FnExpenseAdvance"] != null)) {
                    base.Tables.Add(new FnExpenseAdvanceDataTable(ds.Tables["FnExpenseAdvance"]));
                }
                if ((ds.Tables["FnExpenseAdvanceExchangeRate"] != null)) {
                    base.Tables.Add(new FnExpenseAdvanceExchangeRateDataTable(ds.Tables["FnExpenseAdvanceExchangeRate"]));
                }
                if ((ds.Tables["FnExpenseMileage"] != null)) {
                    base.Tables.Add(new FnExpenseMileageDataTable(ds.Tables["FnExpenseMileage"]));
                }
                if ((ds.Tables["FnExpenseMileageItem"] != null)) {
                    base.Tables.Add(new FnExpenseMileageItemDataTable(ds.Tables["FnExpenseMileageItem"]));
                }
                if ((ds.Tables["FnExpenseInvoice"] != null)) {
                    base.Tables.Add(new FnExpenseInvoiceDataTable(ds.Tables["FnExpenseInvoice"]));
                }
                if ((ds.Tables["FnExpenseInvoiceItem"] != null)) {
                    base.Tables.Add(new FnExpenseInvoiceItemDataTable(ds.Tables["FnExpenseInvoiceItem"]));
                }
                if ((ds.Tables["FnExpensePerdiem"] != null)) {
                    base.Tables.Add(new FnExpensePerdiemDataTable(ds.Tables["FnExpensePerdiem"]));
                }
                if ((ds.Tables["FnExpensePerdiemItem"] != null)) {
                    base.Tables.Add(new FnExpensePerdiemItemDataTable(ds.Tables["FnExpensePerdiemItem"]));
                }
                if ((ds.Tables["FnExpensePerdiemDetail"] != null)) {
                    base.Tables.Add(new FnExpensePerdiemDetailDataTable(ds.Tables["FnExpensePerdiemDetail"]));
                }
                if ((ds.Tables["FnExpenseMPA"] != null)) {
                    base.Tables.Add(new FnExpenseMPADataTable(ds.Tables["FnExpenseMPA"]));
                }
                if ((ds.Tables["FnExpenseCA"] != null)) {
                    base.Tables.Add(new FnExpenseCADataTable(ds.Tables["FnExpenseCA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDocument = ((DocumentDataTable)(base.Tables["Document"]));
            if ((initTable == true)) {
                if ((this.tableDocument != null)) {
                    this.tableDocument.InitVars();
                }
            }
            this.tableDocumentInitiator = ((DocumentInitiatorDataTable)(base.Tables["DocumentInitiator"]));
            if ((initTable == true)) {
                if ((this.tableDocumentInitiator != null)) {
                    this.tableDocumentInitiator.InitVars();
                }
            }
            this.tableWorkFlow = ((WorkFlowDataTable)(base.Tables["WorkFlow"]));
            if ((initTable == true)) {
                if ((this.tableWorkFlow != null)) {
                    this.tableWorkFlow.InitVars();
                }
            }
            this.tableDocumentAttachment = ((DocumentAttachmentDataTable)(base.Tables["DocumentAttachment"]));
            if ((initTable == true)) {
                if ((this.tableDocumentAttachment != null)) {
                    this.tableDocumentAttachment.InitVars();
                }
            }
            this.tableFnExpenseDocument = ((FnExpenseDocumentDataTable)(base.Tables["FnExpenseDocument"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseDocument != null)) {
                    this.tableFnExpenseDocument.InitVars();
                }
            }
            this.tableFnExpenseAdvance = ((FnExpenseAdvanceDataTable)(base.Tables["FnExpenseAdvance"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseAdvance != null)) {
                    this.tableFnExpenseAdvance.InitVars();
                }
            }
            this.tableFnExpenseAdvanceExchangeRate = ((FnExpenseAdvanceExchangeRateDataTable)(base.Tables["FnExpenseAdvanceExchangeRate"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseAdvanceExchangeRate != null)) {
                    this.tableFnExpenseAdvanceExchangeRate.InitVars();
                }
            }
            this.tableFnExpenseMileage = ((FnExpenseMileageDataTable)(base.Tables["FnExpenseMileage"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseMileage != null)) {
                    this.tableFnExpenseMileage.InitVars();
                }
            }
            this.tableFnExpenseMileageItem = ((FnExpenseMileageItemDataTable)(base.Tables["FnExpenseMileageItem"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseMileageItem != null)) {
                    this.tableFnExpenseMileageItem.InitVars();
                }
            }
            this.tableFnExpenseInvoice = ((FnExpenseInvoiceDataTable)(base.Tables["FnExpenseInvoice"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseInvoice != null)) {
                    this.tableFnExpenseInvoice.InitVars();
                }
            }
            this.tableFnExpenseInvoiceItem = ((FnExpenseInvoiceItemDataTable)(base.Tables["FnExpenseInvoiceItem"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseInvoiceItem != null)) {
                    this.tableFnExpenseInvoiceItem.InitVars();
                }
            }
            this.tableFnExpensePerdiem = ((FnExpensePerdiemDataTable)(base.Tables["FnExpensePerdiem"]));
            if ((initTable == true)) {
                if ((this.tableFnExpensePerdiem != null)) {
                    this.tableFnExpensePerdiem.InitVars();
                }
            }
            this.tableFnExpensePerdiemItem = ((FnExpensePerdiemItemDataTable)(base.Tables["FnExpensePerdiemItem"]));
            if ((initTable == true)) {
                if ((this.tableFnExpensePerdiemItem != null)) {
                    this.tableFnExpensePerdiemItem.InitVars();
                }
            }
            this.tableFnExpensePerdiemDetail = ((FnExpensePerdiemDetailDataTable)(base.Tables["FnExpensePerdiemDetail"]));
            if ((initTable == true)) {
                if ((this.tableFnExpensePerdiemDetail != null)) {
                    this.tableFnExpensePerdiemDetail.InitVars();
                }
            }
            this.tableFnExpenseMPA = ((FnExpenseMPADataTable)(base.Tables["FnExpenseMPA"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseMPA != null)) {
                    this.tableFnExpenseMPA.InitVars();
                }
            }
            this.tableFnExpenseCA = ((FnExpenseCADataTable)(base.Tables["FnExpenseCA"]));
            if ((initTable == true)) {
                if ((this.tableFnExpenseCA != null)) {
                    this.tableFnExpenseCA.InitVars();
                }
            }
            this.relationFK_DocumentInitiator_Document = this.Relations["FK_DocumentInitiator_Document"];
            this.relationFK_WorkFlow_Document = this.Relations["FK_WorkFlow_Document"];
            this.relationFK_DocumentAttachment_Document = this.Relations["FK_DocumentAttachment_Document"];
            this.relationFK_FnExpenseDocument_Document = this.Relations["FK_FnExpenseDocument_Document"];
            this.relationFK_FnExpenseAdvance_FnExpenseDocument = this.Relations["FK_FnExpenseAdvance_FnExpenseDocument"];
            this.relationFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance = this.Relations["FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance"];
            this.relationFK_FnExpenseMileage_FnExpenseDocument = this.Relations["FK_FnExpenseMileage_FnExpenseDocument"];
            this.relationFK_FnExpenseMileageItem_FnExpenseMileage = this.Relations["FK_FnExpenseMileageItem_FnExpenseMileage"];
            this.relationFK_FnExpenseInvoice_FnExpenseDocument = this.Relations["FK_FnExpenseInvoice_FnExpenseDocument"];
            this.relationFK_FnInvoiceItem_FnExpenseInvoice = this.Relations["FK_FnInvoiceItem_FnExpenseInvoice"];
            this.relationFK_FnExpenseDocument_FnExpensePerdiem = this.Relations["FK_FnExpenseDocument_FnExpensePerdiem"];
            this.relationFK_FnExpensePerdiem_FnExpenseInvoice = this.Relations["FK_FnExpensePerdiem_FnExpenseInvoice"];
            this.relationFK_FnExpensePerdiemItem_FnExpensePerdiem = this.Relations["FK_FnExpensePerdiemItem_FnExpensePerdiem"];
            this.relationFK_FnExpensePerdiemDetail_FnExpensePerdiem = this.Relations["FK_FnExpensePerdiemDetail_FnExpensePerdiem"];
            this.relationFK_FnExpenseCA_FnExpenseCA = this.Relations["FK_FnExpenseCA_FnExpenseCA"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ExpenseDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExpenseDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDocument = new DocumentDataTable();
            base.Tables.Add(this.tableDocument);
            this.tableDocumentInitiator = new DocumentInitiatorDataTable();
            base.Tables.Add(this.tableDocumentInitiator);
            this.tableWorkFlow = new WorkFlowDataTable();
            base.Tables.Add(this.tableWorkFlow);
            this.tableDocumentAttachment = new DocumentAttachmentDataTable();
            base.Tables.Add(this.tableDocumentAttachment);
            this.tableFnExpenseDocument = new FnExpenseDocumentDataTable();
            base.Tables.Add(this.tableFnExpenseDocument);
            this.tableFnExpenseAdvance = new FnExpenseAdvanceDataTable();
            base.Tables.Add(this.tableFnExpenseAdvance);
            this.tableFnExpenseAdvanceExchangeRate = new FnExpenseAdvanceExchangeRateDataTable();
            base.Tables.Add(this.tableFnExpenseAdvanceExchangeRate);
            this.tableFnExpenseMileage = new FnExpenseMileageDataTable();
            base.Tables.Add(this.tableFnExpenseMileage);
            this.tableFnExpenseMileageItem = new FnExpenseMileageItemDataTable();
            base.Tables.Add(this.tableFnExpenseMileageItem);
            this.tableFnExpenseInvoice = new FnExpenseInvoiceDataTable();
            base.Tables.Add(this.tableFnExpenseInvoice);
            this.tableFnExpenseInvoiceItem = new FnExpenseInvoiceItemDataTable();
            base.Tables.Add(this.tableFnExpenseInvoiceItem);
            this.tableFnExpensePerdiem = new FnExpensePerdiemDataTable();
            base.Tables.Add(this.tableFnExpensePerdiem);
            this.tableFnExpensePerdiemItem = new FnExpensePerdiemItemDataTable();
            base.Tables.Add(this.tableFnExpensePerdiemItem);
            this.tableFnExpensePerdiemDetail = new FnExpensePerdiemDetailDataTable();
            base.Tables.Add(this.tableFnExpensePerdiemDetail);
            this.tableFnExpenseMPA = new FnExpenseMPADataTable();
            base.Tables.Add(this.tableFnExpenseMPA);
            this.tableFnExpenseCA = new FnExpenseCADataTable();
            base.Tables.Add(this.tableFnExpenseCA);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DocumentInitiator_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentInitiator.DocumentIDColumn});
            this.tableDocumentInitiator.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_WorkFlow_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableWorkFlow.DocumentIDColumn});
            this.tableWorkFlow.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DocumentAttachment_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentAttachment.DocumentIDColumn});
            this.tableDocumentAttachment.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseDocument_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.DocumentIDColumn});
            this.tableFnExpenseDocument.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseAdvance_FnExpenseDocument", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseAdvance.ExpenseIDColumn});
            this.tableFnExpenseAdvance.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseAdvance.FnExpenseAdvanceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseAdvanceExchangeRate.FnExpenseAdvanceIDColumn});
            this.tableFnExpenseAdvanceExchangeRate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseMileage_FnExpenseDocument", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMileage.ExpenseIDColumn});
            this.tableFnExpenseMileage.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseMileageItem_FnExpenseMileage", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMileage.ExpenseMileageIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMileageItem.ExpenseMileageIDColumn});
            this.tableFnExpenseMileageItem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseInvoice_FnExpenseDocument", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoice.ExpenseIDColumn});
            this.tableFnExpenseInvoice.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnInvoiceItem_FnExpenseInvoice", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoice.InvoiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoiceItem.InvoiceIDColumn});
            this.tableFnExpenseInvoiceItem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseDocument_FnExpensePerdiem", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.ExpenseIDColumn});
            this.tableFnExpensePerdiem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpensePerdiem_FnExpenseInvoice", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoice.InvoiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.InvoiceIDColumn});
            this.tableFnExpensePerdiem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpensePerdiemItem_FnExpensePerdiem", new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.ExpensePerdiemIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiemItem.ExpensePerdiemIDColumn});
            this.tableFnExpensePerdiemItem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpensePerdiemDetail_FnExpensePerdiem", new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.ExpensePerdiemIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiemDetail.ExpensePerdiemIDColumn});
            this.tableFnExpensePerdiemDetail.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseMPA_FnExpenseMPA", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMPA.ExpenseIDColumn});
            this.tableFnExpenseMPA.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FnExpenseCA_FnExpenseCA", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseCA.ExpenseIDColumn});
            this.tableFnExpenseCA.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_DocumentInitiator_Document = new global::System.Data.DataRelation("FK_DocumentInitiator_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentInitiator.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_DocumentInitiator_Document);
            this.relationFK_WorkFlow_Document = new global::System.Data.DataRelation("FK_WorkFlow_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableWorkFlow.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_WorkFlow_Document);
            this.relationFK_DocumentAttachment_Document = new global::System.Data.DataRelation("FK_DocumentAttachment_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentAttachment.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_DocumentAttachment_Document);
            this.relationFK_FnExpenseDocument_Document = new global::System.Data.DataRelation("FK_FnExpenseDocument_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseDocument_Document);
            this.relationFK_FnExpenseAdvance_FnExpenseDocument = new global::System.Data.DataRelation("FK_FnExpenseAdvance_FnExpenseDocument", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseAdvance.ExpenseIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseAdvance_FnExpenseDocument);
            this.relationFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance = new global::System.Data.DataRelation("FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseAdvance.FnExpenseAdvanceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseAdvanceExchangeRate.FnExpenseAdvanceIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance);
            this.relationFK_FnExpenseMileage_FnExpenseDocument = new global::System.Data.DataRelation("FK_FnExpenseMileage_FnExpenseDocument", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMileage.ExpenseIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseMileage_FnExpenseDocument);
            this.relationFK_FnExpenseMileageItem_FnExpenseMileage = new global::System.Data.DataRelation("FK_FnExpenseMileageItem_FnExpenseMileage", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMileage.ExpenseMileageIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseMileageItem.ExpenseMileageIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseMileageItem_FnExpenseMileage);
            this.relationFK_FnExpenseInvoice_FnExpenseDocument = new global::System.Data.DataRelation("FK_FnExpenseInvoice_FnExpenseDocument", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoice.ExpenseIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseInvoice_FnExpenseDocument);
            this.relationFK_FnInvoiceItem_FnExpenseInvoice = new global::System.Data.DataRelation("FK_FnInvoiceItem_FnExpenseInvoice", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoice.InvoiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoiceItem.InvoiceIDColumn}, false);
            this.Relations.Add(this.relationFK_FnInvoiceItem_FnExpenseInvoice);
            this.relationFK_FnExpenseDocument_FnExpensePerdiem = new global::System.Data.DataRelation("FK_FnExpenseDocument_FnExpensePerdiem", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.ExpenseIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseDocument_FnExpensePerdiem);
            this.relationFK_FnExpensePerdiem_FnExpenseInvoice = new global::System.Data.DataRelation("FK_FnExpensePerdiem_FnExpenseInvoice", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseInvoice.InvoiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.InvoiceIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpensePerdiem_FnExpenseInvoice);
            this.relationFK_FnExpensePerdiemItem_FnExpensePerdiem = new global::System.Data.DataRelation("FK_FnExpensePerdiemItem_FnExpensePerdiem", new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.ExpensePerdiemIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiemItem.ExpensePerdiemIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpensePerdiemItem_FnExpensePerdiem);
            this.relationFK_FnExpensePerdiemDetail_FnExpensePerdiem = new global::System.Data.DataRelation("FK_FnExpensePerdiemDetail_FnExpensePerdiem", new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiem.ExpensePerdiemIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpensePerdiemDetail.ExpensePerdiemIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpensePerdiemDetail_FnExpensePerdiem);
            this.relationFK_FnExpenseCA_FnExpenseCA = new global::System.Data.DataRelation("FK_FnExpenseCA_FnExpenseCA", new global::System.Data.DataColumn[] {
                        this.tableFnExpenseDocument.ExpenseIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFnExpenseCA.ExpenseIDColumn}, false);
            this.Relations.Add(this.relationFK_FnExpenseCA_FnExpenseCA);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDocument() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDocumentInitiator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWorkFlow() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDocumentAttachment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseDocument() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseAdvance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseAdvanceExchangeRate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseMileage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseMileageItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseInvoiceItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpensePerdiem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpensePerdiemItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpensePerdiemDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseMPA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFnExpenseCA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExpenseDataSet ds = new ExpenseDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DocumentRowChangeEventHandler(object sender, DocumentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DocumentInitiatorRowChangeEventHandler(object sender, DocumentInitiatorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WorkFlowRowChangeEventHandler(object sender, WorkFlowRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DocumentAttachmentRowChangeEventHandler(object sender, DocumentAttachmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseDocumentRowChangeEventHandler(object sender, FnExpenseDocumentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseAdvanceRowChangeEventHandler(object sender, FnExpenseAdvanceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseAdvanceExchangeRateRowChangeEventHandler(object sender, FnExpenseAdvanceExchangeRateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseMileageRowChangeEventHandler(object sender, FnExpenseMileageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseMileageItemRowChangeEventHandler(object sender, FnExpenseMileageItemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseInvoiceRowChangeEventHandler(object sender, FnExpenseInvoiceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseInvoiceItemRowChangeEventHandler(object sender, FnExpenseInvoiceItemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpensePerdiemRowChangeEventHandler(object sender, FnExpensePerdiemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpensePerdiemItemRowChangeEventHandler(object sender, FnExpensePerdiemItemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpensePerdiemDetailRowChangeEventHandler(object sender, FnExpensePerdiemDetailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseMPARowChangeEventHandler(object sender, FnExpenseMPARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FnExpenseCARowChangeEventHandler(object sender, FnExpenseCARowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentDataTable : global::System.Data.TypedTableBase<DocumentRow> {
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnRequesterID;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnReceiverID;
            
            private global::System.Data.DataColumn columnDocumentDate;
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnDocumentTypeID;
            
            private global::System.Data.DataColumn columnApproverID;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnPostingStatus;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnPaymentMethodID;
            
            private global::System.Data.DataColumn columnPostingDate;
            
            private global::System.Data.DataColumn columnBaseLineDate;
            
            private global::System.Data.DataColumn columnBankAccount;
            
            private global::System.Data.DataColumn columnIsVerifyImage;
            
            private global::System.Data.DataColumn columnReferenceNo;
            
            private global::System.Data.DataColumn columnIsContainDocumentNo;
            
            private global::System.Data.DataColumn columnMark;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnBusinessArea;
            
            private global::System.Data.DataColumn columnSupplementary;
            
            private global::System.Data.DataColumn columnApproveDate;
            
            private global::System.Data.DataColumn columnCacheServiceTeamID;
            
            private global::System.Data.DataColumn columnCachePBID;
            
            private global::System.Data.DataColumn columnCacheAttachment;
            
            private global::System.Data.DataColumn columnCacheCurrentState;
            
            private global::System.Data.DataColumn columnCacheCreatorName;
            
            private global::System.Data.DataColumn columnCacheRequesterName;
            
            private global::System.Data.DataColumn columnCacheAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnCacheAmountMainCurrency;
            
            private global::System.Data.DataColumn columnCacheAmountTHB;
            
            private global::System.Data.DataColumn columnCacheBoxID;
            
            private global::System.Data.DataColumn columnCacheWorkFlowID;
            
            private global::System.Data.DataColumn columnCacheDocumentTypeName;
            
            private global::System.Data.DataColumn columnCacheCurrentWorkFlowTypeID;
            
            private global::System.Data.DataColumn columnCacheCurrentStateName;
            
            private global::System.Data.DataColumn columnIsVerifyWithImage;
            
            private global::System.Data.DataColumn columnReceiveDocumentDate;
            
            private global::System.Data.DataColumn columnVerifiedDate;
            
            private global::System.Data.DataColumn columnApproveVerifiedDate;
            
            private global::System.Data.DataColumn columnPaidDate;
            
            private global::System.Data.DataColumn columnRemittanceDate;
            
            private global::System.Data.DataColumn columnTotalHold;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentDataTable() {
                this.TableName = "Document";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DocumentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequesterIDColumn {
                get {
                    return this.columnRequesterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiverIDColumn {
                get {
                    return this.columnReceiverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentDateColumn {
                get {
                    return this.columnDocumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentTypeIDColumn {
                get {
                    return this.columnDocumentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApproverIDColumn {
                get {
                    return this.columnApproverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingStatusColumn {
                get {
                    return this.columnPostingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentMethodIDColumn {
                get {
                    return this.columnPaymentMethodID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingDateColumn {
                get {
                    return this.columnPostingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseLineDateColumn {
                get {
                    return this.columnBaseLineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccountColumn {
                get {
                    return this.columnBankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsVerifyImageColumn {
                get {
                    return this.columnIsVerifyImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceNoColumn {
                get {
                    return this.columnReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsContainDocumentNoColumn {
                get {
                    return this.columnIsContainDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkColumn {
                get {
                    return this.columnMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BusinessAreaColumn {
                get {
                    return this.columnBusinessArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplementaryColumn {
                get {
                    return this.columnSupplementary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApproveDateColumn {
                get {
                    return this.columnApproveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheServiceTeamIDColumn {
                get {
                    return this.columnCacheServiceTeamID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CachePBIDColumn {
                get {
                    return this.columnCachePBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAttachmentColumn {
                get {
                    return this.columnCacheAttachment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCurrentStateColumn {
                get {
                    return this.columnCacheCurrentState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCreatorNameColumn {
                get {
                    return this.columnCacheCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheRequesterNameColumn {
                get {
                    return this.columnCacheRequesterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAmountLocalCurrencyColumn {
                get {
                    return this.columnCacheAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAmountMainCurrencyColumn {
                get {
                    return this.columnCacheAmountMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAmountTHBColumn {
                get {
                    return this.columnCacheAmountTHB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheBoxIDColumn {
                get {
                    return this.columnCacheBoxID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheWorkFlowIDColumn {
                get {
                    return this.columnCacheWorkFlowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheDocumentTypeNameColumn {
                get {
                    return this.columnCacheDocumentTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCurrentWorkFlowTypeIDColumn {
                get {
                    return this.columnCacheCurrentWorkFlowTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCurrentStateNameColumn {
                get {
                    return this.columnCacheCurrentStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsVerifyWithImageColumn {
                get {
                    return this.columnIsVerifyWithImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveDocumentDateColumn {
                get {
                    return this.columnReceiveDocumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VerifiedDateColumn {
                get {
                    return this.columnVerifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApproveVerifiedDateColumn {
                get {
                    return this.columnApproveVerifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidDateColumn {
                get {
                    return this.columnPaidDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemittanceDateColumn {
                get {
                    return this.columnRemittanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHoldColumn {
                get {
                    return this.columnTotalHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow this[int index] {
                get {
                    return ((DocumentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDocumentRow(DocumentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow AddDocumentRow(
                        long CompanyID, 
                        long RequesterID, 
                        long CreatorID, 
                        long ReceiverID, 
                        System.DateTime DocumentDate, 
                        string DocumentNo, 
                        int DocumentTypeID, 
                        long ApproverID, 
                        string Subject, 
                        string Memo, 
                        string PostingStatus, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        string BranchCode, 
                        long PaymentMethodID, 
                        System.DateTime PostingDate, 
                        System.DateTime BaseLineDate, 
                        string BankAccount, 
                        bool IsVerifyImage, 
                        string ReferenceNo, 
                        bool IsContainDocumentNo, 
                        bool Mark, 
                        bool Archived, 
                        string BusinessArea, 
                        string Supplementary, 
                        System.DateTime ApproveDate, 
                        long CacheServiceTeamID, 
                        long CachePBID, 
                        bool CacheAttachment, 
                        int CacheCurrentState, 
                        string CacheCreatorName, 
                        string CacheRequesterName, 
                        decimal CacheAmountLocalCurrency, 
                        decimal CacheAmountMainCurrency, 
                        decimal CacheAmountTHB, 
                        string CacheBoxID, 
                        long CacheWorkFlowID, 
                        string CacheDocumentTypeName, 
                        int CacheCurrentWorkFlowTypeID, 
                        string CacheCurrentStateName, 
                        bool IsVerifyWithImage, 
                        System.DateTime ReceiveDocumentDate, 
                        System.DateTime VerifiedDate, 
                        System.DateTime ApproveVerifiedDate, 
                        System.DateTime PaidDate, 
                        System.DateTime RemittanceDate, 
                        int TotalHold) {
                DocumentRow rowDocumentRow = ((DocumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CompanyID,
                        RequesterID,
                        CreatorID,
                        ReceiverID,
                        DocumentDate,
                        DocumentNo,
                        DocumentTypeID,
                        ApproverID,
                        Subject,
                        Memo,
                        PostingStatus,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        BranchCode,
                        PaymentMethodID,
                        PostingDate,
                        BaseLineDate,
                        BankAccount,
                        IsVerifyImage,
                        ReferenceNo,
                        IsContainDocumentNo,
                        Mark,
                        Archived,
                        BusinessArea,
                        Supplementary,
                        ApproveDate,
                        CacheServiceTeamID,
                        CachePBID,
                        CacheAttachment,
                        CacheCurrentState,
                        CacheCreatorName,
                        CacheRequesterName,
                        CacheAmountLocalCurrency,
                        CacheAmountMainCurrency,
                        CacheAmountTHB,
                        CacheBoxID,
                        CacheWorkFlowID,
                        CacheDocumentTypeName,
                        CacheCurrentWorkFlowTypeID,
                        CacheCurrentStateName,
                        IsVerifyWithImage,
                        ReceiveDocumentDate,
                        VerifiedDate,
                        ApproveVerifiedDate,
                        PaidDate,
                        RemittanceDate,
                        TotalHold};
                rowDocumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentRow);
                return rowDocumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow FindByDocumentID(long DocumentID) {
                return ((DocumentRow)(this.Rows.Find(new object[] {
                            DocumentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DocumentDataTable cln = ((DocumentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnRequesterID = base.Columns["RequesterID"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnReceiverID = base.Columns["ReceiverID"];
                this.columnDocumentDate = base.Columns["DocumentDate"];
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnDocumentTypeID = base.Columns["DocumentTypeID"];
                this.columnApproverID = base.Columns["ApproverID"];
                this.columnSubject = base.Columns["Subject"];
                this.columnMemo = base.Columns["Memo"];
                this.columnPostingStatus = base.Columns["PostingStatus"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnPaymentMethodID = base.Columns["PaymentMethodID"];
                this.columnPostingDate = base.Columns["PostingDate"];
                this.columnBaseLineDate = base.Columns["BaseLineDate"];
                this.columnBankAccount = base.Columns["BankAccount"];
                this.columnIsVerifyImage = base.Columns["IsVerifyImage"];
                this.columnReferenceNo = base.Columns["ReferenceNo"];
                this.columnIsContainDocumentNo = base.Columns["IsContainDocumentNo"];
                this.columnMark = base.Columns["Mark"];
                this.columnArchived = base.Columns["Archived"];
                this.columnBusinessArea = base.Columns["BusinessArea"];
                this.columnSupplementary = base.Columns["Supplementary"];
                this.columnApproveDate = base.Columns["ApproveDate"];
                this.columnCacheServiceTeamID = base.Columns["CacheServiceTeamID"];
                this.columnCachePBID = base.Columns["CachePBID"];
                this.columnCacheAttachment = base.Columns["CacheAttachment"];
                this.columnCacheCurrentState = base.Columns["CacheCurrentState"];
                this.columnCacheCreatorName = base.Columns["CacheCreatorName"];
                this.columnCacheRequesterName = base.Columns["CacheRequesterName"];
                this.columnCacheAmountLocalCurrency = base.Columns["CacheAmountLocalCurrency"];
                this.columnCacheAmountMainCurrency = base.Columns["CacheAmountMainCurrency"];
                this.columnCacheAmountTHB = base.Columns["CacheAmountTHB"];
                this.columnCacheBoxID = base.Columns["CacheBoxID"];
                this.columnCacheWorkFlowID = base.Columns["CacheWorkFlowID"];
                this.columnCacheDocumentTypeName = base.Columns["CacheDocumentTypeName"];
                this.columnCacheCurrentWorkFlowTypeID = base.Columns["CacheCurrentWorkFlowTypeID"];
                this.columnCacheCurrentStateName = base.Columns["CacheCurrentStateName"];
                this.columnIsVerifyWithImage = base.Columns["IsVerifyWithImage"];
                this.columnReceiveDocumentDate = base.Columns["ReceiveDocumentDate"];
                this.columnVerifiedDate = base.Columns["VerifiedDate"];
                this.columnApproveVerifiedDate = base.Columns["ApproveVerifiedDate"];
                this.columnPaidDate = base.Columns["PaidDate"];
                this.columnRemittanceDate = base.Columns["RemittanceDate"];
                this.columnTotalHold = base.Columns["TotalHold"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnRequesterID = new global::System.Data.DataColumn("RequesterID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequesterID);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnReceiverID = new global::System.Data.DataColumn("ReceiverID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverID);
                this.columnDocumentDate = new global::System.Data.DataColumn("DocumentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentDate);
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnDocumentTypeID = new global::System.Data.DataColumn("DocumentTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentTypeID);
                this.columnApproverID = new global::System.Data.DataColumn("ApproverID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproverID);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnPostingStatus = new global::System.Data.DataColumn("PostingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingStatus);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnPaymentMethodID = new global::System.Data.DataColumn("PaymentMethodID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMethodID);
                this.columnPostingDate = new global::System.Data.DataColumn("PostingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingDate);
                this.columnBaseLineDate = new global::System.Data.DataColumn("BaseLineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseLineDate);
                this.columnBankAccount = new global::System.Data.DataColumn("BankAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccount);
                this.columnIsVerifyImage = new global::System.Data.DataColumn("IsVerifyImage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVerifyImage);
                this.columnReferenceNo = new global::System.Data.DataColumn("ReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNo);
                this.columnIsContainDocumentNo = new global::System.Data.DataColumn("IsContainDocumentNo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsContainDocumentNo);
                this.columnMark = new global::System.Data.DataColumn("Mark", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMark);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnBusinessArea = new global::System.Data.DataColumn("BusinessArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessArea);
                this.columnSupplementary = new global::System.Data.DataColumn("Supplementary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplementary);
                this.columnApproveDate = new global::System.Data.DataColumn("ApproveDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveDate);
                this.columnCacheServiceTeamID = new global::System.Data.DataColumn("CacheServiceTeamID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheServiceTeamID);
                this.columnCachePBID = new global::System.Data.DataColumn("CachePBID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCachePBID);
                this.columnCacheAttachment = new global::System.Data.DataColumn("CacheAttachment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAttachment);
                this.columnCacheCurrentState = new global::System.Data.DataColumn("CacheCurrentState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCurrentState);
                this.columnCacheCreatorName = new global::System.Data.DataColumn("CacheCreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCreatorName);
                this.columnCacheRequesterName = new global::System.Data.DataColumn("CacheRequesterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheRequesterName);
                this.columnCacheAmountLocalCurrency = new global::System.Data.DataColumn("CacheAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAmountLocalCurrency);
                this.columnCacheAmountMainCurrency = new global::System.Data.DataColumn("CacheAmountMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAmountMainCurrency);
                this.columnCacheAmountTHB = new global::System.Data.DataColumn("CacheAmountTHB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAmountTHB);
                this.columnCacheBoxID = new global::System.Data.DataColumn("CacheBoxID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheBoxID);
                this.columnCacheWorkFlowID = new global::System.Data.DataColumn("CacheWorkFlowID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheWorkFlowID);
                this.columnCacheDocumentTypeName = new global::System.Data.DataColumn("CacheDocumentTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheDocumentTypeName);
                this.columnCacheCurrentWorkFlowTypeID = new global::System.Data.DataColumn("CacheCurrentWorkFlowTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCurrentWorkFlowTypeID);
                this.columnCacheCurrentStateName = new global::System.Data.DataColumn("CacheCurrentStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCurrentStateName);
                this.columnIsVerifyWithImage = new global::System.Data.DataColumn("IsVerifyWithImage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVerifyWithImage);
                this.columnReceiveDocumentDate = new global::System.Data.DataColumn("ReceiveDocumentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDocumentDate);
                this.columnVerifiedDate = new global::System.Data.DataColumn("VerifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerifiedDate);
                this.columnApproveVerifiedDate = new global::System.Data.DataColumn("ApproveVerifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveVerifiedDate);
                this.columnPaidDate = new global::System.Data.DataColumn("PaidDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidDate);
                this.columnRemittanceDate = new global::System.Data.DataColumn("RemittanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemittanceDate);
                this.columnTotalHold = new global::System.Data.DataColumn("TotalHold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHold);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentID}, true));
                this.columnDocumentID.AutoIncrement = true;
                this.columnDocumentID.AutoIncrementSeed = -1;
                this.columnDocumentID.AutoIncrementStep = -1;
                this.columnDocumentID.AllowDBNull = false;
                this.columnDocumentID.ReadOnly = true;
                this.columnDocumentID.Unique = true;
                this.columnDocumentNo.MaxLength = 20;
                this.columnSubject.MaxLength = 200;
                this.columnMemo.MaxLength = 1000;
                this.columnPostingStatus.MaxLength = 2;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnBranchCode.MaxLength = 20;
                this.columnBankAccount.MaxLength = 6;
                this.columnReferenceNo.MaxLength = 50;
                this.columnBusinessArea.MaxLength = 10;
                this.columnSupplementary.MaxLength = 50;
                this.columnCacheCreatorName.MaxLength = 100;
                this.columnCacheRequesterName.MaxLength = 100;
                this.columnCacheBoxID.MaxLength = 20;
                this.columnCacheDocumentTypeName.MaxLength = 100;
                this.columnCacheCurrentStateName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow NewDocumentRow() {
                return ((DocumentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentRowChanged != null)) {
                    this.DocumentRowChanged(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentRowChanging != null)) {
                    this.DocumentRowChanging(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentRowDeleted != null)) {
                    this.DocumentRowDeleted(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentRowDeleting != null)) {
                    this.DocumentRowDeleting(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDocumentRow(DocumentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentInitiatorDataTable : global::System.Data.TypedTableBase<DocumentInitiatorRow> {
            
            private global::System.Data.DataColumn columnInitiatorID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnSeq;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnInitiatorType;
            
            private global::System.Data.DataColumn columnDoApprove;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnisSkip;
            
            private global::System.Data.DataColumn columnSkipReason;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorDataTable() {
                this.TableName = "DocumentInitiator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentInitiatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DocumentInitiatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitiatorIDColumn {
                get {
                    return this.columnInitiatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeqColumn {
                get {
                    return this.columnSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitiatorTypeColumn {
                get {
                    return this.columnInitiatorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoApproveColumn {
                get {
                    return this.columnDoApprove;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isSkipColumn {
                get {
                    return this.columnisSkip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SkipReasonColumn {
                get {
                    return this.columnSkipReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow this[int index] {
                get {
                    return ((DocumentInitiatorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDocumentInitiatorRow(DocumentInitiatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow AddDocumentInitiatorRow(DocumentRow parentDocumentRowByFK_DocumentInitiator_Document, short Seq, long UserID, string InitiatorType, bool DoApprove, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion, bool isSkip, string SkipReason) {
                DocumentInitiatorRow rowDocumentInitiatorRow = ((DocumentInitiatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Seq,
                        UserID,
                        InitiatorType,
                        DoApprove,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        isSkip,
                        SkipReason};
                if ((parentDocumentRowByFK_DocumentInitiator_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_DocumentInitiator_Document[0];
                }
                rowDocumentInitiatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentInitiatorRow);
                return rowDocumentInitiatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow FindByInitiatorID(long InitiatorID) {
                return ((DocumentInitiatorRow)(this.Rows.Find(new object[] {
                            InitiatorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DocumentInitiatorDataTable cln = ((DocumentInitiatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentInitiatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInitiatorID = base.Columns["InitiatorID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnSeq = base.Columns["Seq"];
                this.columnUserID = base.Columns["UserID"];
                this.columnInitiatorType = base.Columns["InitiatorType"];
                this.columnDoApprove = base.Columns["DoApprove"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnisSkip = base.Columns["isSkip"];
                this.columnSkipReason = base.Columns["SkipReason"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInitiatorID = new global::System.Data.DataColumn("InitiatorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitiatorID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnSeq = new global::System.Data.DataColumn("Seq", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeq);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnInitiatorType = new global::System.Data.DataColumn("InitiatorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitiatorType);
                this.columnDoApprove = new global::System.Data.DataColumn("DoApprove", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoApprove);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnisSkip = new global::System.Data.DataColumn("isSkip", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSkip);
                this.columnSkipReason = new global::System.Data.DataColumn("SkipReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkipReason);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInitiatorID}, true));
                this.columnInitiatorID.AutoIncrement = true;
                this.columnInitiatorID.AutoIncrementSeed = -1;
                this.columnInitiatorID.AutoIncrementStep = -1;
                this.columnInitiatorID.AllowDBNull = false;
                this.columnInitiatorID.ReadOnly = true;
                this.columnInitiatorID.Unique = true;
                this.columnSeq.DefaultValue = ((short)(0));
                this.columnInitiatorType.DefaultValue = ((string)(""));
                this.columnInitiatorType.MaxLength = 1;
                this.columnDoApprove.DefaultValue = ((bool)(false));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnisSkip.DefaultValue = ((bool)(false));
                this.columnSkipReason.DefaultValue = ((string)(""));
                this.columnSkipReason.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow NewDocumentInitiatorRow() {
                return ((DocumentInitiatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentInitiatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentInitiatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentInitiatorRowChanged != null)) {
                    this.DocumentInitiatorRowChanged(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentInitiatorRowChanging != null)) {
                    this.DocumentInitiatorRowChanging(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentInitiatorRowDeleted != null)) {
                    this.DocumentInitiatorRowDeleted(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentInitiatorRowDeleting != null)) {
                    this.DocumentInitiatorRowDeleting(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDocumentInitiatorRow(DocumentInitiatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentInitiatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkFlowDataTable : global::System.Data.TypedTableBase<WorkFlowRow> {
            
            private global::System.Data.DataColumn columnWorkFlowID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnWorkFlowTypeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCurrentState;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowDataTable() {
                this.TableName = "WorkFlow";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkFlowDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WorkFlowDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkFlowIDColumn {
                get {
                    return this.columnWorkFlowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkFlowTypeIDColumn {
                get {
                    return this.columnWorkFlowTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentStateColumn {
                get {
                    return this.columnCurrentState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow this[int index] {
                get {
                    return ((WorkFlowRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWorkFlowRow(WorkFlowRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow AddWorkFlowRow(DocumentRow parentDocumentRowByFK_WorkFlow_Document, int WorkFlowTypeID, string Description, int CurrentState, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                WorkFlowRow rowWorkFlowRow = ((WorkFlowRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        WorkFlowTypeID,
                        Description,
                        CurrentState,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentDocumentRowByFK_WorkFlow_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_WorkFlow_Document[0];
                }
                rowWorkFlowRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkFlowRow);
                return rowWorkFlowRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow FindByWorkFlowID(long WorkFlowID) {
                return ((WorkFlowRow)(this.Rows.Find(new object[] {
                            WorkFlowID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WorkFlowDataTable cln = ((WorkFlowDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkFlowDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWorkFlowID = base.Columns["WorkFlowID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnWorkFlowTypeID = base.Columns["WorkFlowTypeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnCurrentState = base.Columns["CurrentState"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWorkFlowID = new global::System.Data.DataColumn("WorkFlowID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFlowID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnWorkFlowTypeID = new global::System.Data.DataColumn("WorkFlowTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFlowTypeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCurrentState = new global::System.Data.DataColumn("CurrentState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentState);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkFlowID}, true));
                this.columnWorkFlowID.AutoIncrement = true;
                this.columnWorkFlowID.AutoIncrementSeed = -1;
                this.columnWorkFlowID.AutoIncrementStep = -1;
                this.columnWorkFlowID.AllowDBNull = false;
                this.columnWorkFlowID.ReadOnly = true;
                this.columnWorkFlowID.Unique = true;
                this.columnDocumentID.DefaultValue = ((long)(0));
                this.columnDescription.MaxLength = 100;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow NewWorkFlowRow() {
                return ((WorkFlowRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkFlowRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WorkFlowRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkFlowRowChanged != null)) {
                    this.WorkFlowRowChanged(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkFlowRowChanging != null)) {
                    this.WorkFlowRowChanging(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkFlowRowDeleted != null)) {
                    this.WorkFlowRowDeleted(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkFlowRowDeleting != null)) {
                    this.WorkFlowRowDeleting(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWorkFlowRow(WorkFlowRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkFlowDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentAttachmentDataTable : global::System.Data.TypedTableBase<DocumentAttachmentRow> {
            
            private global::System.Data.DataColumn columnAttachmentID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnAttachFileName;
            
            private global::System.Data.DataColumn columnAttachFilePath;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentDataTable() {
                this.TableName = "DocumentAttachment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentAttachmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DocumentAttachmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachmentIDColumn {
                get {
                    return this.columnAttachmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachFileNameColumn {
                get {
                    return this.columnAttachFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachFilePathColumn {
                get {
                    return this.columnAttachFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow this[int index] {
                get {
                    return ((DocumentAttachmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDocumentAttachmentRow(DocumentAttachmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow AddDocumentAttachmentRow(DocumentRow parentDocumentRowByFK_DocumentAttachment_Document, string AttachFileName, string AttachFilePath, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                DocumentAttachmentRow rowDocumentAttachmentRow = ((DocumentAttachmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        AttachFileName,
                        AttachFilePath,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentDocumentRowByFK_DocumentAttachment_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_DocumentAttachment_Document[0];
                }
                rowDocumentAttachmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentAttachmentRow);
                return rowDocumentAttachmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow FindByAttachmentID(long AttachmentID) {
                return ((DocumentAttachmentRow)(this.Rows.Find(new object[] {
                            AttachmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DocumentAttachmentDataTable cln = ((DocumentAttachmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentAttachmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAttachmentID = base.Columns["AttachmentID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnAttachFileName = base.Columns["AttachFileName"];
                this.columnAttachFilePath = base.Columns["AttachFilePath"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAttachmentID = new global::System.Data.DataColumn("AttachmentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachmentID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnAttachFileName = new global::System.Data.DataColumn("AttachFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachFileName);
                this.columnAttachFilePath = new global::System.Data.DataColumn("AttachFilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachFilePath);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAttachmentID}, true));
                this.columnAttachmentID.AutoIncrement = true;
                this.columnAttachmentID.AutoIncrementSeed = -1;
                this.columnAttachmentID.AutoIncrementStep = -1;
                this.columnAttachmentID.AllowDBNull = false;
                this.columnAttachmentID.ReadOnly = true;
                this.columnAttachmentID.Unique = true;
                this.columnAttachFileName.MaxLength = 50;
                this.columnAttachFilePath.MaxLength = 200;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow NewDocumentAttachmentRow() {
                return ((DocumentAttachmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentAttachmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentAttachmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentAttachmentRowChanged != null)) {
                    this.DocumentAttachmentRowChanged(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentAttachmentRowChanging != null)) {
                    this.DocumentAttachmentRowChanging(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentAttachmentRowDeleted != null)) {
                    this.DocumentAttachmentRowDeleted(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentAttachmentRowDeleting != null)) {
                    this.DocumentAttachmentRowDeleting(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDocumentAttachmentRow(DocumentAttachmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentAttachmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseDocumentDataTable : global::System.Data.TypedTableBase<FnExpenseDocumentRow> {
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnServiceTeamID;
            
            private global::System.Data.DataColumn columnPBID;
            
            private global::System.Data.DataColumn columnExpenseType;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnTotalExpense;
            
            private global::System.Data.DataColumn columnTotalAdvance;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnIsBusinessPurpose;
            
            private global::System.Data.DataColumn columnIsTrainningPurpose;
            
            private global::System.Data.DataColumn columnIsOtherPurpose;
            
            private global::System.Data.DataColumn columnOtherPurposeDescription;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnPersonalLevel;
            
            private global::System.Data.DataColumn columnExchangeRateForUSD;
            
            private global::System.Data.DataColumn columnTotalRemittance;
            
            private global::System.Data.DataColumn columnDifferenceAmount;
            
            private global::System.Data.DataColumn columnExchangeRateForUSDAdvance;
            
            private global::System.Data.DataColumn columnTADocumentID;
            
            private global::System.Data.DataColumn columnBoxID;
            
            private global::System.Data.DataColumn columnRemittancePostingStatus;
            
            private global::System.Data.DataColumn columnPayInGLAccount;
            
            private global::System.Data.DataColumn columnPayInValueDate;
            
            private global::System.Data.DataColumn columnReceivedMethod;
            
            private global::System.Data.DataColumn columnMainCurrencyID;
            
            private global::System.Data.DataColumn columnLocalCurrencyID;
            
            private global::System.Data.DataColumn columnTotalExpenseLocalCurrency;
            
            private global::System.Data.DataColumn columnTotalAdvanceLocalCurrency;
            
            private global::System.Data.DataColumn columnTotalRemittanceLocalCurrency;
            
            private global::System.Data.DataColumn columnDifferenceAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnTotalExpenseMainCurrency;
            
            private global::System.Data.DataColumn columnTotalAdvanceMainCurrency;
            
            private global::System.Data.DataColumn columnTotalRemittanceMainCurrency;
            
            private global::System.Data.DataColumn columnDifferenceAmountMainCurrency;
            
            private global::System.Data.DataColumn columnExchangeRateForLocalCurrency;
            
            private global::System.Data.DataColumn columnExchangeRateMainToTHBCurrency;
            
            private global::System.Data.DataColumn columnIsRepOffice;
            
            private global::System.Data.DataColumn columnAmountBeforeVerify;
            
            private global::System.Data.DataColumn columnAmountApproved;
            
            private global::System.Data.DataColumn columnFixedAdvanceDocumentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentDataTable() {
                this.TableName = "FnExpenseDocument";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseDocumentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseDocumentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceTeamIDColumn {
                get {
                    return this.columnServiceTeamID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PBIDColumn {
                get {
                    return this.columnPBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseTypeColumn {
                get {
                    return this.columnExpenseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalExpenseColumn {
                get {
                    return this.columnTotalExpense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAdvanceColumn {
                get {
                    return this.columnTotalAdvance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsBusinessPurposeColumn {
                get {
                    return this.columnIsBusinessPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTrainningPurposeColumn {
                get {
                    return this.columnIsTrainningPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOtherPurposeColumn {
                get {
                    return this.columnIsOtherPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherPurposeDescriptionColumn {
                get {
                    return this.columnOtherPurposeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PersonalLevelColumn {
                get {
                    return this.columnPersonalLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateForUSDColumn {
                get {
                    return this.columnExchangeRateForUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalRemittanceColumn {
                get {
                    return this.columnTotalRemittance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceAmountColumn {
                get {
                    return this.columnDifferenceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateForUSDAdvanceColumn {
                get {
                    return this.columnExchangeRateForUSDAdvance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TADocumentIDColumn {
                get {
                    return this.columnTADocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoxIDColumn {
                get {
                    return this.columnBoxID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemittancePostingStatusColumn {
                get {
                    return this.columnRemittancePostingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayInGLAccountColumn {
                get {
                    return this.columnPayInGLAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayInValueDateColumn {
                get {
                    return this.columnPayInValueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedMethodColumn {
                get {
                    return this.columnReceivedMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MainCurrencyIDColumn {
                get {
                    return this.columnMainCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocalCurrencyIDColumn {
                get {
                    return this.columnLocalCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalExpenseLocalCurrencyColumn {
                get {
                    return this.columnTotalExpenseLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAdvanceLocalCurrencyColumn {
                get {
                    return this.columnTotalAdvanceLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalRemittanceLocalCurrencyColumn {
                get {
                    return this.columnTotalRemittanceLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceAmountLocalCurrencyColumn {
                get {
                    return this.columnDifferenceAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalExpenseMainCurrencyColumn {
                get {
                    return this.columnTotalExpenseMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAdvanceMainCurrencyColumn {
                get {
                    return this.columnTotalAdvanceMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalRemittanceMainCurrencyColumn {
                get {
                    return this.columnTotalRemittanceMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceAmountMainCurrencyColumn {
                get {
                    return this.columnDifferenceAmountMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateForLocalCurrencyColumn {
                get {
                    return this.columnExchangeRateForLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateMainToTHBCurrencyColumn {
                get {
                    return this.columnExchangeRateMainToTHBCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsRepOfficeColumn {
                get {
                    return this.columnIsRepOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountBeforeVerifyColumn {
                get {
                    return this.columnAmountBeforeVerify;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountApprovedColumn {
                get {
                    return this.columnAmountApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixedAdvanceDocumentIDColumn {
                get {
                    return this.columnFixedAdvanceDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow this[int index] {
                get {
                    return ((FnExpenseDocumentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseDocumentRowChangeEventHandler FnExpenseDocumentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseDocumentRowChangeEventHandler FnExpenseDocumentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseDocumentRowChangeEventHandler FnExpenseDocumentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseDocumentRowChangeEventHandler FnExpenseDocumentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseDocumentRow(FnExpenseDocumentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow AddFnExpenseDocumentRow(
                        DocumentRow parentDocumentRowByFK_FnExpenseDocument_Document, 
                        long ServiceTeamID, 
                        long PBID, 
                        string ExpenseType, 
                        string PaymentType, 
                        decimal TotalExpense, 
                        decimal TotalAdvance, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        bool IsBusinessPurpose, 
                        bool IsTrainningPurpose, 
                        bool IsOtherPurpose, 
                        string OtherPurposeDescription, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        string Country, 
                        string PersonalLevel, 
                        decimal ExchangeRateForUSD, 
                        decimal TotalRemittance, 
                        decimal DifferenceAmount, 
                        decimal ExchangeRateForUSDAdvance, 
                        long TADocumentID, 
                        string BoxID, 
                        string RemittancePostingStatus, 
                        string PayInGLAccount, 
                        System.DateTime PayInValueDate, 
                        string ReceivedMethod, 
                        short MainCurrencyID, 
                        short LocalCurrencyID, 
                        decimal TotalExpenseLocalCurrency, 
                        decimal TotalAdvanceLocalCurrency, 
                        decimal TotalRemittanceLocalCurrency, 
                        decimal DifferenceAmountLocalCurrency, 
                        decimal TotalExpenseMainCurrency, 
                        decimal TotalAdvanceMainCurrency, 
                        decimal TotalRemittanceMainCurrency, 
                        decimal DifferenceAmountMainCurrency, 
                        decimal ExchangeRateForLocalCurrency, 
                        decimal ExchangeRateMainToTHBCurrency, 
                        bool IsRepOffice, 
                        decimal AmountBeforeVerify, 
                        decimal AmountApproved, 
                        long FixedAdvanceDocumentID) {
                FnExpenseDocumentRow rowFnExpenseDocumentRow = ((FnExpenseDocumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ServiceTeamID,
                        PBID,
                        ExpenseType,
                        PaymentType,
                        TotalExpense,
                        TotalAdvance,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        IsBusinessPurpose,
                        IsTrainningPurpose,
                        IsOtherPurpose,
                        OtherPurposeDescription,
                        FromDate,
                        ToDate,
                        Country,
                        PersonalLevel,
                        ExchangeRateForUSD,
                        TotalRemittance,
                        DifferenceAmount,
                        ExchangeRateForUSDAdvance,
                        TADocumentID,
                        BoxID,
                        RemittancePostingStatus,
                        PayInGLAccount,
                        PayInValueDate,
                        ReceivedMethod,
                        MainCurrencyID,
                        LocalCurrencyID,
                        TotalExpenseLocalCurrency,
                        TotalAdvanceLocalCurrency,
                        TotalRemittanceLocalCurrency,
                        DifferenceAmountLocalCurrency,
                        TotalExpenseMainCurrency,
                        TotalAdvanceMainCurrency,
                        TotalRemittanceMainCurrency,
                        DifferenceAmountMainCurrency,
                        ExchangeRateForLocalCurrency,
                        ExchangeRateMainToTHBCurrency,
                        IsRepOffice,
                        AmountBeforeVerify,
                        AmountApproved,
                        FixedAdvanceDocumentID};
                if ((parentDocumentRowByFK_FnExpenseDocument_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_FnExpenseDocument_Document[0];
                }
                rowFnExpenseDocumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseDocumentRow);
                return rowFnExpenseDocumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow FindByExpenseID(long ExpenseID) {
                return ((FnExpenseDocumentRow)(this.Rows.Find(new object[] {
                            ExpenseID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseDocumentDataTable cln = ((FnExpenseDocumentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseDocumentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnServiceTeamID = base.Columns["ServiceTeamID"];
                this.columnPBID = base.Columns["PBID"];
                this.columnExpenseType = base.Columns["ExpenseType"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnTotalExpense = base.Columns["TotalExpense"];
                this.columnTotalAdvance = base.Columns["TotalAdvance"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnIsBusinessPurpose = base.Columns["IsBusinessPurpose"];
                this.columnIsTrainningPurpose = base.Columns["IsTrainningPurpose"];
                this.columnIsOtherPurpose = base.Columns["IsOtherPurpose"];
                this.columnOtherPurposeDescription = base.Columns["OtherPurposeDescription"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnCountry = base.Columns["Country"];
                this.columnPersonalLevel = base.Columns["PersonalLevel"];
                this.columnExchangeRateForUSD = base.Columns["ExchangeRateForUSD"];
                this.columnTotalRemittance = base.Columns["TotalRemittance"];
                this.columnDifferenceAmount = base.Columns["DifferenceAmount"];
                this.columnExchangeRateForUSDAdvance = base.Columns["ExchangeRateForUSDAdvance"];
                this.columnTADocumentID = base.Columns["TADocumentID"];
                this.columnBoxID = base.Columns["BoxID"];
                this.columnRemittancePostingStatus = base.Columns["RemittancePostingStatus"];
                this.columnPayInGLAccount = base.Columns["PayInGLAccount"];
                this.columnPayInValueDate = base.Columns["PayInValueDate"];
                this.columnReceivedMethod = base.Columns["ReceivedMethod"];
                this.columnMainCurrencyID = base.Columns["MainCurrencyID"];
                this.columnLocalCurrencyID = base.Columns["LocalCurrencyID"];
                this.columnTotalExpenseLocalCurrency = base.Columns["TotalExpenseLocalCurrency"];
                this.columnTotalAdvanceLocalCurrency = base.Columns["TotalAdvanceLocalCurrency"];
                this.columnTotalRemittanceLocalCurrency = base.Columns["TotalRemittanceLocalCurrency"];
                this.columnDifferenceAmountLocalCurrency = base.Columns["DifferenceAmountLocalCurrency"];
                this.columnTotalExpenseMainCurrency = base.Columns["TotalExpenseMainCurrency"];
                this.columnTotalAdvanceMainCurrency = base.Columns["TotalAdvanceMainCurrency"];
                this.columnTotalRemittanceMainCurrency = base.Columns["TotalRemittanceMainCurrency"];
                this.columnDifferenceAmountMainCurrency = base.Columns["DifferenceAmountMainCurrency"];
                this.columnExchangeRateForLocalCurrency = base.Columns["ExchangeRateForLocalCurrency"];
                this.columnExchangeRateMainToTHBCurrency = base.Columns["ExchangeRateMainToTHBCurrency"];
                this.columnIsRepOffice = base.Columns["IsRepOffice"];
                this.columnAmountBeforeVerify = base.Columns["AmountBeforeVerify"];
                this.columnAmountApproved = base.Columns["AmountApproved"];
                this.columnFixedAdvanceDocumentID = base.Columns["FixedAdvanceDocumentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnServiceTeamID = new global::System.Data.DataColumn("ServiceTeamID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTeamID);
                this.columnPBID = new global::System.Data.DataColumn("PBID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBID);
                this.columnExpenseType = new global::System.Data.DataColumn("ExpenseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseType);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnTotalExpense = new global::System.Data.DataColumn("TotalExpense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpense);
                this.columnTotalAdvance = new global::System.Data.DataColumn("TotalAdvance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAdvance);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnIsBusinessPurpose = new global::System.Data.DataColumn("IsBusinessPurpose", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBusinessPurpose);
                this.columnIsTrainningPurpose = new global::System.Data.DataColumn("IsTrainningPurpose", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTrainningPurpose);
                this.columnIsOtherPurpose = new global::System.Data.DataColumn("IsOtherPurpose", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOtherPurpose);
                this.columnOtherPurposeDescription = new global::System.Data.DataColumn("OtherPurposeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherPurposeDescription);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnPersonalLevel = new global::System.Data.DataColumn("PersonalLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalLevel);
                this.columnExchangeRateForUSD = new global::System.Data.DataColumn("ExchangeRateForUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRateForUSD);
                this.columnTotalRemittance = new global::System.Data.DataColumn("TotalRemittance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRemittance);
                this.columnDifferenceAmount = new global::System.Data.DataColumn("DifferenceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifferenceAmount);
                this.columnExchangeRateForUSDAdvance = new global::System.Data.DataColumn("ExchangeRateForUSDAdvance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRateForUSDAdvance);
                this.columnTADocumentID = new global::System.Data.DataColumn("TADocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTADocumentID);
                this.columnBoxID = new global::System.Data.DataColumn("BoxID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxID);
                this.columnRemittancePostingStatus = new global::System.Data.DataColumn("RemittancePostingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemittancePostingStatus);
                this.columnPayInGLAccount = new global::System.Data.DataColumn("PayInGLAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayInGLAccount);
                this.columnPayInValueDate = new global::System.Data.DataColumn("PayInValueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayInValueDate);
                this.columnReceivedMethod = new global::System.Data.DataColumn("ReceivedMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedMethod);
                this.columnMainCurrencyID = new global::System.Data.DataColumn("MainCurrencyID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCurrencyID);
                this.columnLocalCurrencyID = new global::System.Data.DataColumn("LocalCurrencyID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCurrencyID);
                this.columnTotalExpenseLocalCurrency = new global::System.Data.DataColumn("TotalExpenseLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpenseLocalCurrency);
                this.columnTotalAdvanceLocalCurrency = new global::System.Data.DataColumn("TotalAdvanceLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAdvanceLocalCurrency);
                this.columnTotalRemittanceLocalCurrency = new global::System.Data.DataColumn("TotalRemittanceLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRemittanceLocalCurrency);
                this.columnDifferenceAmountLocalCurrency = new global::System.Data.DataColumn("DifferenceAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifferenceAmountLocalCurrency);
                this.columnTotalExpenseMainCurrency = new global::System.Data.DataColumn("TotalExpenseMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpenseMainCurrency);
                this.columnTotalAdvanceMainCurrency = new global::System.Data.DataColumn("TotalAdvanceMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAdvanceMainCurrency);
                this.columnTotalRemittanceMainCurrency = new global::System.Data.DataColumn("TotalRemittanceMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRemittanceMainCurrency);
                this.columnDifferenceAmountMainCurrency = new global::System.Data.DataColumn("DifferenceAmountMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifferenceAmountMainCurrency);
                this.columnExchangeRateForLocalCurrency = new global::System.Data.DataColumn("ExchangeRateForLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRateForLocalCurrency);
                this.columnExchangeRateMainToTHBCurrency = new global::System.Data.DataColumn("ExchangeRateMainToTHBCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRateMainToTHBCurrency);
                this.columnIsRepOffice = new global::System.Data.DataColumn("IsRepOffice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRepOffice);
                this.columnAmountBeforeVerify = new global::System.Data.DataColumn("AmountBeforeVerify", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountBeforeVerify);
                this.columnAmountApproved = new global::System.Data.DataColumn("AmountApproved", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountApproved);
                this.columnFixedAdvanceDocumentID = new global::System.Data.DataColumn("FixedAdvanceDocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixedAdvanceDocumentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExpenseID}, true));
                this.columnExpenseID.AutoIncrement = true;
                this.columnExpenseID.AutoIncrementSeed = -1;
                this.columnExpenseID.AutoIncrementStep = -1;
                this.columnExpenseID.AllowDBNull = false;
                this.columnExpenseID.ReadOnly = true;
                this.columnExpenseID.Unique = true;
                this.columnDocumentID.AllowDBNull = false;
                this.columnServiceTeamID.AllowDBNull = false;
                this.columnExpenseType.MaxLength = 5;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 50;
                this.columnTotalExpense.DefaultValue = ((decimal)(0m));
                this.columnTotalAdvance.DefaultValue = ((decimal)(0m));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnOtherPurposeDescription.MaxLength = 100;
                this.columnCountry.MaxLength = 100;
                this.columnPersonalLevel.MaxLength = 50;
                this.columnTotalRemittance.DefaultValue = ((decimal)(0m));
                this.columnDifferenceAmount.DefaultValue = ((decimal)(0m));
                this.columnBoxID.MaxLength = 20;
                this.columnRemittancePostingStatus.MaxLength = 2;
                this.columnPayInGLAccount.MaxLength = 20;
                this.columnReceivedMethod.MaxLength = 20;
                this.columnTotalExpenseLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnTotalAdvanceLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnTotalRemittanceLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnDifferenceAmountLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnTotalExpenseMainCurrency.DefaultValue = ((decimal)(0m));
                this.columnTotalAdvanceMainCurrency.DefaultValue = ((decimal)(0m));
                this.columnTotalRemittanceMainCurrency.DefaultValue = ((decimal)(0m));
                this.columnDifferenceAmountMainCurrency.DefaultValue = ((decimal)(0m));
                this.columnAmountBeforeVerify.DefaultValue = ((decimal)(0m));
                this.columnAmountApproved.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow NewFnExpenseDocumentRow() {
                return ((FnExpenseDocumentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseDocumentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseDocumentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseDocumentRowChanged != null)) {
                    this.FnExpenseDocumentRowChanged(this, new FnExpenseDocumentRowChangeEvent(((FnExpenseDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseDocumentRowChanging != null)) {
                    this.FnExpenseDocumentRowChanging(this, new FnExpenseDocumentRowChangeEvent(((FnExpenseDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseDocumentRowDeleted != null)) {
                    this.FnExpenseDocumentRowDeleted(this, new FnExpenseDocumentRowChangeEvent(((FnExpenseDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseDocumentRowDeleting != null)) {
                    this.FnExpenseDocumentRowDeleting(this, new FnExpenseDocumentRowChangeEvent(((FnExpenseDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseDocumentRow(FnExpenseDocumentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseDocumentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseAdvanceDataTable : global::System.Data.TypedTableBase<FnExpenseAdvanceRow> {
            
            private global::System.Data.DataColumn columnFnExpenseAdvanceID;
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnAdvanceID;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceDataTable() {
                this.TableName = "FnExpenseAdvance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseAdvanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseAdvanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FnExpenseAdvanceIDColumn {
                get {
                    return this.columnFnExpenseAdvanceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdvanceIDColumn {
                get {
                    return this.columnAdvanceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow this[int index] {
                get {
                    return ((FnExpenseAdvanceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceRowChangeEventHandler FnExpenseAdvanceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceRowChangeEventHandler FnExpenseAdvanceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceRowChangeEventHandler FnExpenseAdvanceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceRowChangeEventHandler FnExpenseAdvanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseAdvanceRow(FnExpenseAdvanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow AddFnExpenseAdvanceRow(FnExpenseDocumentRow parentFnExpenseDocumentRowByFK_FnExpenseAdvance_FnExpenseDocument, long AdvanceID, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                FnExpenseAdvanceRow rowFnExpenseAdvanceRow = ((FnExpenseAdvanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        AdvanceID,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentFnExpenseDocumentRowByFK_FnExpenseAdvance_FnExpenseDocument != null)) {
                    columnValuesArray[1] = parentFnExpenseDocumentRowByFK_FnExpenseAdvance_FnExpenseDocument[0];
                }
                rowFnExpenseAdvanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseAdvanceRow);
                return rowFnExpenseAdvanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow FindByFnExpenseAdvanceID(long FnExpenseAdvanceID) {
                return ((FnExpenseAdvanceRow)(this.Rows.Find(new object[] {
                            FnExpenseAdvanceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseAdvanceDataTable cln = ((FnExpenseAdvanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseAdvanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFnExpenseAdvanceID = base.Columns["FnExpenseAdvanceID"];
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnAdvanceID = base.Columns["AdvanceID"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFnExpenseAdvanceID = new global::System.Data.DataColumn("FnExpenseAdvanceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFnExpenseAdvanceID);
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnAdvanceID = new global::System.Data.DataColumn("AdvanceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvanceID);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFnExpenseAdvanceID}, true));
                this.columnFnExpenseAdvanceID.AutoIncrement = true;
                this.columnFnExpenseAdvanceID.AutoIncrementSeed = -1;
                this.columnFnExpenseAdvanceID.AutoIncrementStep = -1;
                this.columnFnExpenseAdvanceID.AllowDBNull = false;
                this.columnFnExpenseAdvanceID.ReadOnly = true;
                this.columnFnExpenseAdvanceID.Unique = true;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow NewFnExpenseAdvanceRow() {
                return ((FnExpenseAdvanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseAdvanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseAdvanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseAdvanceRowChanged != null)) {
                    this.FnExpenseAdvanceRowChanged(this, new FnExpenseAdvanceRowChangeEvent(((FnExpenseAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseAdvanceRowChanging != null)) {
                    this.FnExpenseAdvanceRowChanging(this, new FnExpenseAdvanceRowChangeEvent(((FnExpenseAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseAdvanceRowDeleted != null)) {
                    this.FnExpenseAdvanceRowDeleted(this, new FnExpenseAdvanceRowChangeEvent(((FnExpenseAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseAdvanceRowDeleting != null)) {
                    this.FnExpenseAdvanceRowDeleting(this, new FnExpenseAdvanceRowChangeEvent(((FnExpenseAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseAdvanceRow(FnExpenseAdvanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseAdvanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseAdvanceExchangeRateDataTable : global::System.Data.TypedTableBase<FnExpenseAdvanceExchangeRateRow> {
            
            private global::System.Data.DataColumn columnExpenseAdvanceExchangeRateID;
            
            private global::System.Data.DataColumn columnFnExpenseAdvanceID;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateDataTable() {
                this.TableName = "FnExpenseAdvanceExchangeRate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseAdvanceExchangeRateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseAdvanceExchangeRateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseAdvanceExchangeRateIDColumn {
                get {
                    return this.columnExpenseAdvanceExchangeRateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FnExpenseAdvanceIDColumn {
                get {
                    return this.columnFnExpenseAdvanceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRow this[int index] {
                get {
                    return ((FnExpenseAdvanceExchangeRateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceExchangeRateRowChangeEventHandler FnExpenseAdvanceExchangeRateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceExchangeRateRowChangeEventHandler FnExpenseAdvanceExchangeRateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceExchangeRateRowChangeEventHandler FnExpenseAdvanceExchangeRateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseAdvanceExchangeRateRowChangeEventHandler FnExpenseAdvanceExchangeRateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseAdvanceExchangeRateRow(FnExpenseAdvanceExchangeRateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRow AddFnExpenseAdvanceExchangeRateRow(FnExpenseAdvanceRow parentFnExpenseAdvanceRowByFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance, short CurrencyID, decimal ExchangeRate, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                FnExpenseAdvanceExchangeRateRow rowFnExpenseAdvanceExchangeRateRow = ((FnExpenseAdvanceExchangeRateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CurrencyID,
                        ExchangeRate,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentFnExpenseAdvanceRowByFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance != null)) {
                    columnValuesArray[1] = parentFnExpenseAdvanceRowByFK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance[0];
                }
                rowFnExpenseAdvanceExchangeRateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseAdvanceExchangeRateRow);
                return rowFnExpenseAdvanceExchangeRateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRow FindByExpenseAdvanceExchangeRateID(long ExpenseAdvanceExchangeRateID) {
                return ((FnExpenseAdvanceExchangeRateRow)(this.Rows.Find(new object[] {
                            ExpenseAdvanceExchangeRateID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseAdvanceExchangeRateDataTable cln = ((FnExpenseAdvanceExchangeRateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseAdvanceExchangeRateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExpenseAdvanceExchangeRateID = base.Columns["ExpenseAdvanceExchangeRateID"];
                this.columnFnExpenseAdvanceID = base.Columns["FnExpenseAdvanceID"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExpenseAdvanceExchangeRateID = new global::System.Data.DataColumn("ExpenseAdvanceExchangeRateID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseAdvanceExchangeRateID);
                this.columnFnExpenseAdvanceID = new global::System.Data.DataColumn("FnExpenseAdvanceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFnExpenseAdvanceID);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExpenseAdvanceExchangeRateID}, true));
                this.columnExpenseAdvanceExchangeRateID.AutoIncrement = true;
                this.columnExpenseAdvanceExchangeRateID.AutoIncrementSeed = -1;
                this.columnExpenseAdvanceExchangeRateID.AutoIncrementStep = -1;
                this.columnExpenseAdvanceExchangeRateID.AllowDBNull = false;
                this.columnExpenseAdvanceExchangeRateID.ReadOnly = true;
                this.columnExpenseAdvanceExchangeRateID.Unique = true;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRow NewFnExpenseAdvanceExchangeRateRow() {
                return ((FnExpenseAdvanceExchangeRateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseAdvanceExchangeRateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseAdvanceExchangeRateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseAdvanceExchangeRateRowChanged != null)) {
                    this.FnExpenseAdvanceExchangeRateRowChanged(this, new FnExpenseAdvanceExchangeRateRowChangeEvent(((FnExpenseAdvanceExchangeRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseAdvanceExchangeRateRowChanging != null)) {
                    this.FnExpenseAdvanceExchangeRateRowChanging(this, new FnExpenseAdvanceExchangeRateRowChangeEvent(((FnExpenseAdvanceExchangeRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseAdvanceExchangeRateRowDeleted != null)) {
                    this.FnExpenseAdvanceExchangeRateRowDeleted(this, new FnExpenseAdvanceExchangeRateRowChangeEvent(((FnExpenseAdvanceExchangeRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseAdvanceExchangeRateRowDeleting != null)) {
                    this.FnExpenseAdvanceExchangeRateRowDeleting(this, new FnExpenseAdvanceExchangeRateRowChangeEvent(((FnExpenseAdvanceExchangeRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseAdvanceExchangeRateRow(FnExpenseAdvanceExchangeRateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseAdvanceExchangeRateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseMileageDataTable : global::System.Data.TypedTableBase<FnExpenseMileageRow> {
            
            private global::System.Data.DataColumn columnExpenseMileageID;
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnCarLicenseNo;
            
            private global::System.Data.DataColumn columnTypeOfCar;
            
            private global::System.Data.DataColumn columnOwner;
            
            private global::System.Data.DataColumn columnPermissionNo;
            
            private global::System.Data.DataColumn columnHomeToOfficeRoundTrip;
            
            private global::System.Data.DataColumn columnPrivateUse;
            
            private global::System.Data.DataColumn columnFirst100KmRate;
            
            private global::System.Data.DataColumn columnExceed100KmRate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnHelpingAmount;
            
            private global::System.Data.DataColumn columnOverHelpingAmount;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnCostCenterID;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnIOID;
            
            private global::System.Data.DataColumn columnIsOverrideLevel;
            
            private global::System.Data.DataColumn columnIsOverrideCompanyId;
            
            private global::System.Data.DataColumn columnOverrideCompanyId;
            
            private global::System.Data.DataColumn columnOverrideUserPersonalLevelCode;
            
            private global::System.Data.DataColumn columnCurrentCompanyId;
            
            private global::System.Data.DataColumn columnCurrentUserPersonalLevelCode;
            
            private global::System.Data.DataColumn columnOverrideLevelRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageDataTable() {
                this.TableName = "FnExpenseMileage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseMileageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseMileageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseMileageIDColumn {
                get {
                    return this.columnExpenseMileageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarLicenseNoColumn {
                get {
                    return this.columnCarLicenseNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeOfCarColumn {
                get {
                    return this.columnTypeOfCar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwnerColumn {
                get {
                    return this.columnOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PermissionNoColumn {
                get {
                    return this.columnPermissionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HomeToOfficeRoundTripColumn {
                get {
                    return this.columnHomeToOfficeRoundTrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrivateUseColumn {
                get {
                    return this.columnPrivateUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn First100KmRateColumn {
                get {
                    return this.columnFirst100KmRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Exceed100KmRateColumn {
                get {
                    return this.columnExceed100KmRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HelpingAmountColumn {
                get {
                    return this.columnHelpingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverHelpingAmountColumn {
                get {
                    return this.columnOverHelpingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCenterIDColumn {
                get {
                    return this.columnCostCenterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IOIDColumn {
                get {
                    return this.columnIOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOverrideLevelColumn {
                get {
                    return this.columnIsOverrideLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOverrideCompanyIdColumn {
                get {
                    return this.columnIsOverrideCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverrideCompanyIdColumn {
                get {
                    return this.columnOverrideCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverrideUserPersonalLevelCodeColumn {
                get {
                    return this.columnOverrideUserPersonalLevelCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentCompanyIdColumn {
                get {
                    return this.columnCurrentCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentUserPersonalLevelCodeColumn {
                get {
                    return this.columnCurrentUserPersonalLevelCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverrideLevelRemarkColumn {
                get {
                    return this.columnOverrideLevelRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow this[int index] {
                get {
                    return ((FnExpenseMileageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageRowChangeEventHandler FnExpenseMileageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageRowChangeEventHandler FnExpenseMileageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageRowChangeEventHandler FnExpenseMileageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageRowChangeEventHandler FnExpenseMileageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseMileageRow(FnExpenseMileageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow AddFnExpenseMileageRow(
                        FnExpenseDocumentRow parentFnExpenseDocumentRowByFK_FnExpenseMileage_FnExpenseDocument, 
                        string CarLicenseNo, 
                        string TypeOfCar, 
                        string Owner, 
                        string PermissionNo, 
                        decimal HomeToOfficeRoundTrip, 
                        decimal PrivateUse, 
                        decimal First100KmRate, 
                        decimal Exceed100KmRate, 
                        decimal TotalAmount, 
                        decimal HelpingAmount, 
                        decimal OverHelpingAmount, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        long CostCenterID, 
                        long AccountID, 
                        long IOID, 
                        bool IsOverrideLevel, 
                        bool IsOverrideCompanyId, 
                        long OverrideCompanyId, 
                        string OverrideUserPersonalLevelCode, 
                        long CurrentCompanyId, 
                        string CurrentUserPersonalLevelCode, 
                        string OverrideLevelRemark) {
                FnExpenseMileageRow rowFnExpenseMileageRow = ((FnExpenseMileageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CarLicenseNo,
                        TypeOfCar,
                        Owner,
                        PermissionNo,
                        HomeToOfficeRoundTrip,
                        PrivateUse,
                        First100KmRate,
                        Exceed100KmRate,
                        TotalAmount,
                        HelpingAmount,
                        OverHelpingAmount,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        CostCenterID,
                        AccountID,
                        IOID,
                        IsOverrideLevel,
                        IsOverrideCompanyId,
                        OverrideCompanyId,
                        OverrideUserPersonalLevelCode,
                        CurrentCompanyId,
                        CurrentUserPersonalLevelCode,
                        OverrideLevelRemark};
                if ((parentFnExpenseDocumentRowByFK_FnExpenseMileage_FnExpenseDocument != null)) {
                    columnValuesArray[1] = parentFnExpenseDocumentRowByFK_FnExpenseMileage_FnExpenseDocument[0];
                }
                rowFnExpenseMileageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseMileageRow);
                return rowFnExpenseMileageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow FindByExpenseMileageID(long ExpenseMileageID) {
                return ((FnExpenseMileageRow)(this.Rows.Find(new object[] {
                            ExpenseMileageID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseMileageDataTable cln = ((FnExpenseMileageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseMileageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExpenseMileageID = base.Columns["ExpenseMileageID"];
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnCarLicenseNo = base.Columns["CarLicenseNo"];
                this.columnTypeOfCar = base.Columns["TypeOfCar"];
                this.columnOwner = base.Columns["Owner"];
                this.columnPermissionNo = base.Columns["PermissionNo"];
                this.columnHomeToOfficeRoundTrip = base.Columns["HomeToOfficeRoundTrip"];
                this.columnPrivateUse = base.Columns["PrivateUse"];
                this.columnFirst100KmRate = base.Columns["First100KmRate"];
                this.columnExceed100KmRate = base.Columns["Exceed100KmRate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnHelpingAmount = base.Columns["HelpingAmount"];
                this.columnOverHelpingAmount = base.Columns["OverHelpingAmount"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnCostCenterID = base.Columns["CostCenterID"];
                this.columnAccountID = base.Columns["AccountID"];
                this.columnIOID = base.Columns["IOID"];
                this.columnIsOverrideLevel = base.Columns["IsOverrideLevel"];
                this.columnIsOverrideCompanyId = base.Columns["IsOverrideCompanyId"];
                this.columnOverrideCompanyId = base.Columns["OverrideCompanyId"];
                this.columnOverrideUserPersonalLevelCode = base.Columns["OverrideUserPersonalLevelCode"];
                this.columnCurrentCompanyId = base.Columns["CurrentCompanyId"];
                this.columnCurrentUserPersonalLevelCode = base.Columns["CurrentUserPersonalLevelCode"];
                this.columnOverrideLevelRemark = base.Columns["OverrideLevelRemark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExpenseMileageID = new global::System.Data.DataColumn("ExpenseMileageID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseMileageID);
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnCarLicenseNo = new global::System.Data.DataColumn("CarLicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarLicenseNo);
                this.columnTypeOfCar = new global::System.Data.DataColumn("TypeOfCar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfCar);
                this.columnOwner = new global::System.Data.DataColumn("Owner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwner);
                this.columnPermissionNo = new global::System.Data.DataColumn("PermissionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermissionNo);
                this.columnHomeToOfficeRoundTrip = new global::System.Data.DataColumn("HomeToOfficeRoundTrip", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeToOfficeRoundTrip);
                this.columnPrivateUse = new global::System.Data.DataColumn("PrivateUse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrivateUse);
                this.columnFirst100KmRate = new global::System.Data.DataColumn("First100KmRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst100KmRate);
                this.columnExceed100KmRate = new global::System.Data.DataColumn("Exceed100KmRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExceed100KmRate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnHelpingAmount = new global::System.Data.DataColumn("HelpingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHelpingAmount);
                this.columnOverHelpingAmount = new global::System.Data.DataColumn("OverHelpingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverHelpingAmount);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnCostCenterID = new global::System.Data.DataColumn("CostCenterID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCenterID);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnIOID = new global::System.Data.DataColumn("IOID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIOID);
                this.columnIsOverrideLevel = new global::System.Data.DataColumn("IsOverrideLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverrideLevel);
                this.columnIsOverrideCompanyId = new global::System.Data.DataColumn("IsOverrideCompanyId", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverrideCompanyId);
                this.columnOverrideCompanyId = new global::System.Data.DataColumn("OverrideCompanyId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideCompanyId);
                this.columnOverrideUserPersonalLevelCode = new global::System.Data.DataColumn("OverrideUserPersonalLevelCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideUserPersonalLevelCode);
                this.columnCurrentCompanyId = new global::System.Data.DataColumn("CurrentCompanyId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentCompanyId);
                this.columnCurrentUserPersonalLevelCode = new global::System.Data.DataColumn("CurrentUserPersonalLevelCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentUserPersonalLevelCode);
                this.columnOverrideLevelRemark = new global::System.Data.DataColumn("OverrideLevelRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideLevelRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExpenseMileageID}, true));
                this.columnExpenseMileageID.AutoIncrement = true;
                this.columnExpenseMileageID.AutoIncrementSeed = -1;
                this.columnExpenseMileageID.AutoIncrementStep = -1;
                this.columnExpenseMileageID.AllowDBNull = false;
                this.columnExpenseMileageID.ReadOnly = true;
                this.columnExpenseMileageID.Unique = true;
                this.columnCarLicenseNo.AllowDBNull = false;
                this.columnCarLicenseNo.MaxLength = 10;
                this.columnTypeOfCar.AllowDBNull = false;
                this.columnTypeOfCar.MaxLength = 5;
                this.columnOwner.AllowDBNull = false;
                this.columnOwner.MaxLength = 5;
                this.columnPermissionNo.MaxLength = 20;
                this.columnHomeToOfficeRoundTrip.DefaultValue = ((decimal)(0m));
                this.columnPrivateUse.DefaultValue = ((decimal)(0m));
                this.columnFirst100KmRate.DefaultValue = ((decimal)(0m));
                this.columnExceed100KmRate.DefaultValue = ((decimal)(0m));
                this.columnTotalAmount.DefaultValue = ((decimal)(0m));
                this.columnHelpingAmount.DefaultValue = ((decimal)(0m));
                this.columnOverHelpingAmount.DefaultValue = ((decimal)(0m));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow NewFnExpenseMileageRow() {
                return ((FnExpenseMileageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseMileageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseMileageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseMileageRowChanged != null)) {
                    this.FnExpenseMileageRowChanged(this, new FnExpenseMileageRowChangeEvent(((FnExpenseMileageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseMileageRowChanging != null)) {
                    this.FnExpenseMileageRowChanging(this, new FnExpenseMileageRowChangeEvent(((FnExpenseMileageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseMileageRowDeleted != null)) {
                    this.FnExpenseMileageRowDeleted(this, new FnExpenseMileageRowChangeEvent(((FnExpenseMileageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseMileageRowDeleting != null)) {
                    this.FnExpenseMileageRowDeleting(this, new FnExpenseMileageRowChangeEvent(((FnExpenseMileageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseMileageRow(FnExpenseMileageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseMileageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseMileageItemDataTable : global::System.Data.TypedTableBase<FnExpenseMileageItemRow> {
            
            private global::System.Data.DataColumn columnExpenseMileageItemID;
            
            private global::System.Data.DataColumn columnExpenseMileageID;
            
            private global::System.Data.DataColumn columnTravelDate;
            
            private global::System.Data.DataColumn columnLocationFrom;
            
            private global::System.Data.DataColumn columnLocationTo;
            
            private global::System.Data.DataColumn columnCarMeterStart;
            
            private global::System.Data.DataColumn columnCarMeterEnd;
            
            private global::System.Data.DataColumn columnDistanceTotal;
            
            private global::System.Data.DataColumn columnDistanceFirst100Km;
            
            private global::System.Data.DataColumn columnDistanceExceed100Km;
            
            private global::System.Data.DataColumn columnDistanceAdjust;
            
            private global::System.Data.DataColumn columnDistanceNet;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemDataTable() {
                this.TableName = "FnExpenseMileageItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseMileageItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseMileageItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseMileageItemIDColumn {
                get {
                    return this.columnExpenseMileageItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseMileageIDColumn {
                get {
                    return this.columnExpenseMileageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TravelDateColumn {
                get {
                    return this.columnTravelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationFromColumn {
                get {
                    return this.columnLocationFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationToColumn {
                get {
                    return this.columnLocationTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarMeterStartColumn {
                get {
                    return this.columnCarMeterStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarMeterEndColumn {
                get {
                    return this.columnCarMeterEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistanceTotalColumn {
                get {
                    return this.columnDistanceTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistanceFirst100KmColumn {
                get {
                    return this.columnDistanceFirst100Km;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistanceExceed100KmColumn {
                get {
                    return this.columnDistanceExceed100Km;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistanceAdjustColumn {
                get {
                    return this.columnDistanceAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistanceNetColumn {
                get {
                    return this.columnDistanceNet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRow this[int index] {
                get {
                    return ((FnExpenseMileageItemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageItemRowChangeEventHandler FnExpenseMileageItemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageItemRowChangeEventHandler FnExpenseMileageItemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageItemRowChangeEventHandler FnExpenseMileageItemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMileageItemRowChangeEventHandler FnExpenseMileageItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseMileageItemRow(FnExpenseMileageItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRow AddFnExpenseMileageItemRow(
                        FnExpenseMileageRow parentFnExpenseMileageRowByFK_FnExpenseMileageItem_FnExpenseMileage, 
                        System.DateTime TravelDate, 
                        string LocationFrom, 
                        string LocationTo, 
                        decimal CarMeterStart, 
                        decimal CarMeterEnd, 
                        decimal DistanceTotal, 
                        decimal DistanceFirst100Km, 
                        decimal DistanceExceed100Km, 
                        decimal DistanceAdjust, 
                        decimal DistanceNet, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion) {
                FnExpenseMileageItemRow rowFnExpenseMileageItemRow = ((FnExpenseMileageItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        TravelDate,
                        LocationFrom,
                        LocationTo,
                        CarMeterStart,
                        CarMeterEnd,
                        DistanceTotal,
                        DistanceFirst100Km,
                        DistanceExceed100Km,
                        DistanceAdjust,
                        DistanceNet,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentFnExpenseMileageRowByFK_FnExpenseMileageItem_FnExpenseMileage != null)) {
                    columnValuesArray[1] = parentFnExpenseMileageRowByFK_FnExpenseMileageItem_FnExpenseMileage[0];
                }
                rowFnExpenseMileageItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseMileageItemRow);
                return rowFnExpenseMileageItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRow FindByExpenseMileageItemID(long ExpenseMileageItemID) {
                return ((FnExpenseMileageItemRow)(this.Rows.Find(new object[] {
                            ExpenseMileageItemID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseMileageItemDataTable cln = ((FnExpenseMileageItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseMileageItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExpenseMileageItemID = base.Columns["ExpenseMileageItemID"];
                this.columnExpenseMileageID = base.Columns["ExpenseMileageID"];
                this.columnTravelDate = base.Columns["TravelDate"];
                this.columnLocationFrom = base.Columns["LocationFrom"];
                this.columnLocationTo = base.Columns["LocationTo"];
                this.columnCarMeterStart = base.Columns["CarMeterStart"];
                this.columnCarMeterEnd = base.Columns["CarMeterEnd"];
                this.columnDistanceTotal = base.Columns["DistanceTotal"];
                this.columnDistanceFirst100Km = base.Columns["DistanceFirst100Km"];
                this.columnDistanceExceed100Km = base.Columns["DistanceExceed100Km"];
                this.columnDistanceAdjust = base.Columns["DistanceAdjust"];
                this.columnDistanceNet = base.Columns["DistanceNet"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExpenseMileageItemID = new global::System.Data.DataColumn("ExpenseMileageItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseMileageItemID);
                this.columnExpenseMileageID = new global::System.Data.DataColumn("ExpenseMileageID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseMileageID);
                this.columnTravelDate = new global::System.Data.DataColumn("TravelDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTravelDate);
                this.columnLocationFrom = new global::System.Data.DataColumn("LocationFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationFrom);
                this.columnLocationTo = new global::System.Data.DataColumn("LocationTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationTo);
                this.columnCarMeterStart = new global::System.Data.DataColumn("CarMeterStart", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMeterStart);
                this.columnCarMeterEnd = new global::System.Data.DataColumn("CarMeterEnd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMeterEnd);
                this.columnDistanceTotal = new global::System.Data.DataColumn("DistanceTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceTotal);
                this.columnDistanceFirst100Km = new global::System.Data.DataColumn("DistanceFirst100Km", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFirst100Km);
                this.columnDistanceExceed100Km = new global::System.Data.DataColumn("DistanceExceed100Km", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceExceed100Km);
                this.columnDistanceAdjust = new global::System.Data.DataColumn("DistanceAdjust", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceAdjust);
                this.columnDistanceNet = new global::System.Data.DataColumn("DistanceNet", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceNet);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExpenseMileageItemID}, true));
                this.columnExpenseMileageItemID.AutoIncrement = true;
                this.columnExpenseMileageItemID.AutoIncrementSeed = -1;
                this.columnExpenseMileageItemID.AutoIncrementStep = -1;
                this.columnExpenseMileageItemID.AllowDBNull = false;
                this.columnExpenseMileageItemID.ReadOnly = true;
                this.columnExpenseMileageItemID.Unique = true;
                this.columnLocationFrom.MaxLength = 100;
                this.columnLocationTo.MaxLength = 100;
                this.columnCarMeterStart.DefaultValue = ((decimal)(0m));
                this.columnCarMeterEnd.DefaultValue = ((decimal)(0m));
                this.columnDistanceTotal.DefaultValue = ((decimal)(0m));
                this.columnDistanceFirst100Km.DefaultValue = ((decimal)(0m));
                this.columnDistanceExceed100Km.DefaultValue = ((decimal)(0m));
                this.columnDistanceAdjust.DefaultValue = ((decimal)(0m));
                this.columnDistanceNet.DefaultValue = ((decimal)(0m));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRow NewFnExpenseMileageItemRow() {
                return ((FnExpenseMileageItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseMileageItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseMileageItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseMileageItemRowChanged != null)) {
                    this.FnExpenseMileageItemRowChanged(this, new FnExpenseMileageItemRowChangeEvent(((FnExpenseMileageItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseMileageItemRowChanging != null)) {
                    this.FnExpenseMileageItemRowChanging(this, new FnExpenseMileageItemRowChangeEvent(((FnExpenseMileageItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseMileageItemRowDeleted != null)) {
                    this.FnExpenseMileageItemRowDeleted(this, new FnExpenseMileageItemRowChangeEvent(((FnExpenseMileageItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseMileageItemRowDeleting != null)) {
                    this.FnExpenseMileageItemRowDeleting(this, new FnExpenseMileageItemRowChangeEvent(((FnExpenseMileageItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseMileageItemRow(FnExpenseMileageItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseMileageItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseInvoiceDataTable : global::System.Data.TypedTableBase<FnExpenseInvoiceRow> {
            
            private global::System.Data.DataColumn columnInvoiceID;
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnInvoiceDocumentType;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnPostalCode;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnVatAmount;
            
            private global::System.Data.DataColumn columnWHTAmount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnisVAT;
            
            private global::System.Data.DataColumn columnisWHT;
            
            private global::System.Data.DataColumn columnTaxID;
            
            private global::System.Data.DataColumn columnNonDeductAmount;
            
            private global::System.Data.DataColumn columnTotalBaseAmount;
            
            private global::System.Data.DataColumn columnWHTRate1;
            
            private global::System.Data.DataColumn columnWHTTypeID1;
            
            private global::System.Data.DataColumn columnBaseAmount1;
            
            private global::System.Data.DataColumn columnWHTAmount1;
            
            private global::System.Data.DataColumn columnWHTRate2;
            
            private global::System.Data.DataColumn columnWHTTypeID2;
            
            private global::System.Data.DataColumn columnBaseAmount2;
            
            private global::System.Data.DataColumn columnWHTAmount2;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnWHTID1;
            
            private global::System.Data.DataColumn columnWHTID2;
            
            private global::System.Data.DataColumn columnVendorTaxCode;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnTotalAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnTotalBaseAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnNetAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnExchangeRateForLocalCurrency;
            
            private global::System.Data.DataColumn columnExchangeRateMainToTHBCurrency;
            
            private global::System.Data.DataColumn columnVendorBranch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceDataTable() {
                this.TableName = "FnExpenseInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDocumentTypeColumn {
                get {
                    return this.columnInvoiceDocumentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatAmountColumn {
                get {
                    return this.columnVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTAmountColumn {
                get {
                    return this.columnWHTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isVATColumn {
                get {
                    return this.columnisVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isWHTColumn {
                get {
                    return this.columnisWHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxIDColumn {
                get {
                    return this.columnTaxID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonDeductAmountColumn {
                get {
                    return this.columnNonDeductAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalBaseAmountColumn {
                get {
                    return this.columnTotalBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTRate1Column {
                get {
                    return this.columnWHTRate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTTypeID1Column {
                get {
                    return this.columnWHTTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseAmount1Column {
                get {
                    return this.columnBaseAmount1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTAmount1Column {
                get {
                    return this.columnWHTAmount1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTRate2Column {
                get {
                    return this.columnWHTRate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTTypeID2Column {
                get {
                    return this.columnWHTTypeID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseAmount2Column {
                get {
                    return this.columnBaseAmount2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTAmount2Column {
                get {
                    return this.columnWHTAmount2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTID1Column {
                get {
                    return this.columnWHTID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WHTID2Column {
                get {
                    return this.columnWHTID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorTaxCodeColumn {
                get {
                    return this.columnVendorTaxCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmountLocalCurrencyColumn {
                get {
                    return this.columnTotalAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalBaseAmountLocalCurrencyColumn {
                get {
                    return this.columnTotalBaseAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetAmountLocalCurrencyColumn {
                get {
                    return this.columnNetAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateForLocalCurrencyColumn {
                get {
                    return this.columnExchangeRateForLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateMainToTHBCurrencyColumn {
                get {
                    return this.columnExchangeRateMainToTHBCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorBranchColumn {
                get {
                    return this.columnVendorBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow this[int index] {
                get {
                    return ((FnExpenseInvoiceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceRowChangeEventHandler FnExpenseInvoiceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceRowChangeEventHandler FnExpenseInvoiceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceRowChangeEventHandler FnExpenseInvoiceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceRowChangeEventHandler FnExpenseInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseInvoiceRow(FnExpenseInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow AddFnExpenseInvoiceRow(
                        FnExpenseDocumentRow parentFnExpenseDocumentRowByFK_FnExpenseInvoice_FnExpenseDocument, 
                        string InvoiceDocumentType, 
                        string InvoiceNo, 
                        System.DateTime InvoiceDate, 
                        long VendorID, 
                        string VendorCode, 
                        string VendorName, 
                        string Street, 
                        string City, 
                        string Country, 
                        string PostalCode, 
                        decimal TotalAmount, 
                        decimal VatAmount, 
                        decimal WHTAmount, 
                        decimal NetAmount, 
                        string Description, 
                        bool isVAT, 
                        bool isWHT, 
                        long TaxID, 
                        decimal NonDeductAmount, 
                        decimal TotalBaseAmount, 
                        decimal WHTRate1, 
                        long WHTTypeID1, 
                        decimal BaseAmount1, 
                        decimal WHTAmount1, 
                        decimal WHTRate2, 
                        long WHTTypeID2, 
                        decimal BaseAmount2, 
                        decimal WHTAmount2, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        long WHTID1, 
                        long WHTID2, 
                        string VendorTaxCode, 
                        string BranchCode, 
                        decimal TotalAmountLocalCurrency, 
                        decimal TotalBaseAmountLocalCurrency, 
                        decimal NetAmountLocalCurrency, 
                        decimal ExchangeRateForLocalCurrency, 
                        decimal ExchangeRateMainToTHBCurrency, 
                        string VendorBranch) {
                FnExpenseInvoiceRow rowFnExpenseInvoiceRow = ((FnExpenseInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        InvoiceDocumentType,
                        InvoiceNo,
                        InvoiceDate,
                        VendorID,
                        VendorCode,
                        VendorName,
                        Street,
                        City,
                        Country,
                        PostalCode,
                        TotalAmount,
                        VatAmount,
                        WHTAmount,
                        NetAmount,
                        Description,
                        isVAT,
                        isWHT,
                        TaxID,
                        NonDeductAmount,
                        TotalBaseAmount,
                        WHTRate1,
                        WHTTypeID1,
                        BaseAmount1,
                        WHTAmount1,
                        WHTRate2,
                        WHTTypeID2,
                        BaseAmount2,
                        WHTAmount2,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        WHTID1,
                        WHTID2,
                        VendorTaxCode,
                        BranchCode,
                        TotalAmountLocalCurrency,
                        TotalBaseAmountLocalCurrency,
                        NetAmountLocalCurrency,
                        ExchangeRateForLocalCurrency,
                        ExchangeRateMainToTHBCurrency,
                        VendorBranch};
                if ((parentFnExpenseDocumentRowByFK_FnExpenseInvoice_FnExpenseDocument != null)) {
                    columnValuesArray[1] = parentFnExpenseDocumentRowByFK_FnExpenseInvoice_FnExpenseDocument[0];
                }
                rowFnExpenseInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseInvoiceRow);
                return rowFnExpenseInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow FindByInvoiceID(long InvoiceID) {
                return ((FnExpenseInvoiceRow)(this.Rows.Find(new object[] {
                            InvoiceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseInvoiceDataTable cln = ((FnExpenseInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnInvoiceDocumentType = base.Columns["InvoiceDocumentType"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnStreet = base.Columns["Street"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnPostalCode = base.Columns["PostalCode"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnVatAmount = base.Columns["VatAmount"];
                this.columnWHTAmount = base.Columns["WHTAmount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnDescription = base.Columns["Description"];
                this.columnisVAT = base.Columns["isVAT"];
                this.columnisWHT = base.Columns["isWHT"];
                this.columnTaxID = base.Columns["TaxID"];
                this.columnNonDeductAmount = base.Columns["NonDeductAmount"];
                this.columnTotalBaseAmount = base.Columns["TotalBaseAmount"];
                this.columnWHTRate1 = base.Columns["WHTRate1"];
                this.columnWHTTypeID1 = base.Columns["WHTTypeID1"];
                this.columnBaseAmount1 = base.Columns["BaseAmount1"];
                this.columnWHTAmount1 = base.Columns["WHTAmount1"];
                this.columnWHTRate2 = base.Columns["WHTRate2"];
                this.columnWHTTypeID2 = base.Columns["WHTTypeID2"];
                this.columnBaseAmount2 = base.Columns["BaseAmount2"];
                this.columnWHTAmount2 = base.Columns["WHTAmount2"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnWHTID1 = base.Columns["WHTID1"];
                this.columnWHTID2 = base.Columns["WHTID2"];
                this.columnVendorTaxCode = base.Columns["VendorTaxCode"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnTotalAmountLocalCurrency = base.Columns["TotalAmountLocalCurrency"];
                this.columnTotalBaseAmountLocalCurrency = base.Columns["TotalBaseAmountLocalCurrency"];
                this.columnNetAmountLocalCurrency = base.Columns["NetAmountLocalCurrency"];
                this.columnExchangeRateForLocalCurrency = base.Columns["ExchangeRateForLocalCurrency"];
                this.columnExchangeRateMainToTHBCurrency = base.Columns["ExchangeRateMainToTHBCurrency"];
                this.columnVendorBranch = base.Columns["VendorBranch"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInvoiceID = new global::System.Data.DataColumn("InvoiceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnInvoiceDocumentType = new global::System.Data.DataColumn("InvoiceDocumentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDocumentType);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostalCode);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnVatAmount = new global::System.Data.DataColumn("VatAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatAmount);
                this.columnWHTAmount = new global::System.Data.DataColumn("WHTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTAmount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnisVAT = new global::System.Data.DataColumn("isVAT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisVAT);
                this.columnisWHT = new global::System.Data.DataColumn("isWHT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisWHT);
                this.columnTaxID = new global::System.Data.DataColumn("TaxID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxID);
                this.columnNonDeductAmount = new global::System.Data.DataColumn("NonDeductAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonDeductAmount);
                this.columnTotalBaseAmount = new global::System.Data.DataColumn("TotalBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBaseAmount);
                this.columnWHTRate1 = new global::System.Data.DataColumn("WHTRate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTRate1);
                this.columnWHTTypeID1 = new global::System.Data.DataColumn("WHTTypeID1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTTypeID1);
                this.columnBaseAmount1 = new global::System.Data.DataColumn("BaseAmount1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAmount1);
                this.columnWHTAmount1 = new global::System.Data.DataColumn("WHTAmount1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTAmount1);
                this.columnWHTRate2 = new global::System.Data.DataColumn("WHTRate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTRate2);
                this.columnWHTTypeID2 = new global::System.Data.DataColumn("WHTTypeID2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTTypeID2);
                this.columnBaseAmount2 = new global::System.Data.DataColumn("BaseAmount2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAmount2);
                this.columnWHTAmount2 = new global::System.Data.DataColumn("WHTAmount2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTAmount2);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnWHTID1 = new global::System.Data.DataColumn("WHTID1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTID1);
                this.columnWHTID2 = new global::System.Data.DataColumn("WHTID2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHTID2);
                this.columnVendorTaxCode = new global::System.Data.DataColumn("VendorTaxCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorTaxCode);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnTotalAmountLocalCurrency = new global::System.Data.DataColumn("TotalAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmountLocalCurrency);
                this.columnTotalBaseAmountLocalCurrency = new global::System.Data.DataColumn("TotalBaseAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBaseAmountLocalCurrency);
                this.columnNetAmountLocalCurrency = new global::System.Data.DataColumn("NetAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmountLocalCurrency);
                this.columnExchangeRateForLocalCurrency = new global::System.Data.DataColumn("ExchangeRateForLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRateForLocalCurrency);
                this.columnExchangeRateMainToTHBCurrency = new global::System.Data.DataColumn("ExchangeRateMainToTHBCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRateMainToTHBCurrency);
                this.columnVendorBranch = new global::System.Data.DataColumn("VendorBranch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorBranch);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvoiceID}, true));
                this.columnInvoiceID.AutoIncrement = true;
                this.columnInvoiceID.AutoIncrementSeed = -1;
                this.columnInvoiceID.AutoIncrementStep = -1;
                this.columnInvoiceID.AllowDBNull = false;
                this.columnInvoiceID.ReadOnly = true;
                this.columnInvoiceID.Unique = true;
                this.columnExpenseID.AllowDBNull = false;
                this.columnInvoiceDocumentType.MaxLength = 5;
                this.columnInvoiceNo.MaxLength = 30;
                this.columnVendorCode.MaxLength = 20;
                this.columnVendorName.MaxLength = 100;
                this.columnStreet.MaxLength = 100;
                this.columnCity.MaxLength = 100;
                this.columnCountry.MaxLength = 100;
                this.columnPostalCode.MaxLength = 20;
                this.columnTotalAmount.DefaultValue = ((decimal)(0m));
                this.columnVatAmount.DefaultValue = ((decimal)(0m));
                this.columnWHTAmount.DefaultValue = ((decimal)(0m));
                this.columnNetAmount.DefaultValue = ((decimal)(0m));
                this.columnDescription.MaxLength = 50;
                this.columnTotalBaseAmount.DefaultValue = ((decimal)(0m));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnVendorTaxCode.MaxLength = 20;
                this.columnBranchCode.MaxLength = 20;
                this.columnTotalAmountLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnTotalBaseAmountLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnNetAmountLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnVendorBranch.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow NewFnExpenseInvoiceRow() {
                return ((FnExpenseInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseInvoiceRowChanged != null)) {
                    this.FnExpenseInvoiceRowChanged(this, new FnExpenseInvoiceRowChangeEvent(((FnExpenseInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseInvoiceRowChanging != null)) {
                    this.FnExpenseInvoiceRowChanging(this, new FnExpenseInvoiceRowChangeEvent(((FnExpenseInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseInvoiceRowDeleted != null)) {
                    this.FnExpenseInvoiceRowDeleted(this, new FnExpenseInvoiceRowChangeEvent(((FnExpenseInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseInvoiceRowDeleting != null)) {
                    this.FnExpenseInvoiceRowDeleting(this, new FnExpenseInvoiceRowChangeEvent(((FnExpenseInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseInvoiceRow(FnExpenseInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseInvoiceItemDataTable : global::System.Data.TypedTableBase<FnExpenseInvoiceItemRow> {
            
            private global::System.Data.DataColumn columnInvoiceItemID;
            
            private global::System.Data.DataColumn columnInvoiceID;
            
            private global::System.Data.DataColumn columnCostCenterID;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnIOID;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCurrencyAmount;
            
            private global::System.Data.DataColumn columnNonDeductAmount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnReferenceNo;
            
            private global::System.Data.DataColumn columnSaleOrder;
            
            private global::System.Data.DataColumn columnSaleItem;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnMainCurrencyAmount;
            
            private global::System.Data.DataColumn columnMainCurrencyID;
            
            private global::System.Data.DataColumn columnLocalCurrencyAmount;
            
            private global::System.Data.DataColumn columnVendorCodeAP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemDataTable() {
                this.TableName = "FnExpenseInvoiceItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseInvoiceItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseInvoiceItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceItemIDColumn {
                get {
                    return this.columnInvoiceItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCenterIDColumn {
                get {
                    return this.columnCostCenterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IOIDColumn {
                get {
                    return this.columnIOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyAmountColumn {
                get {
                    return this.columnCurrencyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonDeductAmountColumn {
                get {
                    return this.columnNonDeductAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceNoColumn {
                get {
                    return this.columnReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleOrderColumn {
                get {
                    return this.columnSaleOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleItemColumn {
                get {
                    return this.columnSaleItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MainCurrencyAmountColumn {
                get {
                    return this.columnMainCurrencyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MainCurrencyIDColumn {
                get {
                    return this.columnMainCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocalCurrencyAmountColumn {
                get {
                    return this.columnLocalCurrencyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorCodeAPColumn {
                get {
                    return this.columnVendorCodeAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRow this[int index] {
                get {
                    return ((FnExpenseInvoiceItemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceItemRowChangeEventHandler FnExpenseInvoiceItemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceItemRowChangeEventHandler FnExpenseInvoiceItemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceItemRowChangeEventHandler FnExpenseInvoiceItemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseInvoiceItemRowChangeEventHandler FnExpenseInvoiceItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseInvoiceItemRow(FnExpenseInvoiceItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRow AddFnExpenseInvoiceItemRow(
                        FnExpenseInvoiceRow parentFnExpenseInvoiceRowByFK_FnInvoiceItem_FnExpenseInvoice, 
                        long CostCenterID, 
                        long AccountID, 
                        long IOID, 
                        long CurrencyID, 
                        string Description, 
                        double CurrencyAmount, 
                        double NonDeductAmount, 
                        double Amount, 
                        double ExchangeRate, 
                        string ReferenceNo, 
                        string SaleOrder, 
                        string SaleItem, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        double MainCurrencyAmount, 
                        short MainCurrencyID, 
                        decimal LocalCurrencyAmount, 
                        string VendorCodeAP) {
                FnExpenseInvoiceItemRow rowFnExpenseInvoiceItemRow = ((FnExpenseInvoiceItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CostCenterID,
                        AccountID,
                        IOID,
                        CurrencyID,
                        Description,
                        CurrencyAmount,
                        NonDeductAmount,
                        Amount,
                        ExchangeRate,
                        ReferenceNo,
                        SaleOrder,
                        SaleItem,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        MainCurrencyAmount,
                        MainCurrencyID,
                        LocalCurrencyAmount,
                        VendorCodeAP};
                if ((parentFnExpenseInvoiceRowByFK_FnInvoiceItem_FnExpenseInvoice != null)) {
                    columnValuesArray[1] = parentFnExpenseInvoiceRowByFK_FnInvoiceItem_FnExpenseInvoice[0];
                }
                rowFnExpenseInvoiceItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseInvoiceItemRow);
                return rowFnExpenseInvoiceItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRow FindByInvoiceItemID(long InvoiceItemID) {
                return ((FnExpenseInvoiceItemRow)(this.Rows.Find(new object[] {
                            InvoiceItemID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseInvoiceItemDataTable cln = ((FnExpenseInvoiceItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseInvoiceItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInvoiceItemID = base.Columns["InvoiceItemID"];
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnCostCenterID = base.Columns["CostCenterID"];
                this.columnAccountID = base.Columns["AccountID"];
                this.columnIOID = base.Columns["IOID"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnDescription = base.Columns["Description"];
                this.columnCurrencyAmount = base.Columns["CurrencyAmount"];
                this.columnNonDeductAmount = base.Columns["NonDeductAmount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnReferenceNo = base.Columns["ReferenceNo"];
                this.columnSaleOrder = base.Columns["SaleOrder"];
                this.columnSaleItem = base.Columns["SaleItem"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnMainCurrencyAmount = base.Columns["MainCurrencyAmount"];
                this.columnMainCurrencyID = base.Columns["MainCurrencyID"];
                this.columnLocalCurrencyAmount = base.Columns["LocalCurrencyAmount"];
                this.columnVendorCodeAP = base.Columns["VendorCodeAP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInvoiceItemID = new global::System.Data.DataColumn("InvoiceItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceItemID);
                this.columnInvoiceID = new global::System.Data.DataColumn("InvoiceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnCostCenterID = new global::System.Data.DataColumn("CostCenterID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCenterID);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnIOID = new global::System.Data.DataColumn("IOID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIOID);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCurrencyAmount = new global::System.Data.DataColumn("CurrencyAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyAmount);
                this.columnNonDeductAmount = new global::System.Data.DataColumn("NonDeductAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonDeductAmount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnReferenceNo = new global::System.Data.DataColumn("ReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNo);
                this.columnSaleOrder = new global::System.Data.DataColumn("SaleOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrder);
                this.columnSaleItem = new global::System.Data.DataColumn("SaleItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleItem);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnMainCurrencyAmount = new global::System.Data.DataColumn("MainCurrencyAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCurrencyAmount);
                this.columnMainCurrencyID = new global::System.Data.DataColumn("MainCurrencyID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCurrencyID);
                this.columnLocalCurrencyAmount = new global::System.Data.DataColumn("LocalCurrencyAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCurrencyAmount);
                this.columnVendorCodeAP = new global::System.Data.DataColumn("VendorCodeAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCodeAP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvoiceItemID}, true));
                this.columnInvoiceItemID.AutoIncrement = true;
                this.columnInvoiceItemID.AutoIncrementSeed = -1;
                this.columnInvoiceItemID.AutoIncrementStep = -1;
                this.columnInvoiceItemID.AllowDBNull = false;
                this.columnInvoiceItemID.ReadOnly = true;
                this.columnInvoiceItemID.Unique = true;
                this.columnDescription.MaxLength = 50;
                this.columnCurrencyAmount.DefaultValue = ((double)(0D));
                this.columnNonDeductAmount.DefaultValue = ((double)(0D));
                this.columnAmount.DefaultValue = ((double)(0D));
                this.columnExchangeRate.DefaultValue = ((double)(0D));
                this.columnReferenceNo.MaxLength = 30;
                this.columnSaleOrder.MaxLength = 10;
                this.columnSaleItem.MaxLength = 6;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnMainCurrencyAmount.DefaultValue = ((double)(0D));
                this.columnLocalCurrencyAmount.DefaultValue = ((decimal)(0m));
                this.columnVendorCodeAP.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRow NewFnExpenseInvoiceItemRow() {
                return ((FnExpenseInvoiceItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseInvoiceItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseInvoiceItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseInvoiceItemRowChanged != null)) {
                    this.FnExpenseInvoiceItemRowChanged(this, new FnExpenseInvoiceItemRowChangeEvent(((FnExpenseInvoiceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseInvoiceItemRowChanging != null)) {
                    this.FnExpenseInvoiceItemRowChanging(this, new FnExpenseInvoiceItemRowChangeEvent(((FnExpenseInvoiceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseInvoiceItemRowDeleted != null)) {
                    this.FnExpenseInvoiceItemRowDeleted(this, new FnExpenseInvoiceItemRowChangeEvent(((FnExpenseInvoiceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseInvoiceItemRowDeleting != null)) {
                    this.FnExpenseInvoiceItemRowDeleting(this, new FnExpenseInvoiceItemRowChangeEvent(((FnExpenseInvoiceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseInvoiceItemRow(FnExpenseInvoiceItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseInvoiceItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpensePerdiemDataTable : global::System.Data.TypedTableBase<FnExpensePerdiemRow> {
            
            private global::System.Data.DataColumn columnExpensePerdiemID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPerdiemRateUSD;
            
            private global::System.Data.DataColumn columnTotalFullDayPerdiem;
            
            private global::System.Data.DataColumn columnFullDayPerdiemRate;
            
            private global::System.Data.DataColumn columnTotalFullDayPerdiemAmount;
            
            private global::System.Data.DataColumn columnTotalHalfDayPerdiem;
            
            private global::System.Data.DataColumn columnHalfDayPerdiemRate;
            
            private global::System.Data.DataColumn columnTotalHalfDayPerdiemAmount;
            
            private global::System.Data.DataColumn columnPerdiemGovernmentAmount;
            
            private global::System.Data.DataColumn columnPerdiemPrivateAmount;
            
            private global::System.Data.DataColumn columnPerdiemTaxAmount;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnPerdiemRateUSDHigh;
            
            private global::System.Data.DataColumn columnPerdiemRateGov;
            
            private global::System.Data.DataColumn columnPerdiemRateGovHigh;
            
            private global::System.Data.DataColumn columnPerdiemTotalAmount;
            
            private global::System.Data.DataColumn columnTotalFullDayPerdiemHigh;
            
            private global::System.Data.DataColumn columnFullDayPerdiemRateHigh;
            
            private global::System.Data.DataColumn columnTotalFullDayPerdiemAmountHigh;
            
            private global::System.Data.DataColumn columnTotalHalfDayPerdiemHigh;
            
            private global::System.Data.DataColumn columnHalfDayPerdiemRateHigh;
            
            private global::System.Data.DataColumn columnTotalHalfDayPerdiemAmountHigh;
            
            private global::System.Data.DataColumn columnCostCenterID;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnIOID;
            
            private global::System.Data.DataColumn columnReferenceNo;
            
            private global::System.Data.DataColumn columnSaleOrder;
            
            private global::System.Data.DataColumn columnSaleItem;
            
            private global::System.Data.DataColumn columnPerdiemRate;
            
            private global::System.Data.DataColumn columnInvoiceID;
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnPerdiemTotalAmountHigh;
            
            private global::System.Data.DataColumn columnPerdiemRateUSDThaiZone;
            
            private global::System.Data.DataColumn columnPerdiemTotalAmountThaiZone;
            
            private global::System.Data.DataColumn columnTotalFullDayPerdiemThaiZone;
            
            private global::System.Data.DataColumn columnFullDayPerdiemRateThaiZone;
            
            private global::System.Data.DataColumn columnTotalFullDayPerdiemAmountThaiZone;
            
            private global::System.Data.DataColumn columnTotalHalfDayPerdiemThaiZone;
            
            private global::System.Data.DataColumn columnHalfDayPerdiemRateThaiZone;
            
            private global::System.Data.DataColumn columnTotalHalfDayPerdiemAmountThaiZone;
            
            private global::System.Data.DataColumn columnPerdiemTotalAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnPerdiemTotalAmountMainCurrency;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDataTable() {
                this.TableName = "FnExpensePerdiem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpensePerdiemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpensePerdiemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpensePerdiemIDColumn {
                get {
                    return this.columnExpensePerdiemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemRateUSDColumn {
                get {
                    return this.columnPerdiemRateUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFullDayPerdiemColumn {
                get {
                    return this.columnTotalFullDayPerdiem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullDayPerdiemRateColumn {
                get {
                    return this.columnFullDayPerdiemRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFullDayPerdiemAmountColumn {
                get {
                    return this.columnTotalFullDayPerdiemAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHalfDayPerdiemColumn {
                get {
                    return this.columnTotalHalfDayPerdiem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HalfDayPerdiemRateColumn {
                get {
                    return this.columnHalfDayPerdiemRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHalfDayPerdiemAmountColumn {
                get {
                    return this.columnTotalHalfDayPerdiemAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemGovernmentAmountColumn {
                get {
                    return this.columnPerdiemGovernmentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemPrivateAmountColumn {
                get {
                    return this.columnPerdiemPrivateAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemTaxAmountColumn {
                get {
                    return this.columnPerdiemTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemRateUSDHighColumn {
                get {
                    return this.columnPerdiemRateUSDHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemRateGovColumn {
                get {
                    return this.columnPerdiemRateGov;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemRateGovHighColumn {
                get {
                    return this.columnPerdiemRateGovHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemTotalAmountColumn {
                get {
                    return this.columnPerdiemTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFullDayPerdiemHighColumn {
                get {
                    return this.columnTotalFullDayPerdiemHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullDayPerdiemRateHighColumn {
                get {
                    return this.columnFullDayPerdiemRateHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFullDayPerdiemAmountHighColumn {
                get {
                    return this.columnTotalFullDayPerdiemAmountHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHalfDayPerdiemHighColumn {
                get {
                    return this.columnTotalHalfDayPerdiemHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HalfDayPerdiemRateHighColumn {
                get {
                    return this.columnHalfDayPerdiemRateHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHalfDayPerdiemAmountHighColumn {
                get {
                    return this.columnTotalHalfDayPerdiemAmountHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCenterIDColumn {
                get {
                    return this.columnCostCenterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IOIDColumn {
                get {
                    return this.columnIOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceNoColumn {
                get {
                    return this.columnReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleOrderColumn {
                get {
                    return this.columnSaleOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleItemColumn {
                get {
                    return this.columnSaleItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemRateColumn {
                get {
                    return this.columnPerdiemRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemTotalAmountHighColumn {
                get {
                    return this.columnPerdiemTotalAmountHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemRateUSDThaiZoneColumn {
                get {
                    return this.columnPerdiemRateUSDThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemTotalAmountThaiZoneColumn {
                get {
                    return this.columnPerdiemTotalAmountThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFullDayPerdiemThaiZoneColumn {
                get {
                    return this.columnTotalFullDayPerdiemThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullDayPerdiemRateThaiZoneColumn {
                get {
                    return this.columnFullDayPerdiemRateThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFullDayPerdiemAmountThaiZoneColumn {
                get {
                    return this.columnTotalFullDayPerdiemAmountThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHalfDayPerdiemThaiZoneColumn {
                get {
                    return this.columnTotalHalfDayPerdiemThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HalfDayPerdiemRateThaiZoneColumn {
                get {
                    return this.columnHalfDayPerdiemRateThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHalfDayPerdiemAmountThaiZoneColumn {
                get {
                    return this.columnTotalHalfDayPerdiemAmountThaiZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemTotalAmountLocalCurrencyColumn {
                get {
                    return this.columnPerdiemTotalAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemTotalAmountMainCurrencyColumn {
                get {
                    return this.columnPerdiemTotalAmountMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow this[int index] {
                get {
                    return ((FnExpensePerdiemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemRowChangeEventHandler FnExpensePerdiemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemRowChangeEventHandler FnExpensePerdiemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemRowChangeEventHandler FnExpensePerdiemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemRowChangeEventHandler FnExpensePerdiemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpensePerdiemRow(FnExpensePerdiemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow AddFnExpensePerdiemRow(
                        string Description, 
                        decimal PerdiemRateUSD, 
                        decimal TotalFullDayPerdiem, 
                        decimal FullDayPerdiemRate, 
                        decimal TotalFullDayPerdiemAmount, 
                        decimal TotalHalfDayPerdiem, 
                        decimal HalfDayPerdiemRate, 
                        decimal TotalHalfDayPerdiemAmount, 
                        decimal PerdiemGovernmentAmount, 
                        decimal PerdiemPrivateAmount, 
                        decimal PerdiemTaxAmount, 
                        decimal ExchangeRate, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        decimal PerdiemRateUSDHigh, 
                        decimal PerdiemRateGov, 
                        decimal PerdiemRateGovHigh, 
                        decimal PerdiemTotalAmount, 
                        decimal TotalFullDayPerdiemHigh, 
                        decimal FullDayPerdiemRateHigh, 
                        decimal TotalFullDayPerdiemAmountHigh, 
                        decimal TotalHalfDayPerdiemHigh, 
                        decimal HalfDayPerdiemRateHigh, 
                        decimal TotalHalfDayPerdiemAmountHigh, 
                        long CostCenterID, 
                        long AccountID, 
                        long IOID, 
                        string ReferenceNo, 
                        string SaleOrder, 
                        string SaleItem, 
                        decimal PerdiemRate, 
                        FnExpenseInvoiceRow parentFnExpenseInvoiceRowByFK_FnExpensePerdiem_FnExpenseInvoice, 
                        FnExpenseDocumentRow parentFnExpenseDocumentRowByFK_FnExpenseDocument_FnExpensePerdiem, 
                        decimal PerdiemTotalAmountHigh, 
                        decimal PerdiemRateUSDThaiZone, 
                        decimal PerdiemTotalAmountThaiZone, 
                        decimal TotalFullDayPerdiemThaiZone, 
                        decimal FullDayPerdiemRateThaiZone, 
                        decimal TotalFullDayPerdiemAmountThaiZone, 
                        decimal TotalHalfDayPerdiemThaiZone, 
                        decimal HalfDayPerdiemRateThaiZone, 
                        decimal TotalHalfDayPerdiemAmountThaiZone, 
                        decimal PerdiemTotalAmountLocalCurrency, 
                        decimal PerdiemTotalAmountMainCurrency) {
                FnExpensePerdiemRow rowFnExpensePerdiemRow = ((FnExpensePerdiemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Description,
                        PerdiemRateUSD,
                        TotalFullDayPerdiem,
                        FullDayPerdiemRate,
                        TotalFullDayPerdiemAmount,
                        TotalHalfDayPerdiem,
                        HalfDayPerdiemRate,
                        TotalHalfDayPerdiemAmount,
                        PerdiemGovernmentAmount,
                        PerdiemPrivateAmount,
                        PerdiemTaxAmount,
                        ExchangeRate,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        PerdiemRateUSDHigh,
                        PerdiemRateGov,
                        PerdiemRateGovHigh,
                        PerdiemTotalAmount,
                        TotalFullDayPerdiemHigh,
                        FullDayPerdiemRateHigh,
                        TotalFullDayPerdiemAmountHigh,
                        TotalHalfDayPerdiemHigh,
                        HalfDayPerdiemRateHigh,
                        TotalHalfDayPerdiemAmountHigh,
                        CostCenterID,
                        AccountID,
                        IOID,
                        ReferenceNo,
                        SaleOrder,
                        SaleItem,
                        PerdiemRate,
                        null,
                        null,
                        PerdiemTotalAmountHigh,
                        PerdiemRateUSDThaiZone,
                        PerdiemTotalAmountThaiZone,
                        TotalFullDayPerdiemThaiZone,
                        FullDayPerdiemRateThaiZone,
                        TotalFullDayPerdiemAmountThaiZone,
                        TotalHalfDayPerdiemThaiZone,
                        HalfDayPerdiemRateThaiZone,
                        TotalHalfDayPerdiemAmountThaiZone,
                        PerdiemTotalAmountLocalCurrency,
                        PerdiemTotalAmountMainCurrency};
                if ((parentFnExpenseInvoiceRowByFK_FnExpensePerdiem_FnExpenseInvoice != null)) {
                    columnValuesArray[37] = parentFnExpenseInvoiceRowByFK_FnExpensePerdiem_FnExpenseInvoice[0];
                }
                if ((parentFnExpenseDocumentRowByFK_FnExpenseDocument_FnExpensePerdiem != null)) {
                    columnValuesArray[38] = parentFnExpenseDocumentRowByFK_FnExpenseDocument_FnExpensePerdiem[0];
                }
                rowFnExpensePerdiemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpensePerdiemRow);
                return rowFnExpensePerdiemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow FindByExpensePerdiemID(long ExpensePerdiemID) {
                return ((FnExpensePerdiemRow)(this.Rows.Find(new object[] {
                            ExpensePerdiemID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpensePerdiemDataTable cln = ((FnExpensePerdiemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpensePerdiemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExpensePerdiemID = base.Columns["ExpensePerdiemID"];
                this.columnDescription = base.Columns["Description"];
                this.columnPerdiemRateUSD = base.Columns["PerdiemRateUSD"];
                this.columnTotalFullDayPerdiem = base.Columns["TotalFullDayPerdiem"];
                this.columnFullDayPerdiemRate = base.Columns["FullDayPerdiemRate"];
                this.columnTotalFullDayPerdiemAmount = base.Columns["TotalFullDayPerdiemAmount"];
                this.columnTotalHalfDayPerdiem = base.Columns["TotalHalfDayPerdiem"];
                this.columnHalfDayPerdiemRate = base.Columns["HalfDayPerdiemRate"];
                this.columnTotalHalfDayPerdiemAmount = base.Columns["TotalHalfDayPerdiemAmount"];
                this.columnPerdiemGovernmentAmount = base.Columns["PerdiemGovernmentAmount"];
                this.columnPerdiemPrivateAmount = base.Columns["PerdiemPrivateAmount"];
                this.columnPerdiemTaxAmount = base.Columns["PerdiemTaxAmount"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnPerdiemRateUSDHigh = base.Columns["PerdiemRateUSDHigh"];
                this.columnPerdiemRateGov = base.Columns["PerdiemRateGov"];
                this.columnPerdiemRateGovHigh = base.Columns["PerdiemRateGovHigh"];
                this.columnPerdiemTotalAmount = base.Columns["PerdiemTotalAmount"];
                this.columnTotalFullDayPerdiemHigh = base.Columns["TotalFullDayPerdiemHigh"];
                this.columnFullDayPerdiemRateHigh = base.Columns["FullDayPerdiemRateHigh"];
                this.columnTotalFullDayPerdiemAmountHigh = base.Columns["TotalFullDayPerdiemAmountHigh"];
                this.columnTotalHalfDayPerdiemHigh = base.Columns["TotalHalfDayPerdiemHigh"];
                this.columnHalfDayPerdiemRateHigh = base.Columns["HalfDayPerdiemRateHigh"];
                this.columnTotalHalfDayPerdiemAmountHigh = base.Columns["TotalHalfDayPerdiemAmountHigh"];
                this.columnCostCenterID = base.Columns["CostCenterID"];
                this.columnAccountID = base.Columns["AccountID"];
                this.columnIOID = base.Columns["IOID"];
                this.columnReferenceNo = base.Columns["ReferenceNo"];
                this.columnSaleOrder = base.Columns["SaleOrder"];
                this.columnSaleItem = base.Columns["SaleItem"];
                this.columnPerdiemRate = base.Columns["PerdiemRate"];
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnPerdiemTotalAmountHigh = base.Columns["PerdiemTotalAmountHigh"];
                this.columnPerdiemRateUSDThaiZone = base.Columns["PerdiemRateUSDThaiZone"];
                this.columnPerdiemTotalAmountThaiZone = base.Columns["PerdiemTotalAmountThaiZone"];
                this.columnTotalFullDayPerdiemThaiZone = base.Columns["TotalFullDayPerdiemThaiZone"];
                this.columnFullDayPerdiemRateThaiZone = base.Columns["FullDayPerdiemRateThaiZone"];
                this.columnTotalFullDayPerdiemAmountThaiZone = base.Columns["TotalFullDayPerdiemAmountThaiZone"];
                this.columnTotalHalfDayPerdiemThaiZone = base.Columns["TotalHalfDayPerdiemThaiZone"];
                this.columnHalfDayPerdiemRateThaiZone = base.Columns["HalfDayPerdiemRateThaiZone"];
                this.columnTotalHalfDayPerdiemAmountThaiZone = base.Columns["TotalHalfDayPerdiemAmountThaiZone"];
                this.columnPerdiemTotalAmountLocalCurrency = base.Columns["PerdiemTotalAmountLocalCurrency"];
                this.columnPerdiemTotalAmountMainCurrency = base.Columns["PerdiemTotalAmountMainCurrency"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExpensePerdiemID = new global::System.Data.DataColumn("ExpensePerdiemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpensePerdiemID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPerdiemRateUSD = new global::System.Data.DataColumn("PerdiemRateUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemRateUSD);
                this.columnTotalFullDayPerdiem = new global::System.Data.DataColumn("TotalFullDayPerdiem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFullDayPerdiem);
                this.columnFullDayPerdiemRate = new global::System.Data.DataColumn("FullDayPerdiemRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullDayPerdiemRate);
                this.columnTotalFullDayPerdiemAmount = new global::System.Data.DataColumn("TotalFullDayPerdiemAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFullDayPerdiemAmount);
                this.columnTotalHalfDayPerdiem = new global::System.Data.DataColumn("TotalHalfDayPerdiem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHalfDayPerdiem);
                this.columnHalfDayPerdiemRate = new global::System.Data.DataColumn("HalfDayPerdiemRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHalfDayPerdiemRate);
                this.columnTotalHalfDayPerdiemAmount = new global::System.Data.DataColumn("TotalHalfDayPerdiemAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHalfDayPerdiemAmount);
                this.columnPerdiemGovernmentAmount = new global::System.Data.DataColumn("PerdiemGovernmentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemGovernmentAmount);
                this.columnPerdiemPrivateAmount = new global::System.Data.DataColumn("PerdiemPrivateAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemPrivateAmount);
                this.columnPerdiemTaxAmount = new global::System.Data.DataColumn("PerdiemTaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemTaxAmount);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnPerdiemRateUSDHigh = new global::System.Data.DataColumn("PerdiemRateUSDHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemRateUSDHigh);
                this.columnPerdiemRateGov = new global::System.Data.DataColumn("PerdiemRateGov", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemRateGov);
                this.columnPerdiemRateGovHigh = new global::System.Data.DataColumn("PerdiemRateGovHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemRateGovHigh);
                this.columnPerdiemTotalAmount = new global::System.Data.DataColumn("PerdiemTotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemTotalAmount);
                this.columnTotalFullDayPerdiemHigh = new global::System.Data.DataColumn("TotalFullDayPerdiemHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFullDayPerdiemHigh);
                this.columnFullDayPerdiemRateHigh = new global::System.Data.DataColumn("FullDayPerdiemRateHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullDayPerdiemRateHigh);
                this.columnTotalFullDayPerdiemAmountHigh = new global::System.Data.DataColumn("TotalFullDayPerdiemAmountHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFullDayPerdiemAmountHigh);
                this.columnTotalHalfDayPerdiemHigh = new global::System.Data.DataColumn("TotalHalfDayPerdiemHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHalfDayPerdiemHigh);
                this.columnHalfDayPerdiemRateHigh = new global::System.Data.DataColumn("HalfDayPerdiemRateHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHalfDayPerdiemRateHigh);
                this.columnTotalHalfDayPerdiemAmountHigh = new global::System.Data.DataColumn("TotalHalfDayPerdiemAmountHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHalfDayPerdiemAmountHigh);
                this.columnCostCenterID = new global::System.Data.DataColumn("CostCenterID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCenterID);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnIOID = new global::System.Data.DataColumn("IOID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIOID);
                this.columnReferenceNo = new global::System.Data.DataColumn("ReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNo);
                this.columnSaleOrder = new global::System.Data.DataColumn("SaleOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrder);
                this.columnSaleItem = new global::System.Data.DataColumn("SaleItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleItem);
                this.columnPerdiemRate = new global::System.Data.DataColumn("PerdiemRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemRate);
                this.columnInvoiceID = new global::System.Data.DataColumn("InvoiceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnPerdiemTotalAmountHigh = new global::System.Data.DataColumn("PerdiemTotalAmountHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemTotalAmountHigh);
                this.columnPerdiemRateUSDThaiZone = new global::System.Data.DataColumn("PerdiemRateUSDThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemRateUSDThaiZone);
                this.columnPerdiemTotalAmountThaiZone = new global::System.Data.DataColumn("PerdiemTotalAmountThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemTotalAmountThaiZone);
                this.columnTotalFullDayPerdiemThaiZone = new global::System.Data.DataColumn("TotalFullDayPerdiemThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFullDayPerdiemThaiZone);
                this.columnFullDayPerdiemRateThaiZone = new global::System.Data.DataColumn("FullDayPerdiemRateThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullDayPerdiemRateThaiZone);
                this.columnTotalFullDayPerdiemAmountThaiZone = new global::System.Data.DataColumn("TotalFullDayPerdiemAmountThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFullDayPerdiemAmountThaiZone);
                this.columnTotalHalfDayPerdiemThaiZone = new global::System.Data.DataColumn("TotalHalfDayPerdiemThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHalfDayPerdiemThaiZone);
                this.columnHalfDayPerdiemRateThaiZone = new global::System.Data.DataColumn("HalfDayPerdiemRateThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHalfDayPerdiemRateThaiZone);
                this.columnTotalHalfDayPerdiemAmountThaiZone = new global::System.Data.DataColumn("TotalHalfDayPerdiemAmountThaiZone", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHalfDayPerdiemAmountThaiZone);
                this.columnPerdiemTotalAmountLocalCurrency = new global::System.Data.DataColumn("PerdiemTotalAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemTotalAmountLocalCurrency);
                this.columnPerdiemTotalAmountMainCurrency = new global::System.Data.DataColumn("PerdiemTotalAmountMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemTotalAmountMainCurrency);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExpensePerdiemID}, true));
                this.columnExpensePerdiemID.AutoIncrement = true;
                this.columnExpensePerdiemID.AutoIncrementSeed = -1;
                this.columnExpensePerdiemID.AutoIncrementStep = -1;
                this.columnExpensePerdiemID.AllowDBNull = false;
                this.columnExpensePerdiemID.ReadOnly = true;
                this.columnExpensePerdiemID.Unique = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.DefaultValue = ((string)(""));
                this.columnDescription.MaxLength = 500;
                this.columnPerdiemRateUSD.DefaultValue = ((decimal)(0m));
                this.columnTotalFullDayPerdiem.DefaultValue = ((decimal)(0m));
                this.columnFullDayPerdiemRate.DefaultValue = ((decimal)(0m));
                this.columnTotalFullDayPerdiemAmount.DefaultValue = ((decimal)(0m));
                this.columnTotalHalfDayPerdiem.DefaultValue = ((decimal)(0m));
                this.columnHalfDayPerdiemRate.DefaultValue = ((decimal)(0m));
                this.columnTotalHalfDayPerdiemAmount.DefaultValue = ((decimal)(0m));
                this.columnPerdiemGovernmentAmount.DefaultValue = ((decimal)(0m));
                this.columnPerdiemPrivateAmount.DefaultValue = ((decimal)(0m));
                this.columnPerdiemTaxAmount.DefaultValue = ((decimal)(0m));
                this.columnExchangeRate.DefaultValue = ((decimal)(0m));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnPerdiemRateUSDHigh.DefaultValue = ((decimal)(0m));
                this.columnPerdiemRateGov.DefaultValue = ((decimal)(0m));
                this.columnPerdiemRateGovHigh.DefaultValue = ((decimal)(0m));
                this.columnPerdiemTotalAmount.DefaultValue = ((decimal)(0m));
                this.columnTotalFullDayPerdiemHigh.DefaultValue = ((decimal)(0m));
                this.columnFullDayPerdiemRateHigh.DefaultValue = ((decimal)(0m));
                this.columnTotalFullDayPerdiemAmountHigh.DefaultValue = ((decimal)(0m));
                this.columnTotalHalfDayPerdiemHigh.DefaultValue = ((decimal)(0m));
                this.columnHalfDayPerdiemRateHigh.DefaultValue = ((decimal)(0m));
                this.columnTotalHalfDayPerdiemAmountHigh.DefaultValue = ((decimal)(0m));
                this.columnReferenceNo.DefaultValue = ((string)(""));
                this.columnReferenceNo.MaxLength = 30;
                this.columnSaleOrder.DefaultValue = ((string)(""));
                this.columnSaleOrder.MaxLength = 10;
                this.columnSaleItem.DefaultValue = ((string)(""));
                this.columnSaleItem.MaxLength = 6;
                this.columnPerdiemTotalAmountHigh.DefaultValue = ((decimal)(0m));
                this.columnPerdiemRateUSDThaiZone.DefaultValue = ((decimal)(0m));
                this.columnPerdiemTotalAmountThaiZone.DefaultValue = ((decimal)(0m));
                this.columnTotalFullDayPerdiemThaiZone.DefaultValue = ((decimal)(0m));
                this.columnFullDayPerdiemRateThaiZone.DefaultValue = ((decimal)(0m));
                this.columnTotalFullDayPerdiemAmountThaiZone.DefaultValue = ((decimal)(0m));
                this.columnTotalHalfDayPerdiemThaiZone.DefaultValue = ((decimal)(0m));
                this.columnHalfDayPerdiemRateThaiZone.DefaultValue = ((decimal)(0m));
                this.columnTotalHalfDayPerdiemAmountThaiZone.DefaultValue = ((decimal)(0m));
                this.columnPerdiemTotalAmountLocalCurrency.DefaultValue = ((decimal)(0m));
                this.columnPerdiemTotalAmountMainCurrency.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow NewFnExpensePerdiemRow() {
                return ((FnExpensePerdiemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpensePerdiemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpensePerdiemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpensePerdiemRowChanged != null)) {
                    this.FnExpensePerdiemRowChanged(this, new FnExpensePerdiemRowChangeEvent(((FnExpensePerdiemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpensePerdiemRowChanging != null)) {
                    this.FnExpensePerdiemRowChanging(this, new FnExpensePerdiemRowChangeEvent(((FnExpensePerdiemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpensePerdiemRowDeleted != null)) {
                    this.FnExpensePerdiemRowDeleted(this, new FnExpensePerdiemRowChangeEvent(((FnExpensePerdiemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpensePerdiemRowDeleting != null)) {
                    this.FnExpensePerdiemRowDeleting(this, new FnExpensePerdiemRowChangeEvent(((FnExpensePerdiemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpensePerdiemRow(FnExpensePerdiemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpensePerdiemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpensePerdiemItemDataTable : global::System.Data.TypedTableBase<FnExpensePerdiemItemRow> {
            
            private global::System.Data.DataColumn columnPerdiemItemID;
            
            private global::System.Data.DataColumn columnExpensePerdiemID;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            private global::System.Data.DataColumn columnAdjustedDay;
            
            private global::System.Data.DataColumn columnHalfDay;
            
            private global::System.Data.DataColumn columnFullDay;
            
            private global::System.Data.DataColumn columnNetDay;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnCountryZoneID;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemDataTable() {
                this.TableName = "FnExpensePerdiemItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpensePerdiemItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpensePerdiemItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerdiemItemIDColumn {
                get {
                    return this.columnPerdiemItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpensePerdiemIDColumn {
                get {
                    return this.columnExpensePerdiemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdjustedDayColumn {
                get {
                    return this.columnAdjustedDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HalfDayColumn {
                get {
                    return this.columnHalfDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullDayColumn {
                get {
                    return this.columnFullDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetDayColumn {
                get {
                    return this.columnNetDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryZoneIDColumn {
                get {
                    return this.columnCountryZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRow this[int index] {
                get {
                    return ((FnExpensePerdiemItemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemItemRowChangeEventHandler FnExpensePerdiemItemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemItemRowChangeEventHandler FnExpensePerdiemItemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemItemRowChangeEventHandler FnExpensePerdiemItemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemItemRowChangeEventHandler FnExpensePerdiemItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpensePerdiemItemRow(FnExpensePerdiemItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRow AddFnExpensePerdiemItemRow(
                        FnExpensePerdiemRow parentFnExpensePerdiemRowByFK_FnExpensePerdiemItem_FnExpensePerdiem, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        System.DateTime FromTime, 
                        System.DateTime ToTime, 
                        decimal AdjustedDay, 
                        decimal HalfDay, 
                        decimal FullDay, 
                        decimal NetDay, 
                        short CountryID, 
                        long CountryZoneID, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        string Remark) {
                FnExpensePerdiemItemRow rowFnExpensePerdiemItemRow = ((FnExpensePerdiemItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        FromDate,
                        ToDate,
                        FromTime,
                        ToTime,
                        AdjustedDay,
                        HalfDay,
                        FullDay,
                        NetDay,
                        CountryID,
                        CountryZoneID,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        Remark};
                if ((parentFnExpensePerdiemRowByFK_FnExpensePerdiemItem_FnExpensePerdiem != null)) {
                    columnValuesArray[1] = parentFnExpensePerdiemRowByFK_FnExpensePerdiemItem_FnExpensePerdiem[0];
                }
                rowFnExpensePerdiemItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpensePerdiemItemRow);
                return rowFnExpensePerdiemItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRow FindByPerdiemItemID(long PerdiemItemID) {
                return ((FnExpensePerdiemItemRow)(this.Rows.Find(new object[] {
                            PerdiemItemID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpensePerdiemItemDataTable cln = ((FnExpensePerdiemItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpensePerdiemItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPerdiemItemID = base.Columns["PerdiemItemID"];
                this.columnExpensePerdiemID = base.Columns["ExpensePerdiemID"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
                this.columnAdjustedDay = base.Columns["AdjustedDay"];
                this.columnHalfDay = base.Columns["HalfDay"];
                this.columnFullDay = base.Columns["FullDay"];
                this.columnNetDay = base.Columns["NetDay"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnCountryZoneID = base.Columns["CountryZoneID"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPerdiemItemID = new global::System.Data.DataColumn("PerdiemItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerdiemItemID);
                this.columnExpensePerdiemID = new global::System.Data.DataColumn("ExpensePerdiemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpensePerdiemID);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnAdjustedDay = new global::System.Data.DataColumn("AdjustedDay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustedDay);
                this.columnHalfDay = new global::System.Data.DataColumn("HalfDay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHalfDay);
                this.columnFullDay = new global::System.Data.DataColumn("FullDay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullDay);
                this.columnNetDay = new global::System.Data.DataColumn("NetDay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetDay);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnCountryZoneID = new global::System.Data.DataColumn("CountryZoneID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryZoneID);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPerdiemItemID}, true));
                this.columnPerdiemItemID.AutoIncrement = true;
                this.columnPerdiemItemID.AutoIncrementSeed = -1;
                this.columnPerdiemItemID.AutoIncrementStep = -1;
                this.columnPerdiemItemID.AllowDBNull = false;
                this.columnPerdiemItemID.ReadOnly = true;
                this.columnPerdiemItemID.Unique = true;
                this.columnFromDate.AllowDBNull = false;
                this.columnToDate.AllowDBNull = false;
                this.columnFromTime.AllowDBNull = false;
                this.columnToTime.AllowDBNull = false;
                this.columnAdjustedDay.DefaultValue = ((decimal)(0m));
                this.columnHalfDay.DefaultValue = ((decimal)(0m));
                this.columnFullDay.DefaultValue = ((decimal)(0m));
                this.columnNetDay.AllowDBNull = false;
                this.columnNetDay.DefaultValue = ((decimal)(0m));
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnRemark.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRow NewFnExpensePerdiemItemRow() {
                return ((FnExpensePerdiemItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpensePerdiemItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpensePerdiemItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpensePerdiemItemRowChanged != null)) {
                    this.FnExpensePerdiemItemRowChanged(this, new FnExpensePerdiemItemRowChangeEvent(((FnExpensePerdiemItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpensePerdiemItemRowChanging != null)) {
                    this.FnExpensePerdiemItemRowChanging(this, new FnExpensePerdiemItemRowChangeEvent(((FnExpensePerdiemItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpensePerdiemItemRowDeleted != null)) {
                    this.FnExpensePerdiemItemRowDeleted(this, new FnExpensePerdiemItemRowChangeEvent(((FnExpensePerdiemItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpensePerdiemItemRowDeleting != null)) {
                    this.FnExpensePerdiemItemRowDeleting(this, new FnExpensePerdiemItemRowChangeEvent(((FnExpensePerdiemItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpensePerdiemItemRow(FnExpensePerdiemItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpensePerdiemItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpensePerdiemDetailDataTable : global::System.Data.TypedTableBase<FnExpensePerdiemDetailRow> {
            
            private global::System.Data.DataColumn columnExpensePerdiemDetailID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnExpensePerdiemID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailDataTable() {
                this.TableName = "FnExpensePerdiemDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpensePerdiemDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpensePerdiemDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpensePerdiemDetailIDColumn {
                get {
                    return this.columnExpensePerdiemDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpensePerdiemIDColumn {
                get {
                    return this.columnExpensePerdiemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRow this[int index] {
                get {
                    return ((FnExpensePerdiemDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemDetailRowChangeEventHandler FnExpensePerdiemDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemDetailRowChangeEventHandler FnExpensePerdiemDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemDetailRowChangeEventHandler FnExpensePerdiemDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpensePerdiemDetailRowChangeEventHandler FnExpensePerdiemDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpensePerdiemDetailRow(FnExpensePerdiemDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRow AddFnExpensePerdiemDetailRow(string Description, long CurrencyID, double ExchangeRate, double Amount, FnExpensePerdiemRow parentFnExpensePerdiemRowByFK_FnExpensePerdiemDetail_FnExpensePerdiem) {
                FnExpensePerdiemDetailRow rowFnExpensePerdiemDetailRow = ((FnExpensePerdiemDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Description,
                        CurrencyID,
                        ExchangeRate,
                        Amount,
                        null};
                if ((parentFnExpensePerdiemRowByFK_FnExpensePerdiemDetail_FnExpensePerdiem != null)) {
                    columnValuesArray[5] = parentFnExpensePerdiemRowByFK_FnExpensePerdiemDetail_FnExpensePerdiem[0];
                }
                rowFnExpensePerdiemDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpensePerdiemDetailRow);
                return rowFnExpensePerdiemDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRow FindByExpensePerdiemDetailID(long ExpensePerdiemDetailID) {
                return ((FnExpensePerdiemDetailRow)(this.Rows.Find(new object[] {
                            ExpensePerdiemDetailID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpensePerdiemDetailDataTable cln = ((FnExpensePerdiemDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpensePerdiemDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExpensePerdiemDetailID = base.Columns["ExpensePerdiemDetailID"];
                this.columnDescription = base.Columns["Description"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnExpensePerdiemID = base.Columns["ExpensePerdiemID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExpensePerdiemDetailID = new global::System.Data.DataColumn("ExpensePerdiemDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpensePerdiemDetailID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnExpensePerdiemID = new global::System.Data.DataColumn("ExpensePerdiemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpensePerdiemID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExpensePerdiemDetailID}, true));
                this.columnExpensePerdiemDetailID.AutoIncrement = true;
                this.columnExpensePerdiemDetailID.AutoIncrementSeed = -1;
                this.columnExpensePerdiemDetailID.AutoIncrementStep = -1;
                this.columnExpensePerdiemDetailID.AllowDBNull = false;
                this.columnExpensePerdiemDetailID.ReadOnly = true;
                this.columnExpensePerdiemDetailID.Unique = true;
                this.columnDescription.MaxLength = 100;
                this.columnExchangeRate.DefaultValue = ((double)(0D));
                this.columnAmount.DefaultValue = ((double)(0D));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRow NewFnExpensePerdiemDetailRow() {
                return ((FnExpensePerdiemDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpensePerdiemDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpensePerdiemDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpensePerdiemDetailRowChanged != null)) {
                    this.FnExpensePerdiemDetailRowChanged(this, new FnExpensePerdiemDetailRowChangeEvent(((FnExpensePerdiemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpensePerdiemDetailRowChanging != null)) {
                    this.FnExpensePerdiemDetailRowChanging(this, new FnExpensePerdiemDetailRowChangeEvent(((FnExpensePerdiemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpensePerdiemDetailRowDeleted != null)) {
                    this.FnExpensePerdiemDetailRowDeleted(this, new FnExpensePerdiemDetailRowChangeEvent(((FnExpensePerdiemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpensePerdiemDetailRowDeleting != null)) {
                    this.FnExpensePerdiemDetailRowDeleting(this, new FnExpensePerdiemDetailRowChangeEvent(((FnExpensePerdiemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpensePerdiemDetailRow(FnExpensePerdiemDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpensePerdiemDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseMPADataTable : global::System.Data.TypedTableBase<FnExpenseMPARow> {
            
            private global::System.Data.DataColumn columnFnExpenseMPAID;
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnMPADocumentID;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPADataTable() {
                this.TableName = "FnExpenseMPA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseMPADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseMPADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FnExpenseMPAIDColumn {
                get {
                    return this.columnFnExpenseMPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MPADocumentIDColumn {
                get {
                    return this.columnMPADocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPARow this[int index] {
                get {
                    return ((FnExpenseMPARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMPARowChangeEventHandler FnExpenseMPARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMPARowChangeEventHandler FnExpenseMPARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMPARowChangeEventHandler FnExpenseMPARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseMPARowChangeEventHandler FnExpenseMPARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseMPARow(FnExpenseMPARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPARow AddFnExpenseMPARow(long ExpenseID, long MPADocumentID, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                FnExpenseMPARow rowFnExpenseMPARow = ((FnExpenseMPARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExpenseID,
                        MPADocumentID,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                rowFnExpenseMPARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseMPARow);
                return rowFnExpenseMPARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPARow FindByFnExpenseMPAID(long FnExpenseMPAID) {
                return ((FnExpenseMPARow)(this.Rows.Find(new object[] {
                            FnExpenseMPAID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseMPADataTable cln = ((FnExpenseMPADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseMPADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFnExpenseMPAID = base.Columns["FnExpenseMPAID"];
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnMPADocumentID = base.Columns["MPADocumentID"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFnExpenseMPAID = new global::System.Data.DataColumn("FnExpenseMPAID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFnExpenseMPAID);
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnMPADocumentID = new global::System.Data.DataColumn("MPADocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPADocumentID);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFnExpenseMPAID}, true));
                this.columnFnExpenseMPAID.AutoIncrement = true;
                this.columnFnExpenseMPAID.AutoIncrementSeed = -1;
                this.columnFnExpenseMPAID.AutoIncrementStep = -1;
                this.columnFnExpenseMPAID.AllowDBNull = false;
                this.columnFnExpenseMPAID.ReadOnly = true;
                this.columnFnExpenseMPAID.Unique = true;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPARow NewFnExpenseMPARow() {
                return ((FnExpenseMPARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseMPARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseMPARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseMPARowChanged != null)) {
                    this.FnExpenseMPARowChanged(this, new FnExpenseMPARowChangeEvent(((FnExpenseMPARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseMPARowChanging != null)) {
                    this.FnExpenseMPARowChanging(this, new FnExpenseMPARowChangeEvent(((FnExpenseMPARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseMPARowDeleted != null)) {
                    this.FnExpenseMPARowDeleted(this, new FnExpenseMPARowChangeEvent(((FnExpenseMPARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseMPARowDeleting != null)) {
                    this.FnExpenseMPARowDeleting(this, new FnExpenseMPARowChangeEvent(((FnExpenseMPARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseMPARow(FnExpenseMPARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseMPADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FnExpenseCADataTable : global::System.Data.TypedTableBase<FnExpenseCARow> {
            
            private global::System.Data.DataColumn columnFnExpenseCAID;
            
            private global::System.Data.DataColumn columnExpenseID;
            
            private global::System.Data.DataColumn columnCADocumentID;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCADataTable() {
                this.TableName = "FnExpenseCA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseCADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FnExpenseCADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FnExpenseCAIDColumn {
                get {
                    return this.columnFnExpenseCAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpenseIDColumn {
                get {
                    return this.columnExpenseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CADocumentIDColumn {
                get {
                    return this.columnCADocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARow this[int index] {
                get {
                    return ((FnExpenseCARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseCARowChangeEventHandler FnExpenseCARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseCARowChangeEventHandler FnExpenseCARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseCARowChangeEventHandler FnExpenseCARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FnExpenseCARowChangeEventHandler FnExpenseCARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFnExpenseCARow(FnExpenseCARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARow AddFnExpenseCARow(FnExpenseDocumentRow parentFnExpenseDocumentRowByFK_FnExpenseCA_FnExpenseCA, long CADocumentID, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                FnExpenseCARow rowFnExpenseCARow = ((FnExpenseCARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CADocumentID,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentFnExpenseDocumentRowByFK_FnExpenseCA_FnExpenseCA != null)) {
                    columnValuesArray[1] = parentFnExpenseDocumentRowByFK_FnExpenseCA_FnExpenseCA[0];
                }
                rowFnExpenseCARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFnExpenseCARow);
                return rowFnExpenseCARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARow FindByFnExpenseCAID(long FnExpenseCAID) {
                return ((FnExpenseCARow)(this.Rows.Find(new object[] {
                            FnExpenseCAID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FnExpenseCADataTable cln = ((FnExpenseCADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FnExpenseCADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFnExpenseCAID = base.Columns["FnExpenseCAID"];
                this.columnExpenseID = base.Columns["ExpenseID"];
                this.columnCADocumentID = base.Columns["CADocumentID"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFnExpenseCAID = new global::System.Data.DataColumn("FnExpenseCAID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFnExpenseCAID);
                this.columnExpenseID = new global::System.Data.DataColumn("ExpenseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseID);
                this.columnCADocumentID = new global::System.Data.DataColumn("CADocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADocumentID);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFnExpenseCAID}, true));
                this.columnFnExpenseCAID.AutoIncrement = true;
                this.columnFnExpenseCAID.AutoIncrementSeed = -1;
                this.columnFnExpenseCAID.AutoIncrementStep = -1;
                this.columnFnExpenseCAID.AllowDBNull = false;
                this.columnFnExpenseCAID.ReadOnly = true;
                this.columnFnExpenseCAID.Unique = true;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARow NewFnExpenseCARow() {
                return ((FnExpenseCARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FnExpenseCARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FnExpenseCARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FnExpenseCARowChanged != null)) {
                    this.FnExpenseCARowChanged(this, new FnExpenseCARowChangeEvent(((FnExpenseCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FnExpenseCARowChanging != null)) {
                    this.FnExpenseCARowChanging(this, new FnExpenseCARowChangeEvent(((FnExpenseCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FnExpenseCARowDeleted != null)) {
                    this.FnExpenseCARowDeleted(this, new FnExpenseCARowChangeEvent(((FnExpenseCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FnExpenseCARowDeleting != null)) {
                    this.FnExpenseCARowDeleting(this, new FnExpenseCARowChangeEvent(((FnExpenseCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFnExpenseCARow(FnExpenseCARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExpenseDataSet ds = new ExpenseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FnExpenseCADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DocumentRow : global::System.Data.DataRow {
            
            private DocumentDataTable tableDocument;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocument = ((DocumentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    return ((long)(this[this.tableDocument.DocumentIDColumn]));
                }
                set {
                    this[this.tableDocument.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CompanyID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RequesterID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.RequesterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequesterID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.RequesterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreatorID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatorID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReceiverID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.ReceiverIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiverID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ReceiverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DocumentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.DocumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.DocumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DocumentNo {
                get {
                    try {
                        return ((string)(this[this.tableDocument.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DocumentTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDocument.DocumentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentTypeID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.DocumentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ApproverID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.ApproverIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproverID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ApproverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableDocument.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tableDocument.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostingStatus {
                get {
                    try {
                        return ((string)(this[this.tableDocument.PostingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingStatus\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PostingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableDocument.ActiveColumn]));
                }
                set {
                    this[this.tableDocument.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableDocument.CreByColumn]));
                }
                set {
                    this[this.tableDocument.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocument.CreDateColumn]));
                }
                set {
                    this[this.tableDocument.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableDocument.UpdByColumn]));
                }
                set {
                    this[this.tableDocument.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocument.UpdDateColumn]));
                }
                set {
                    this[this.tableDocument.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableDocument.UpdPgmColumn]));
                }
                set {
                    this[this.tableDocument.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableDocument.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BranchCode {
                get {
                    try {
                        return ((string)(this[this.tableDocument.BranchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCode\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PaymentMethodID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.PaymentMethodIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMethodID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PaymentMethodIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PostingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.PostingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PostingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BaseLineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.BaseLineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseLineDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BaseLineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAccount {
                get {
                    try {
                        return ((string)(this[this.tableDocument.BankAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccount\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifyImage {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.IsVerifyImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVerifyImage\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.IsVerifyImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReferenceNo {
                get {
                    try {
                        return ((string)(this[this.tableDocument.ReferenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContainDocumentNo {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.IsContainDocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsContainDocumentNo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.IsContainDocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mark {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.MarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mark\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.MarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BusinessArea {
                get {
                    try {
                        return ((string)(this[this.tableDocument.BusinessAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessArea\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BusinessAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Supplementary {
                get {
                    try {
                        return ((string)(this[this.tableDocument.SupplementaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplementary\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.SupplementaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApproveDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.ApproveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproveDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ApproveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CacheServiceTeamID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CacheServiceTeamIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheServiceTeamID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheServiceTeamIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CachePBID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CachePBIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CachePBID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CachePBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CacheAttachment {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.CacheAttachmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAttachment\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAttachmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CacheCurrentState {
                get {
                    try {
                        return ((int)(this[this.tableDocument.CacheCurrentStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCurrentState\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCurrentStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheCreatorName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheCreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCreatorName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheRequesterName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheRequesterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheRequesterName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheRequesterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CacheAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableDocument.CacheAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAmountLocalCurrency\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CacheAmountMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableDocument.CacheAmountMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAmountMainCurrency\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAmountMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CacheAmountTHB {
                get {
                    try {
                        return ((decimal)(this[this.tableDocument.CacheAmountTHBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAmountTHB\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAmountTHBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheBoxID {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheBoxIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheBoxID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheBoxIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CacheWorkFlowID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CacheWorkFlowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheWorkFlowID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheWorkFlowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheDocumentTypeName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheDocumentTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheDocumentTypeName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheDocumentTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CacheCurrentWorkFlowTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDocument.CacheCurrentWorkFlowTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCurrentWorkFlowTypeID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCurrentWorkFlowTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheCurrentStateName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheCurrentStateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCurrentStateName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCurrentStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifyWithImage {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.IsVerifyWithImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVerifyWithImage\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.IsVerifyWithImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReceiveDocumentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.ReceiveDocumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiveDocumentDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ReceiveDocumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VerifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.VerifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VerifiedDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.VerifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApproveVerifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.ApproveVerifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproveVerifiedDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ApproveVerifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PaidDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.PaidDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PaidDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RemittanceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.RemittanceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemittanceDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.RemittanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalHold {
                get {
                    try {
                        return ((int)(this[this.tableDocument.TotalHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHold\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.TotalHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableDocument.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyIDNull() {
                this[this.tableDocument.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequesterIDNull() {
                return this.IsNull(this.tableDocument.RequesterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequesterIDNull() {
                this[this.tableDocument.RequesterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableDocument.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableDocument.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiverIDNull() {
                return this.IsNull(this.tableDocument.ReceiverIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiverIDNull() {
                this[this.tableDocument.ReceiverIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentDateNull() {
                return this.IsNull(this.tableDocument.DocumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentDateNull() {
                this[this.tableDocument.DocumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tableDocument.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentNoNull() {
                this[this.tableDocument.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentTypeIDNull() {
                return this.IsNull(this.tableDocument.DocumentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentTypeIDNull() {
                this[this.tableDocument.DocumentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproverIDNull() {
                return this.IsNull(this.tableDocument.ApproverIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApproverIDNull() {
                this[this.tableDocument.ApproverIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableDocument.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectNull() {
                this[this.tableDocument.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoNull() {
                return this.IsNull(this.tableDocument.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoNull() {
                this[this.tableDocument.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingStatusNull() {
                return this.IsNull(this.tableDocument.PostingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingStatusNull() {
                this[this.tableDocument.PostingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableDocument.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableDocument.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableDocument.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchCodeNull() {
                this[this.tableDocument.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentMethodIDNull() {
                return this.IsNull(this.tableDocument.PaymentMethodIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentMethodIDNull() {
                this[this.tableDocument.PaymentMethodIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingDateNull() {
                return this.IsNull(this.tableDocument.PostingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingDateNull() {
                this[this.tableDocument.PostingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseLineDateNull() {
                return this.IsNull(this.tableDocument.BaseLineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseLineDateNull() {
                this[this.tableDocument.BaseLineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccountNull() {
                return this.IsNull(this.tableDocument.BankAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccountNull() {
                this[this.tableDocument.BankAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsVerifyImageNull() {
                return this.IsNull(this.tableDocument.IsVerifyImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsVerifyImageNull() {
                this[this.tableDocument.IsVerifyImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferenceNoNull() {
                return this.IsNull(this.tableDocument.ReferenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferenceNoNull() {
                this[this.tableDocument.ReferenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsContainDocumentNoNull() {
                return this.IsNull(this.tableDocument.IsContainDocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsContainDocumentNoNull() {
                this[this.tableDocument.IsContainDocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkNull() {
                return this.IsNull(this.tableDocument.MarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkNull() {
                this[this.tableDocument.MarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableDocument.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchivedNull() {
                this[this.tableDocument.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBusinessAreaNull() {
                return this.IsNull(this.tableDocument.BusinessAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBusinessAreaNull() {
                this[this.tableDocument.BusinessAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplementaryNull() {
                return this.IsNull(this.tableDocument.SupplementaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplementaryNull() {
                this[this.tableDocument.SupplementaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproveDateNull() {
                return this.IsNull(this.tableDocument.ApproveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApproveDateNull() {
                this[this.tableDocument.ApproveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheServiceTeamIDNull() {
                return this.IsNull(this.tableDocument.CacheServiceTeamIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheServiceTeamIDNull() {
                this[this.tableDocument.CacheServiceTeamIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCachePBIDNull() {
                return this.IsNull(this.tableDocument.CachePBIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCachePBIDNull() {
                this[this.tableDocument.CachePBIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAttachmentNull() {
                return this.IsNull(this.tableDocument.CacheAttachmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAttachmentNull() {
                this[this.tableDocument.CacheAttachmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCurrentStateNull() {
                return this.IsNull(this.tableDocument.CacheCurrentStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCurrentStateNull() {
                this[this.tableDocument.CacheCurrentStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCreatorNameNull() {
                return this.IsNull(this.tableDocument.CacheCreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCreatorNameNull() {
                this[this.tableDocument.CacheCreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheRequesterNameNull() {
                return this.IsNull(this.tableDocument.CacheRequesterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheRequesterNameNull() {
                this[this.tableDocument.CacheRequesterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAmountLocalCurrencyNull() {
                return this.IsNull(this.tableDocument.CacheAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAmountLocalCurrencyNull() {
                this[this.tableDocument.CacheAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAmountMainCurrencyNull() {
                return this.IsNull(this.tableDocument.CacheAmountMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAmountMainCurrencyNull() {
                this[this.tableDocument.CacheAmountMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAmountTHBNull() {
                return this.IsNull(this.tableDocument.CacheAmountTHBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAmountTHBNull() {
                this[this.tableDocument.CacheAmountTHBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheBoxIDNull() {
                return this.IsNull(this.tableDocument.CacheBoxIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheBoxIDNull() {
                this[this.tableDocument.CacheBoxIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheWorkFlowIDNull() {
                return this.IsNull(this.tableDocument.CacheWorkFlowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheWorkFlowIDNull() {
                this[this.tableDocument.CacheWorkFlowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheDocumentTypeNameNull() {
                return this.IsNull(this.tableDocument.CacheDocumentTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheDocumentTypeNameNull() {
                this[this.tableDocument.CacheDocumentTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCurrentWorkFlowTypeIDNull() {
                return this.IsNull(this.tableDocument.CacheCurrentWorkFlowTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCurrentWorkFlowTypeIDNull() {
                this[this.tableDocument.CacheCurrentWorkFlowTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCurrentStateNameNull() {
                return this.IsNull(this.tableDocument.CacheCurrentStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCurrentStateNameNull() {
                this[this.tableDocument.CacheCurrentStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsVerifyWithImageNull() {
                return this.IsNull(this.tableDocument.IsVerifyWithImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsVerifyWithImageNull() {
                this[this.tableDocument.IsVerifyWithImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiveDocumentDateNull() {
                return this.IsNull(this.tableDocument.ReceiveDocumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiveDocumentDateNull() {
                this[this.tableDocument.ReceiveDocumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifiedDateNull() {
                return this.IsNull(this.tableDocument.VerifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVerifiedDateNull() {
                this[this.tableDocument.VerifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproveVerifiedDateNull() {
                return this.IsNull(this.tableDocument.ApproveVerifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApproveVerifiedDateNull() {
                this[this.tableDocument.ApproveVerifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaidDateNull() {
                return this.IsNull(this.tableDocument.PaidDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaidDateNull() {
                this[this.tableDocument.PaidDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemittanceDateNull() {
                return this.IsNull(this.tableDocument.RemittanceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemittanceDateNull() {
                this[this.tableDocument.RemittanceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHoldNull() {
                return this.IsNull(this.tableDocument.TotalHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHoldNull() {
                this[this.tableDocument.TotalHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow[] GetFnExpenseDocumentRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseDocument_Document"] == null)) {
                    return new FnExpenseDocumentRow[0];
                }
                else {
                    return ((FnExpenseDocumentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseDocument_Document"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow[] GetDocumentAttachmentRows() {
                if ((this.Table.ChildRelations["FK_DocumentAttachment_Document"] == null)) {
                    return new DocumentAttachmentRow[0];
                }
                else {
                    return ((DocumentAttachmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DocumentAttachment_Document"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow[] GetWorkFlowRows() {
                if ((this.Table.ChildRelations["FK_WorkFlow_Document"] == null)) {
                    return new WorkFlowRow[0];
                }
                else {
                    return ((WorkFlowRow[])(base.GetChildRows(this.Table.ChildRelations["FK_WorkFlow_Document"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow[] GetDocumentInitiatorRows() {
                if ((this.Table.ChildRelations["FK_DocumentInitiator_Document"] == null)) {
                    return new DocumentInitiatorRow[0];
                }
                else {
                    return ((DocumentInitiatorRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DocumentInitiator_Document"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DocumentInitiatorRow : global::System.Data.DataRow {
            
            private DocumentInitiatorDataTable tableDocumentInitiator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentInitiatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentInitiator = ((DocumentInitiatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InitiatorID {
                get {
                    return ((long)(this[this.tableDocumentInitiator.InitiatorIDColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.InitiatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    try {
                        return ((long)(this[this.tableDocumentInitiator.DocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentID\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Seq {
                get {
                    try {
                        return ((short)(this[this.tableDocumentInitiator.SeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Seq\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.SeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UserID {
                get {
                    try {
                        return ((long)(this[this.tableDocumentInitiator.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InitiatorType {
                get {
                    if (this.IsInitiatorTypeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDocumentInitiator.InitiatorTypeColumn]));
                    }
                }
                set {
                    this[this.tableDocumentInitiator.InitiatorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DoApprove {
                get {
                    try {
                        return ((bool)(this[this.tableDocumentInitiator.DoApproveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoApprove\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.DoApproveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableDocumentInitiator.ActiveColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableDocumentInitiator.CreByColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentInitiator.CreDateColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableDocumentInitiator.UpdByColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentInitiator.UpdDateColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableDocumentInitiator.UpdPgmColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableDocumentInitiator.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isSkip {
                get {
                    try {
                        return ((bool)(this[this.tableDocumentInitiator.isSkipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isSkip\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.isSkipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SkipReason {
                get {
                    if (this.IsSkipReasonNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDocumentInitiator.SkipReasonColumn]));
                    }
                }
                set {
                    this[this.tableDocumentInitiator.SkipReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_DocumentInitiator_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DocumentInitiator_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentIDNull() {
                return this.IsNull(this.tableDocumentInitiator.DocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentIDNull() {
                this[this.tableDocumentInitiator.DocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeqNull() {
                return this.IsNull(this.tableDocumentInitiator.SeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeqNull() {
                this[this.tableDocumentInitiator.SeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableDocumentInitiator.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIDNull() {
                this[this.tableDocumentInitiator.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInitiatorTypeNull() {
                return this.IsNull(this.tableDocumentInitiator.InitiatorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInitiatorTypeNull() {
                this[this.tableDocumentInitiator.InitiatorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoApproveNull() {
                return this.IsNull(this.tableDocumentInitiator.DoApproveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoApproveNull() {
                this[this.tableDocumentInitiator.DoApproveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableDocumentInitiator.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableDocumentInitiator.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisSkipNull() {
                return this.IsNull(this.tableDocumentInitiator.isSkipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisSkipNull() {
                this[this.tableDocumentInitiator.isSkipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSkipReasonNull() {
                return this.IsNull(this.tableDocumentInitiator.SkipReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSkipReasonNull() {
                this[this.tableDocumentInitiator.SkipReasonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WorkFlowRow : global::System.Data.DataRow {
            
            private WorkFlowDataTable tableWorkFlow;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkFlowRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkFlow = ((WorkFlowDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WorkFlowID {
                get {
                    return ((long)(this[this.tableWorkFlow.WorkFlowIDColumn]));
                }
                set {
                    this[this.tableWorkFlow.WorkFlowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    try {
                        return ((long)(this[this.tableWorkFlow.DocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentID\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WorkFlowTypeID {
                get {
                    try {
                        return ((int)(this[this.tableWorkFlow.WorkFlowTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkFlowTypeID\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.WorkFlowTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableWorkFlow.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrentState {
                get {
                    try {
                        return ((int)(this[this.tableWorkFlow.CurrentStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentState\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.CurrentStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableWorkFlow.ActiveColumn]));
                }
                set {
                    this[this.tableWorkFlow.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableWorkFlow.CreByColumn]));
                }
                set {
                    this[this.tableWorkFlow.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableWorkFlow.CreDateColumn]));
                }
                set {
                    this[this.tableWorkFlow.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableWorkFlow.UpdByColumn]));
                }
                set {
                    this[this.tableWorkFlow.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableWorkFlow.UpdDateColumn]));
                }
                set {
                    this[this.tableWorkFlow.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableWorkFlow.UpdPgmColumn]));
                }
                set {
                    this[this.tableWorkFlow.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableWorkFlow.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_WorkFlow_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_WorkFlow_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentIDNull() {
                return this.IsNull(this.tableWorkFlow.DocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentIDNull() {
                this[this.tableWorkFlow.DocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkFlowTypeIDNull() {
                return this.IsNull(this.tableWorkFlow.WorkFlowTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkFlowTypeIDNull() {
                this[this.tableWorkFlow.WorkFlowTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableWorkFlow.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableWorkFlow.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentStateNull() {
                return this.IsNull(this.tableWorkFlow.CurrentStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentStateNull() {
                this[this.tableWorkFlow.CurrentStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableWorkFlow.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableWorkFlow.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DocumentAttachmentRow : global::System.Data.DataRow {
            
            private DocumentAttachmentDataTable tableDocumentAttachment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentAttachmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentAttachment = ((DocumentAttachmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AttachmentID {
                get {
                    return ((long)(this[this.tableDocumentAttachment.AttachmentIDColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.AttachmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    try {
                        return ((long)(this[this.tableDocumentAttachment.DocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentID\' in table \'DocumentAttachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentAttachment.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttachFileName {
                get {
                    if (this.IsAttachFileNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDocumentAttachment.AttachFileNameColumn]));
                    }
                }
                set {
                    this[this.tableDocumentAttachment.AttachFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttachFilePath {
                get {
                    if (this.IsAttachFilePathNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDocumentAttachment.AttachFilePathColumn]));
                    }
                }
                set {
                    this[this.tableDocumentAttachment.AttachFilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableDocumentAttachment.ActiveColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableDocumentAttachment.CreByColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentAttachment.CreDateColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableDocumentAttachment.UpdByColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentAttachment.UpdDateColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableDocumentAttachment.UpdPgmColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableDocumentAttachment.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'DocumentAttachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentAttachment.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_DocumentAttachment_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DocumentAttachment_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentIDNull() {
                return this.IsNull(this.tableDocumentAttachment.DocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentIDNull() {
                this[this.tableDocumentAttachment.DocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachFileNameNull() {
                return this.IsNull(this.tableDocumentAttachment.AttachFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachFileNameNull() {
                this[this.tableDocumentAttachment.AttachFileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachFilePathNull() {
                return this.IsNull(this.tableDocumentAttachment.AttachFilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachFilePathNull() {
                this[this.tableDocumentAttachment.AttachFilePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableDocumentAttachment.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableDocumentAttachment.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseDocumentRow : global::System.Data.DataRow {
            
            private FnExpenseDocumentDataTable tableFnExpenseDocument;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseDocumentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseDocument = ((FnExpenseDocumentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    return ((long)(this[this.tableFnExpenseDocument.ExpenseIDColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    return ((long)(this[this.tableFnExpenseDocument.DocumentIDColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ServiceTeamID {
                get {
                    return ((long)(this[this.tableFnExpenseDocument.ServiceTeamIDColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.ServiceTeamIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PBID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseDocument.PBIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PBID\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.PBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExpenseType {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.ExpenseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseType\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ExpenseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableFnExpenseDocument.PaymentTypeColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalExpense {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalExpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpense\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalExpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAdvance {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalAdvanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAdvance\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalAdvanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseDocument.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseDocument.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseDocument.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseDocument.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseDocument.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseDocument.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseDocument.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseDocument.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBusinessPurpose {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseDocument.IsBusinessPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBusinessPurpose\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.IsBusinessPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrainningPurpose {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseDocument.IsTrainningPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTrainningPurpose\' in table \'FnExpenseDocument\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.IsTrainningPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherPurpose {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseDocument.IsOtherPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOtherPurpose\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.IsOtherPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherPurposeDescription {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.OtherPurposeDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherPurposeDescription\' in table \'FnExpenseDocument\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.OtherPurposeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFnExpenseDocument.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFnExpenseDocument.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PersonalLevel {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.PersonalLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalLevel\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.PersonalLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRateForUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.ExchangeRateForUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRateForUSD\' in table \'FnExpenseDocument\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ExchangeRateForUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalRemittance {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalRemittanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalRemittance\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalRemittanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DifferenceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.DifferenceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DifferenceAmount\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.DifferenceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRateForUSDAdvance {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.ExchangeRateForUSDAdvanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRateForUSDAdvance\' in table \'FnExpenseDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ExchangeRateForUSDAdvanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TADocumentID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseDocument.TADocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TADocumentID\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TADocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoxID {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.BoxIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoxID\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.BoxIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RemittancePostingStatus {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.RemittancePostingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemittancePostingStatus\' in table \'FnExpenseDocument\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.RemittancePostingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PayInGLAccount {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.PayInGLAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayInGLAccount\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.PayInGLAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PayInValueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFnExpenseDocument.PayInValueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayInValueDate\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.PayInValueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReceivedMethod {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseDocument.ReceivedMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedMethod\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ReceivedMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MainCurrencyID {
                get {
                    try {
                        return ((short)(this[this.tableFnExpenseDocument.MainCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCurrencyID\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.MainCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LocalCurrencyID {
                get {
                    try {
                        return ((short)(this[this.tableFnExpenseDocument.LocalCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCurrencyID\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.LocalCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalExpenseLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalExpenseLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpenseLocalCurrency\' in table \'FnExpenseDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalExpenseLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAdvanceLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalAdvanceLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAdvanceLocalCurrency\' in table \'FnExpenseDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalAdvanceLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalRemittanceLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalRemittanceLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalRemittanceLocalCurrency\' in table \'FnExpenseDocument\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalRemittanceLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DifferenceAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.DifferenceAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DifferenceAmountLocalCurrency\' in table \'FnExpenseDocument\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.DifferenceAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalExpenseMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalExpenseMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpenseMainCurrency\' in table \'FnExpenseDocument\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalExpenseMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAdvanceMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalAdvanceMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAdvanceMainCurrency\' in table \'FnExpenseDocument\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalAdvanceMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalRemittanceMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.TotalRemittanceMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalRemittanceMainCurrency\' in table \'FnExpenseDocument\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.TotalRemittanceMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DifferenceAmountMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.DifferenceAmountMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DifferenceAmountMainCurrency\' in table \'FnExpenseDocument\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.DifferenceAmountMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRateForLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.ExchangeRateForLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRateForLocalCurrency\' in table \'FnExpenseDocument\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ExchangeRateForLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRateMainToTHBCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.ExchangeRateMainToTHBCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRateMainToTHBCurrency\' in table \'FnExpenseDocument\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.ExchangeRateMainToTHBCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepOffice {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseDocument.IsRepOfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRepOffice\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.IsRepOfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountBeforeVerify {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.AmountBeforeVerifyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountBeforeVerify\' in table \'FnExpenseDocument\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.AmountBeforeVerifyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountApproved {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseDocument.AmountApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountApproved\' in table \'FnExpenseDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.AmountApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FixedAdvanceDocumentID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseDocument.FixedAdvanceDocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FixedAdvanceDocumentID\' in table \'FnExpenseDocument\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseDocument.FixedAdvanceDocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseDocument_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseDocument_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPBIDNull() {
                return this.IsNull(this.tableFnExpenseDocument.PBIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPBIDNull() {
                this[this.tableFnExpenseDocument.PBIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseTypeNull() {
                return this.IsNull(this.tableFnExpenseDocument.ExpenseTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseTypeNull() {
                this[this.tableFnExpenseDocument.ExpenseTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalExpenseNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalExpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalExpenseNull() {
                this[this.tableFnExpenseDocument.TotalExpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalAdvanceNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalAdvanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalAdvanceNull() {
                this[this.tableFnExpenseDocument.TotalAdvanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseDocument.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseDocument.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsBusinessPurposeNull() {
                return this.IsNull(this.tableFnExpenseDocument.IsBusinessPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsBusinessPurposeNull() {
                this[this.tableFnExpenseDocument.IsBusinessPurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsTrainningPurposeNull() {
                return this.IsNull(this.tableFnExpenseDocument.IsTrainningPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsTrainningPurposeNull() {
                this[this.tableFnExpenseDocument.IsTrainningPurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOtherPurposeNull() {
                return this.IsNull(this.tableFnExpenseDocument.IsOtherPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOtherPurposeNull() {
                this[this.tableFnExpenseDocument.IsOtherPurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherPurposeDescriptionNull() {
                return this.IsNull(this.tableFnExpenseDocument.OtherPurposeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherPurposeDescriptionNull() {
                this[this.tableFnExpenseDocument.OtherPurposeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableFnExpenseDocument.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFromDateNull() {
                this[this.tableFnExpenseDocument.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToDateNull() {
                return this.IsNull(this.tableFnExpenseDocument.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToDateNull() {
                this[this.tableFnExpenseDocument.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableFnExpenseDocument.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNull() {
                this[this.tableFnExpenseDocument.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPersonalLevelNull() {
                return this.IsNull(this.tableFnExpenseDocument.PersonalLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPersonalLevelNull() {
                this[this.tableFnExpenseDocument.PersonalLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateForUSDNull() {
                return this.IsNull(this.tableFnExpenseDocument.ExchangeRateForUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateForUSDNull() {
                this[this.tableFnExpenseDocument.ExchangeRateForUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalRemittanceNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalRemittanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalRemittanceNull() {
                this[this.tableFnExpenseDocument.TotalRemittanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDifferenceAmountNull() {
                return this.IsNull(this.tableFnExpenseDocument.DifferenceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDifferenceAmountNull() {
                this[this.tableFnExpenseDocument.DifferenceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateForUSDAdvanceNull() {
                return this.IsNull(this.tableFnExpenseDocument.ExchangeRateForUSDAdvanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateForUSDAdvanceNull() {
                this[this.tableFnExpenseDocument.ExchangeRateForUSDAdvanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTADocumentIDNull() {
                return this.IsNull(this.tableFnExpenseDocument.TADocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTADocumentIDNull() {
                this[this.tableFnExpenseDocument.TADocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoxIDNull() {
                return this.IsNull(this.tableFnExpenseDocument.BoxIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoxIDNull() {
                this[this.tableFnExpenseDocument.BoxIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemittancePostingStatusNull() {
                return this.IsNull(this.tableFnExpenseDocument.RemittancePostingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemittancePostingStatusNull() {
                this[this.tableFnExpenseDocument.RemittancePostingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayInGLAccountNull() {
                return this.IsNull(this.tableFnExpenseDocument.PayInGLAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayInGLAccountNull() {
                this[this.tableFnExpenseDocument.PayInGLAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayInValueDateNull() {
                return this.IsNull(this.tableFnExpenseDocument.PayInValueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayInValueDateNull() {
                this[this.tableFnExpenseDocument.PayInValueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedMethodNull() {
                return this.IsNull(this.tableFnExpenseDocument.ReceivedMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedMethodNull() {
                this[this.tableFnExpenseDocument.ReceivedMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMainCurrencyIDNull() {
                return this.IsNull(this.tableFnExpenseDocument.MainCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMainCurrencyIDNull() {
                this[this.tableFnExpenseDocument.MainCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocalCurrencyIDNull() {
                return this.IsNull(this.tableFnExpenseDocument.LocalCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocalCurrencyIDNull() {
                this[this.tableFnExpenseDocument.LocalCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalExpenseLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalExpenseLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalExpenseLocalCurrencyNull() {
                this[this.tableFnExpenseDocument.TotalExpenseLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalAdvanceLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalAdvanceLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalAdvanceLocalCurrencyNull() {
                this[this.tableFnExpenseDocument.TotalAdvanceLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalRemittanceLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalRemittanceLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalRemittanceLocalCurrencyNull() {
                this[this.tableFnExpenseDocument.TotalRemittanceLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDifferenceAmountLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.DifferenceAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDifferenceAmountLocalCurrencyNull() {
                this[this.tableFnExpenseDocument.DifferenceAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalExpenseMainCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalExpenseMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalExpenseMainCurrencyNull() {
                this[this.tableFnExpenseDocument.TotalExpenseMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalAdvanceMainCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalAdvanceMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalAdvanceMainCurrencyNull() {
                this[this.tableFnExpenseDocument.TotalAdvanceMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalRemittanceMainCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.TotalRemittanceMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalRemittanceMainCurrencyNull() {
                this[this.tableFnExpenseDocument.TotalRemittanceMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDifferenceAmountMainCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.DifferenceAmountMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDifferenceAmountMainCurrencyNull() {
                this[this.tableFnExpenseDocument.DifferenceAmountMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateForLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.ExchangeRateForLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateForLocalCurrencyNull() {
                this[this.tableFnExpenseDocument.ExchangeRateForLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateMainToTHBCurrencyNull() {
                return this.IsNull(this.tableFnExpenseDocument.ExchangeRateMainToTHBCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateMainToTHBCurrencyNull() {
                this[this.tableFnExpenseDocument.ExchangeRateMainToTHBCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsRepOfficeNull() {
                return this.IsNull(this.tableFnExpenseDocument.IsRepOfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsRepOfficeNull() {
                this[this.tableFnExpenseDocument.IsRepOfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountBeforeVerifyNull() {
                return this.IsNull(this.tableFnExpenseDocument.AmountBeforeVerifyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountBeforeVerifyNull() {
                this[this.tableFnExpenseDocument.AmountBeforeVerifyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountApprovedNull() {
                return this.IsNull(this.tableFnExpenseDocument.AmountApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountApprovedNull() {
                this[this.tableFnExpenseDocument.AmountApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFixedAdvanceDocumentIDNull() {
                return this.IsNull(this.tableFnExpenseDocument.FixedAdvanceDocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFixedAdvanceDocumentIDNull() {
                this[this.tableFnExpenseDocument.FixedAdvanceDocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARow[] GetFnExpenseCARows() {
                if ((this.Table.ChildRelations["FK_FnExpenseCA_FnExpenseCA"] == null)) {
                    return new FnExpenseCARow[0];
                }
                else {
                    return ((FnExpenseCARow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseCA_FnExpenseCA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow[] GetFnExpensePerdiemRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseDocument_FnExpensePerdiem"] == null)) {
                    return new FnExpensePerdiemRow[0];
                }
                else {
                    return ((FnExpensePerdiemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseDocument_FnExpensePerdiem"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow[] GetFnExpenseInvoiceRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseInvoice_FnExpenseDocument"] == null)) {
                    return new FnExpenseInvoiceRow[0];
                }
                else {
                    return ((FnExpenseInvoiceRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseInvoice_FnExpenseDocument"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow[] GetFnExpenseMileageRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseMileage_FnExpenseDocument"] == null)) {
                    return new FnExpenseMileageRow[0];
                }
                else {
                    return ((FnExpenseMileageRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseMileage_FnExpenseDocument"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow[] GetFnExpenseAdvanceRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseAdvance_FnExpenseDocument"] == null)) {
                    return new FnExpenseAdvanceRow[0];
                }
                else {
                    return ((FnExpenseAdvanceRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseAdvance_FnExpenseDocument"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseAdvanceRow : global::System.Data.DataRow {
            
            private FnExpenseAdvanceDataTable tableFnExpenseAdvance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseAdvanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseAdvance = ((FnExpenseAdvanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FnExpenseAdvanceID {
                get {
                    return ((long)(this[this.tableFnExpenseAdvance.FnExpenseAdvanceIDColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.FnExpenseAdvanceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseAdvance.ExpenseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseID\' in table \'FnExpenseAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvance.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AdvanceID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseAdvance.AdvanceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvanceID\' in table \'FnExpenseAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvance.AdvanceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseAdvance.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseAdvance.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseAdvance.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseAdvance.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseAdvance.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseAdvance.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvance.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseAdvance.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvance.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow FnExpenseDocumentRow {
                get {
                    return ((FnExpenseDocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseAdvance_FnExpenseDocument"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseAdvance_FnExpenseDocument"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseIDNull() {
                return this.IsNull(this.tableFnExpenseAdvance.ExpenseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseIDNull() {
                this[this.tableFnExpenseAdvance.ExpenseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdvanceIDNull() {
                return this.IsNull(this.tableFnExpenseAdvance.AdvanceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdvanceIDNull() {
                this[this.tableFnExpenseAdvance.AdvanceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseAdvance.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseAdvance.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRow[] GetFnExpenseAdvanceExchangeRateRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance"] == null)) {
                    return new FnExpenseAdvanceExchangeRateRow[0];
                }
                else {
                    return ((FnExpenseAdvanceExchangeRateRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseAdvanceExchangeRateRow : global::System.Data.DataRow {
            
            private FnExpenseAdvanceExchangeRateDataTable tableFnExpenseAdvanceExchangeRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseAdvanceExchangeRateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseAdvanceExchangeRate = ((FnExpenseAdvanceExchangeRateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseAdvanceExchangeRateID {
                get {
                    return ((long)(this[this.tableFnExpenseAdvanceExchangeRate.ExpenseAdvanceExchangeRateIDColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.ExpenseAdvanceExchangeRateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FnExpenseAdvanceID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseAdvanceExchangeRate.FnExpenseAdvanceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FnExpenseAdvanceID\' in table \'FnExpenseAdvanceExchangeRate\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.FnExpenseAdvanceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short CurrencyID {
                get {
                    try {
                        return ((short)(this[this.tableFnExpenseAdvanceExchangeRate.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'FnExpenseAdvanceExchangeRate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseAdvanceExchangeRate.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'FnExpenseAdvanceExchangeRate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseAdvanceExchangeRate.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseAdvanceExchangeRate.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseAdvanceExchangeRate.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseAdvanceExchangeRate.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseAdvanceExchangeRate.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseAdvanceExchangeRate.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseAdvanceExchangeRate.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseAdvanceExchangeRate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseAdvanceExchangeRate.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow FnExpenseAdvanceRow {
                get {
                    return ((FnExpenseAdvanceRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseAdvanceExchangeRate_FnExpenseAdvance"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFnExpenseAdvanceIDNull() {
                return this.IsNull(this.tableFnExpenseAdvanceExchangeRate.FnExpenseAdvanceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFnExpenseAdvanceIDNull() {
                this[this.tableFnExpenseAdvanceExchangeRate.FnExpenseAdvanceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableFnExpenseAdvanceExchangeRate.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableFnExpenseAdvanceExchangeRate.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableFnExpenseAdvanceExchangeRate.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateNull() {
                this[this.tableFnExpenseAdvanceExchangeRate.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseAdvanceExchangeRate.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseAdvanceExchangeRate.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseMileageRow : global::System.Data.DataRow {
            
            private FnExpenseMileageDataTable tableFnExpenseMileage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseMileageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseMileage = ((FnExpenseMileageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseMileageID {
                get {
                    return ((long)(this[this.tableFnExpenseMileage.ExpenseMileageIDColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.ExpenseMileageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileage.ExpenseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseID\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CarLicenseNo {
                get {
                    return ((string)(this[this.tableFnExpenseMileage.CarLicenseNoColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.CarLicenseNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeOfCar {
                get {
                    return ((string)(this[this.tableFnExpenseMileage.TypeOfCarColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.TypeOfCarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Owner {
                get {
                    return ((string)(this[this.tableFnExpenseMileage.OwnerColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.OwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PermissionNo {
                get {
                    if (this.IsPermissionNoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseMileage.PermissionNoColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.PermissionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HomeToOfficeRoundTrip {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.HomeToOfficeRoundTripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeToOfficeRoundTrip\' in table \'FnExpenseMileage\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.HomeToOfficeRoundTripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PrivateUse {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.PrivateUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrivateUse\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.PrivateUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal First100KmRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.First100KmRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'First100KmRate\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.First100KmRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Exceed100KmRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.Exceed100KmRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exceed100KmRate\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.Exceed100KmRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HelpingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.HelpingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HelpingAmount\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.HelpingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OverHelpingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileage.OverHelpingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverHelpingAmount\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.OverHelpingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseMileage.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseMileage.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseMileage.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseMileage.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseMileage.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseMileage.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseMileage.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseMileage.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CostCenterID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileage.CostCenterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCenterID\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.CostCenterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AccountID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileage.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long IOID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileage.IOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IOID\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.IOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverrideLevel {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseMileage.IsOverrideLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverrideLevel\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.IsOverrideLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverrideCompanyId {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseMileage.IsOverrideCompanyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverrideCompanyId\' in table \'FnExpenseMileage\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.IsOverrideCompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OverrideCompanyId {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileage.OverrideCompanyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideCompanyId\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.OverrideCompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverrideUserPersonalLevelCode {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseMileage.OverrideUserPersonalLevelCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideUserPersonalLevelCode\' in table \'FnExpenseMileage\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.OverrideUserPersonalLevelCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CurrentCompanyId {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileage.CurrentCompanyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentCompanyId\' in table \'FnExpenseMileage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.CurrentCompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentUserPersonalLevelCode {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseMileage.CurrentUserPersonalLevelCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentUserPersonalLevelCode\' in table \'FnExpenseMileage\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.CurrentUserPersonalLevelCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverrideLevelRemark {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseMileage.OverrideLevelRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideLevelRemark\' in table \'FnExpenseMileage\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileage.OverrideLevelRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow FnExpenseDocumentRow {
                get {
                    return ((FnExpenseDocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseMileage_FnExpenseDocument"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseMileage_FnExpenseDocument"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseIDNull() {
                return this.IsNull(this.tableFnExpenseMileage.ExpenseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseIDNull() {
                this[this.tableFnExpenseMileage.ExpenseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPermissionNoNull() {
                return this.IsNull(this.tableFnExpenseMileage.PermissionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPermissionNoNull() {
                this[this.tableFnExpenseMileage.PermissionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHomeToOfficeRoundTripNull() {
                return this.IsNull(this.tableFnExpenseMileage.HomeToOfficeRoundTripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHomeToOfficeRoundTripNull() {
                this[this.tableFnExpenseMileage.HomeToOfficeRoundTripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrivateUseNull() {
                return this.IsNull(this.tableFnExpenseMileage.PrivateUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrivateUseNull() {
                this[this.tableFnExpenseMileage.PrivateUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirst100KmRateNull() {
                return this.IsNull(this.tableFnExpenseMileage.First100KmRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirst100KmRateNull() {
                this[this.tableFnExpenseMileage.First100KmRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExceed100KmRateNull() {
                return this.IsNull(this.tableFnExpenseMileage.Exceed100KmRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExceed100KmRateNull() {
                this[this.tableFnExpenseMileage.Exceed100KmRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableFnExpenseMileage.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalAmountNull() {
                this[this.tableFnExpenseMileage.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHelpingAmountNull() {
                return this.IsNull(this.tableFnExpenseMileage.HelpingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHelpingAmountNull() {
                this[this.tableFnExpenseMileage.HelpingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverHelpingAmountNull() {
                return this.IsNull(this.tableFnExpenseMileage.OverHelpingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverHelpingAmountNull() {
                this[this.tableFnExpenseMileage.OverHelpingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseMileage.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseMileage.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCenterIDNull() {
                return this.IsNull(this.tableFnExpenseMileage.CostCenterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCenterIDNull() {
                this[this.tableFnExpenseMileage.CostCenterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tableFnExpenseMileage.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountIDNull() {
                this[this.tableFnExpenseMileage.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIOIDNull() {
                return this.IsNull(this.tableFnExpenseMileage.IOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIOIDNull() {
                this[this.tableFnExpenseMileage.IOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOverrideLevelNull() {
                return this.IsNull(this.tableFnExpenseMileage.IsOverrideLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOverrideLevelNull() {
                this[this.tableFnExpenseMileage.IsOverrideLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOverrideCompanyIdNull() {
                return this.IsNull(this.tableFnExpenseMileage.IsOverrideCompanyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOverrideCompanyIdNull() {
                this[this.tableFnExpenseMileage.IsOverrideCompanyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverrideCompanyIdNull() {
                return this.IsNull(this.tableFnExpenseMileage.OverrideCompanyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverrideCompanyIdNull() {
                this[this.tableFnExpenseMileage.OverrideCompanyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverrideUserPersonalLevelCodeNull() {
                return this.IsNull(this.tableFnExpenseMileage.OverrideUserPersonalLevelCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverrideUserPersonalLevelCodeNull() {
                this[this.tableFnExpenseMileage.OverrideUserPersonalLevelCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentCompanyIdNull() {
                return this.IsNull(this.tableFnExpenseMileage.CurrentCompanyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentCompanyIdNull() {
                this[this.tableFnExpenseMileage.CurrentCompanyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentUserPersonalLevelCodeNull() {
                return this.IsNull(this.tableFnExpenseMileage.CurrentUserPersonalLevelCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentUserPersonalLevelCodeNull() {
                this[this.tableFnExpenseMileage.CurrentUserPersonalLevelCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverrideLevelRemarkNull() {
                return this.IsNull(this.tableFnExpenseMileage.OverrideLevelRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverrideLevelRemarkNull() {
                this[this.tableFnExpenseMileage.OverrideLevelRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRow[] GetFnExpenseMileageItemRows() {
                if ((this.Table.ChildRelations["FK_FnExpenseMileageItem_FnExpenseMileage"] == null)) {
                    return new FnExpenseMileageItemRow[0];
                }
                else {
                    return ((FnExpenseMileageItemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpenseMileageItem_FnExpenseMileage"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseMileageItemRow : global::System.Data.DataRow {
            
            private FnExpenseMileageItemDataTable tableFnExpenseMileageItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseMileageItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseMileageItem = ((FnExpenseMileageItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseMileageItemID {
                get {
                    return ((long)(this[this.tableFnExpenseMileageItem.ExpenseMileageItemIDColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.ExpenseMileageItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseMileageID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMileageItem.ExpenseMileageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseMileageID\' in table \'FnExpenseMileageItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.ExpenseMileageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TravelDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFnExpenseMileageItem.TravelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TravelDate\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.TravelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationFrom {
                get {
                    if (this.IsLocationFromNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseMileageItem.LocationFromColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.LocationFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationTo {
                get {
                    if (this.IsLocationToNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseMileageItem.LocationToColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.LocationToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CarMeterStart {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.CarMeterStartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarMeterStart\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.CarMeterStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CarMeterEnd {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.CarMeterEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarMeterEnd\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.CarMeterEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DistanceTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.DistanceTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceTotal\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.DistanceTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DistanceFirst100Km {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.DistanceFirst100KmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFirst100Km\' in table \'FnExpenseMileageItem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.DistanceFirst100KmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DistanceExceed100Km {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.DistanceExceed100KmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceExceed100Km\' in table \'FnExpenseMileageItem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.DistanceExceed100KmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DistanceAdjust {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.DistanceAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceAdjust\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.DistanceAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DistanceNet {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseMileageItem.DistanceNetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceNet\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.DistanceNetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseMileageItem.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseMileageItem.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseMileageItem.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseMileageItem.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseMileageItem.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseMileageItem.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseMileageItem.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseMileageItem.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseMileageItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMileageItem.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow FnExpenseMileageRow {
                get {
                    return ((FnExpenseMileageRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseMileageItem_FnExpenseMileage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseMileageItem_FnExpenseMileage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseMileageIDNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.ExpenseMileageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseMileageIDNull() {
                this[this.tableFnExpenseMileageItem.ExpenseMileageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTravelDateNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.TravelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTravelDateNull() {
                this[this.tableFnExpenseMileageItem.TravelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationFromNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.LocationFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationFromNull() {
                this[this.tableFnExpenseMileageItem.LocationFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationToNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.LocationToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationToNull() {
                this[this.tableFnExpenseMileageItem.LocationToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarMeterStartNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.CarMeterStartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarMeterStartNull() {
                this[this.tableFnExpenseMileageItem.CarMeterStartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarMeterEndNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.CarMeterEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarMeterEndNull() {
                this[this.tableFnExpenseMileageItem.CarMeterEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistanceTotalNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.DistanceTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistanceTotalNull() {
                this[this.tableFnExpenseMileageItem.DistanceTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistanceFirst100KmNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.DistanceFirst100KmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistanceFirst100KmNull() {
                this[this.tableFnExpenseMileageItem.DistanceFirst100KmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistanceExceed100KmNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.DistanceExceed100KmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistanceExceed100KmNull() {
                this[this.tableFnExpenseMileageItem.DistanceExceed100KmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistanceAdjustNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.DistanceAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistanceAdjustNull() {
                this[this.tableFnExpenseMileageItem.DistanceAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistanceNetNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.DistanceNetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistanceNetNull() {
                this[this.tableFnExpenseMileageItem.DistanceNetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseMileageItem.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseMileageItem.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseInvoiceRow : global::System.Data.DataRow {
            
            private FnExpenseInvoiceDataTable tableFnExpenseInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseInvoice = ((FnExpenseInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InvoiceID {
                get {
                    return ((long)(this[this.tableFnExpenseInvoice.InvoiceIDColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.InvoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    return ((long)(this[this.tableFnExpenseInvoice.ExpenseIDColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceDocumentType {
                get {
                    if (this.IsInvoiceDocumentTypeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.InvoiceDocumentTypeColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.InvoiceDocumentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNo {
                get {
                    if (this.IsInvoiceNoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.InvoiceNoColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFnExpenseInvoice.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoice.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorCode {
                get {
                    if (this.IsVendorCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.VendorCodeColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorName {
                get {
                    if (this.IsVendorNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.VendorNameColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseInvoice.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    if (this.IsCityNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.CityColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    if (this.IsCountryNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.CountryColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostalCode {
                get {
                    if (this.IsPostalCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.PostalCodeColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.PostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VatAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.VatAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatAmount\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.VatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WHTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.WHTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTAmount\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isVAT {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseInvoice.isVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isVAT\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.isVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isWHT {
                get {
                    try {
                        return ((bool)(this[this.tableFnExpenseInvoice.isWHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isWHT\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.isWHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TaxID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoice.TaxIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxID\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.TaxIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NonDeductAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.NonDeductAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonDeductAmount\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.NonDeductAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.TotalBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBaseAmount\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.TotalBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WHTRate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.WHTRate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTRate1\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTRate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WHTTypeID1 {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoice.WHTTypeID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTTypeID1\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseAmount1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.BaseAmount1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAmount1\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.BaseAmount1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WHTAmount1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.WHTAmount1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTAmount1\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTAmount1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WHTRate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.WHTRate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTRate2\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTRate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WHTTypeID2 {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoice.WHTTypeID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTTypeID2\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTTypeID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseAmount2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.BaseAmount2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAmount2\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.BaseAmount2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WHTAmount2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.WHTAmount2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTAmount2\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTAmount2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseInvoice.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseInvoice.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseInvoice.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseInvoice.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseInvoice.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseInvoice.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoice.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseInvoice.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WHTID1 {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoice.WHTID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTID1\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WHTID2 {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoice.WHTID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHTID2\' in table \'FnExpenseInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.WHTID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorTaxCode {
                get {
                    if (this.IsVendorTaxCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.VendorTaxCodeColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.VendorTaxCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BranchCode {
                get {
                    if (this.IsBranchCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.BranchCodeColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.TotalAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmountLocalCurrency\' in table \'FnExpenseInvoice\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.TotalAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalBaseAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.TotalBaseAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBaseAmountLocalCurrency\' in table \'FnExpenseInvoice\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.TotalBaseAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.NetAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmountLocalCurrency\' in table \'FnExpenseInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.NetAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRateForLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.ExchangeRateForLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRateForLocalCurrency\' in table \'FnExpenseInvoice\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.ExchangeRateForLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRateMainToTHBCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoice.ExchangeRateMainToTHBCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRateMainToTHBCurrency\' in table \'FnExpenseInvoice\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.ExchangeRateMainToTHBCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorBranch {
                get {
                    if (this.IsVendorBranchNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoice.VendorBranchColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoice.VendorBranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow FnExpenseDocumentRow {
                get {
                    return ((FnExpenseDocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseInvoice_FnExpenseDocument"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseInvoice_FnExpenseDocument"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDocumentTypeNull() {
                return this.IsNull(this.tableFnExpenseInvoice.InvoiceDocumentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDocumentTypeNull() {
                this[this.tableFnExpenseInvoice.InvoiceDocumentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableFnExpenseInvoice.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceNoNull() {
                this[this.tableFnExpenseInvoice.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableFnExpenseInvoice.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableFnExpenseInvoice.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableFnExpenseInvoice.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorIDNull() {
                this[this.tableFnExpenseInvoice.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tableFnExpenseInvoice.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorCodeNull() {
                this[this.tableFnExpenseInvoice.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableFnExpenseInvoice.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorNameNull() {
                this[this.tableFnExpenseInvoice.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStreetNull() {
                return this.IsNull(this.tableFnExpenseInvoice.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStreetNull() {
                this[this.tableFnExpenseInvoice.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableFnExpenseInvoice.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tableFnExpenseInvoice.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableFnExpenseInvoice.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNull() {
                this[this.tableFnExpenseInvoice.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tableFnExpenseInvoice.PostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostalCodeNull() {
                this[this.tableFnExpenseInvoice.PostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoice.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalAmountNull() {
                this[this.tableFnExpenseInvoice.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVatAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoice.VatAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVatAmountNull() {
                this[this.tableFnExpenseInvoice.VatAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTAmountNull() {
                this[this.tableFnExpenseInvoice.WHTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoice.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetAmountNull() {
                this[this.tableFnExpenseInvoice.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableFnExpenseInvoice.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableFnExpenseInvoice.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisVATNull() {
                return this.IsNull(this.tableFnExpenseInvoice.isVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisVATNull() {
                this[this.tableFnExpenseInvoice.isVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisWHTNull() {
                return this.IsNull(this.tableFnExpenseInvoice.isWHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisWHTNull() {
                this[this.tableFnExpenseInvoice.isWHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxIDNull() {
                return this.IsNull(this.tableFnExpenseInvoice.TaxIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxIDNull() {
                this[this.tableFnExpenseInvoice.TaxIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonDeductAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoice.NonDeductAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonDeductAmountNull() {
                this[this.tableFnExpenseInvoice.NonDeductAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalBaseAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoice.TotalBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalBaseAmountNull() {
                this[this.tableFnExpenseInvoice.TotalBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTRate1Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTRate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTRate1Null() {
                this[this.tableFnExpenseInvoice.WHTRate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTTypeID1Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTTypeID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTTypeID1Null() {
                this[this.tableFnExpenseInvoice.WHTTypeID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseAmount1Null() {
                return this.IsNull(this.tableFnExpenseInvoice.BaseAmount1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseAmount1Null() {
                this[this.tableFnExpenseInvoice.BaseAmount1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTAmount1Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTAmount1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTAmount1Null() {
                this[this.tableFnExpenseInvoice.WHTAmount1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTRate2Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTRate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTRate2Null() {
                this[this.tableFnExpenseInvoice.WHTRate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTTypeID2Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTTypeID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTTypeID2Null() {
                this[this.tableFnExpenseInvoice.WHTTypeID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseAmount2Null() {
                return this.IsNull(this.tableFnExpenseInvoice.BaseAmount2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseAmount2Null() {
                this[this.tableFnExpenseInvoice.BaseAmount2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTAmount2Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTAmount2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTAmount2Null() {
                this[this.tableFnExpenseInvoice.WHTAmount2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseInvoice.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseInvoice.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTID1Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTID1Null() {
                this[this.tableFnExpenseInvoice.WHTID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWHTID2Null() {
                return this.IsNull(this.tableFnExpenseInvoice.WHTID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWHTID2Null() {
                this[this.tableFnExpenseInvoice.WHTID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorTaxCodeNull() {
                return this.IsNull(this.tableFnExpenseInvoice.VendorTaxCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorTaxCodeNull() {
                this[this.tableFnExpenseInvoice.VendorTaxCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableFnExpenseInvoice.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchCodeNull() {
                this[this.tableFnExpenseInvoice.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalAmountLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseInvoice.TotalAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalAmountLocalCurrencyNull() {
                this[this.tableFnExpenseInvoice.TotalAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalBaseAmountLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseInvoice.TotalBaseAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalBaseAmountLocalCurrencyNull() {
                this[this.tableFnExpenseInvoice.TotalBaseAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetAmountLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseInvoice.NetAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetAmountLocalCurrencyNull() {
                this[this.tableFnExpenseInvoice.NetAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateForLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpenseInvoice.ExchangeRateForLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateForLocalCurrencyNull() {
                this[this.tableFnExpenseInvoice.ExchangeRateForLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateMainToTHBCurrencyNull() {
                return this.IsNull(this.tableFnExpenseInvoice.ExchangeRateMainToTHBCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateMainToTHBCurrencyNull() {
                this[this.tableFnExpenseInvoice.ExchangeRateMainToTHBCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorBranchNull() {
                return this.IsNull(this.tableFnExpenseInvoice.VendorBranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorBranchNull() {
                this[this.tableFnExpenseInvoice.VendorBranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow[] GetFnExpensePerdiemRows() {
                if ((this.Table.ChildRelations["FK_FnExpensePerdiem_FnExpenseInvoice"] == null)) {
                    return new FnExpensePerdiemRow[0];
                }
                else {
                    return ((FnExpensePerdiemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpensePerdiem_FnExpenseInvoice"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRow[] GetFnExpenseInvoiceItemRows() {
                if ((this.Table.ChildRelations["FK_FnInvoiceItem_FnExpenseInvoice"] == null)) {
                    return new FnExpenseInvoiceItemRow[0];
                }
                else {
                    return ((FnExpenseInvoiceItemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnInvoiceItem_FnExpenseInvoice"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseInvoiceItemRow : global::System.Data.DataRow {
            
            private FnExpenseInvoiceItemDataTable tableFnExpenseInvoiceItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseInvoiceItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseInvoiceItem = ((FnExpenseInvoiceItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InvoiceItemID {
                get {
                    return ((long)(this[this.tableFnExpenseInvoiceItem.InvoiceItemIDColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.InvoiceItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InvoiceID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoiceItem.InvoiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceID\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.InvoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CostCenterID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoiceItem.CostCenterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCenterID\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.CostCenterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AccountID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoiceItem.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long IOID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoiceItem.IOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IOID\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.IOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CurrencyID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseInvoiceItem.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoiceItem.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrencyAmount {
                get {
                    try {
                        return ((double)(this[this.tableFnExpenseInvoiceItem.CurrencyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyAmount\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.CurrencyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NonDeductAmount {
                get {
                    try {
                        return ((double)(this[this.tableFnExpenseInvoiceItem.NonDeductAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonDeductAmount\' in table \'FnExpenseInvoiceItem\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.NonDeductAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableFnExpenseInvoiceItem.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExchangeRate {
                get {
                    try {
                        return ((double)(this[this.tableFnExpenseInvoiceItem.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReferenceNo {
                get {
                    if (this.IsReferenceNoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoiceItem.ReferenceNoColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.ReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleOrder {
                get {
                    if (this.IsSaleOrderNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoiceItem.SaleOrderColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.SaleOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleItem {
                get {
                    if (this.IsSaleItemNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpenseInvoiceItem.SaleItemColumn]));
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.SaleItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseInvoiceItem.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseInvoiceItem.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseInvoiceItem.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseInvoiceItem.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseInvoiceItem.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseInvoiceItem.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseInvoiceItem.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MainCurrencyAmount {
                get {
                    try {
                        return ((double)(this[this.tableFnExpenseInvoiceItem.MainCurrencyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCurrencyAmount\' in table \'FnExpenseInvoiceItem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.MainCurrencyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MainCurrencyID {
                get {
                    try {
                        return ((short)(this[this.tableFnExpenseInvoiceItem.MainCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCurrencyID\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.MainCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LocalCurrencyAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpenseInvoiceItem.LocalCurrencyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCurrencyAmount\' in table \'FnExpenseInvoiceItem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.LocalCurrencyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorCodeAP {
                get {
                    try {
                        return ((string)(this[this.tableFnExpenseInvoiceItem.VendorCodeAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCodeAP\' in table \'FnExpenseInvoiceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseInvoiceItem.VendorCodeAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow FnExpenseInvoiceRow {
                get {
                    return ((FnExpenseInvoiceRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnInvoiceItem_FnExpenseInvoice"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnInvoiceItem_FnExpenseInvoice"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceIDNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.InvoiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceIDNull() {
                this[this.tableFnExpenseInvoiceItem.InvoiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCenterIDNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.CostCenterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCenterIDNull() {
                this[this.tableFnExpenseInvoiceItem.CostCenterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountIDNull() {
                this[this.tableFnExpenseInvoiceItem.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIOIDNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.IOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIOIDNull() {
                this[this.tableFnExpenseInvoiceItem.IOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableFnExpenseInvoiceItem.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableFnExpenseInvoiceItem.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.CurrencyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyAmountNull() {
                this[this.tableFnExpenseInvoiceItem.CurrencyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonDeductAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.NonDeductAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonDeductAmountNull() {
                this[this.tableFnExpenseInvoiceItem.NonDeductAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountNull() {
                this[this.tableFnExpenseInvoiceItem.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateNull() {
                this[this.tableFnExpenseInvoiceItem.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferenceNoNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.ReferenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferenceNoNull() {
                this[this.tableFnExpenseInvoiceItem.ReferenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleOrderNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.SaleOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleOrderNull() {
                this[this.tableFnExpenseInvoiceItem.SaleOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleItemNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.SaleItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleItemNull() {
                this[this.tableFnExpenseInvoiceItem.SaleItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseInvoiceItem.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMainCurrencyAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.MainCurrencyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMainCurrencyAmountNull() {
                this[this.tableFnExpenseInvoiceItem.MainCurrencyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMainCurrencyIDNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.MainCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMainCurrencyIDNull() {
                this[this.tableFnExpenseInvoiceItem.MainCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocalCurrencyAmountNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.LocalCurrencyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocalCurrencyAmountNull() {
                this[this.tableFnExpenseInvoiceItem.LocalCurrencyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorCodeAPNull() {
                return this.IsNull(this.tableFnExpenseInvoiceItem.VendorCodeAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorCodeAPNull() {
                this[this.tableFnExpenseInvoiceItem.VendorCodeAPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpensePerdiemRow : global::System.Data.DataRow {
            
            private FnExpensePerdiemDataTable tableFnExpensePerdiem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpensePerdiemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpensePerdiem = ((FnExpensePerdiemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpensePerdiemID {
                get {
                    return ((long)(this[this.tableFnExpensePerdiem.ExpensePerdiemIDColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.ExpensePerdiemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableFnExpensePerdiem.DescriptionColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemRateUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemRateUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemRateUSD\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemRateUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalFullDayPerdiem {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalFullDayPerdiemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFullDayPerdiem\' in table \'FnExpensePerdiem\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalFullDayPerdiemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullDayPerdiemRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.FullDayPerdiemRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullDayPerdiemRate\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.FullDayPerdiemRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalFullDayPerdiemAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFullDayPerdiemAmount\' in table \'FnExpensePerdiem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHalfDayPerdiem {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHalfDayPerdiem\' in table \'FnExpensePerdiem\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HalfDayPerdiemRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.HalfDayPerdiemRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HalfDayPerdiemRate\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.HalfDayPerdiemRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHalfDayPerdiemAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHalfDayPerdiemAmount\' in table \'FnExpensePerdiem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemGovernmentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemGovernmentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemGovernmentAmount\' in table \'FnExpensePerdiem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemGovernmentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemPrivateAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemPrivateAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemPrivateAmount\' in table \'FnExpensePerdiem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemPrivateAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemTaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemTaxAmount\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpensePerdiem.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpensePerdiem.CreByColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiem.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpensePerdiem.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiem.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpensePerdiem.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiem.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpensePerdiem.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemRateUSDHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemRateUSDHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemRateUSDHigh\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemRateUSDHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemRateGov {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemRateGovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemRateGov\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemRateGovColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemRateGovHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemRateGovHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemRateGovHigh\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemRateGovHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemTotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemTotalAmount\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalFullDayPerdiemHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalFullDayPerdiemHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFullDayPerdiemHigh\' in table \'FnExpensePerdiem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalFullDayPerdiemHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullDayPerdiemRateHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.FullDayPerdiemRateHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullDayPerdiemRateHigh\' in table \'FnExpensePerdiem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.FullDayPerdiemRateHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalFullDayPerdiemAmountHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFullDayPerdiemAmountHigh\' in table \'FnExpensePerdiem\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHalfDayPerdiemHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHalfDayPerdiemHigh\' in table \'FnExpensePerdiem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HalfDayPerdiemRateHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.HalfDayPerdiemRateHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HalfDayPerdiemRateHigh\' in table \'FnExpensePerdiem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.HalfDayPerdiemRateHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHalfDayPerdiemAmountHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHalfDayPerdiemAmountHigh\' in table \'FnExpensePerdiem\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CostCenterID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiem.CostCenterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCenterID\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.CostCenterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AccountID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiem.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long IOID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiem.IOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IOID\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.IOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReferenceNo {
                get {
                    try {
                        return ((string)(this[this.tableFnExpensePerdiem.ReferenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNo\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.ReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleOrder {
                get {
                    try {
                        return ((string)(this[this.tableFnExpensePerdiem.SaleOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrder\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.SaleOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleItem {
                get {
                    try {
                        return ((string)(this[this.tableFnExpensePerdiem.SaleItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleItem\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.SaleItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemRate\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InvoiceID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiem.InvoiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceID\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.InvoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiem.ExpenseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseID\' in table \'FnExpensePerdiem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemTotalAmountHigh {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemTotalAmountHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemTotalAmountHigh\' in table \'FnExpensePerdiem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemTotalAmountHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemRateUSDThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemRateUSDThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemRateUSDThaiZone\' in table \'FnExpensePerdiem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemRateUSDThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemTotalAmountThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemTotalAmountThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemTotalAmountThaiZone\' in table \'FnExpensePerdiem\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemTotalAmountThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalFullDayPerdiemThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalFullDayPerdiemThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFullDayPerdiemThaiZone\' in table \'FnExpensePerdiem\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalFullDayPerdiemThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullDayPerdiemRateThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.FullDayPerdiemRateThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullDayPerdiemRateThaiZone\' in table \'FnExpensePerdiem\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.FullDayPerdiemRateThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalFullDayPerdiemAmountThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFullDayPerdiemAmountThaiZone\' in table \'FnExpensePerdi" +
                                "em\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHalfDayPerdiemThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHalfDayPerdiemThaiZone\' in table \'FnExpensePerdiem\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HalfDayPerdiemRateThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.HalfDayPerdiemRateThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HalfDayPerdiemRateThaiZone\' in table \'FnExpensePerdiem\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.HalfDayPerdiemRateThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHalfDayPerdiemAmountThaiZone {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountThaiZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHalfDayPerdiemAmountThaiZone\' in table \'FnExpensePerdi" +
                                "em\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountThaiZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemTotalAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemTotalAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemTotalAmountLocalCurrency\' in table \'FnExpensePerdiem" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemTotalAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PerdiemTotalAmountMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiem.PerdiemTotalAmountMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerdiemTotalAmountMainCurrency\' in table \'FnExpensePerdiem\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiem.PerdiemTotalAmountMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow FnExpenseDocumentRow {
                get {
                    return ((FnExpenseDocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseDocument_FnExpensePerdiem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseDocument_FnExpensePerdiem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow FnExpenseInvoiceRow {
                get {
                    return ((FnExpenseInvoiceRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpensePerdiem_FnExpenseInvoice"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpensePerdiem_FnExpenseInvoice"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemRateUSDNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemRateUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemRateUSDNull() {
                this[this.tableFnExpensePerdiem.PerdiemRateUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFullDayPerdiemNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalFullDayPerdiemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFullDayPerdiemNull() {
                this[this.tableFnExpensePerdiem.TotalFullDayPerdiemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullDayPerdiemRateNull() {
                return this.IsNull(this.tableFnExpensePerdiem.FullDayPerdiemRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullDayPerdiemRateNull() {
                this[this.tableFnExpensePerdiem.FullDayPerdiemRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFullDayPerdiemAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFullDayPerdiemAmountNull() {
                this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHalfDayPerdiemNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalHalfDayPerdiemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHalfDayPerdiemNull() {
                this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHalfDayPerdiemRateNull() {
                return this.IsNull(this.tableFnExpensePerdiem.HalfDayPerdiemRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHalfDayPerdiemRateNull() {
                this[this.tableFnExpensePerdiem.HalfDayPerdiemRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHalfDayPerdiemAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHalfDayPerdiemAmountNull() {
                this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemGovernmentAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemGovernmentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemGovernmentAmountNull() {
                this[this.tableFnExpensePerdiem.PerdiemGovernmentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemPrivateAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemPrivateAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemPrivateAmountNull() {
                this[this.tableFnExpensePerdiem.PerdiemPrivateAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemTaxAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemTaxAmountNull() {
                this[this.tableFnExpensePerdiem.PerdiemTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableFnExpensePerdiem.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateNull() {
                this[this.tableFnExpensePerdiem.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpensePerdiem.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpensePerdiem.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemRateUSDHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemRateUSDHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemRateUSDHighNull() {
                this[this.tableFnExpensePerdiem.PerdiemRateUSDHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemRateGovNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemRateGovColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemRateGovNull() {
                this[this.tableFnExpensePerdiem.PerdiemRateGovColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemRateGovHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemRateGovHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemRateGovHighNull() {
                this[this.tableFnExpensePerdiem.PerdiemRateGovHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemTotalAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemTotalAmountNull() {
                this[this.tableFnExpensePerdiem.PerdiemTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFullDayPerdiemHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalFullDayPerdiemHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFullDayPerdiemHighNull() {
                this[this.tableFnExpensePerdiem.TotalFullDayPerdiemHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullDayPerdiemRateHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.FullDayPerdiemRateHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullDayPerdiemRateHighNull() {
                this[this.tableFnExpensePerdiem.FullDayPerdiemRateHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFullDayPerdiemAmountHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFullDayPerdiemAmountHighNull() {
                this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHalfDayPerdiemHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalHalfDayPerdiemHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHalfDayPerdiemHighNull() {
                this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHalfDayPerdiemRateHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.HalfDayPerdiemRateHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHalfDayPerdiemRateHighNull() {
                this[this.tableFnExpensePerdiem.HalfDayPerdiemRateHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHalfDayPerdiemAmountHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHalfDayPerdiemAmountHighNull() {
                this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCenterIDNull() {
                return this.IsNull(this.tableFnExpensePerdiem.CostCenterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCenterIDNull() {
                this[this.tableFnExpensePerdiem.CostCenterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tableFnExpensePerdiem.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountIDNull() {
                this[this.tableFnExpensePerdiem.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIOIDNull() {
                return this.IsNull(this.tableFnExpensePerdiem.IOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIOIDNull() {
                this[this.tableFnExpensePerdiem.IOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferenceNoNull() {
                return this.IsNull(this.tableFnExpensePerdiem.ReferenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferenceNoNull() {
                this[this.tableFnExpensePerdiem.ReferenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleOrderNull() {
                return this.IsNull(this.tableFnExpensePerdiem.SaleOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleOrderNull() {
                this[this.tableFnExpensePerdiem.SaleOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleItemNull() {
                return this.IsNull(this.tableFnExpensePerdiem.SaleItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleItemNull() {
                this[this.tableFnExpensePerdiem.SaleItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemRateNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemRateNull() {
                this[this.tableFnExpensePerdiem.PerdiemRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceIDNull() {
                return this.IsNull(this.tableFnExpensePerdiem.InvoiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceIDNull() {
                this[this.tableFnExpensePerdiem.InvoiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseIDNull() {
                return this.IsNull(this.tableFnExpensePerdiem.ExpenseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseIDNull() {
                this[this.tableFnExpensePerdiem.ExpenseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemTotalAmountHighNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemTotalAmountHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemTotalAmountHighNull() {
                this[this.tableFnExpensePerdiem.PerdiemTotalAmountHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemRateUSDThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemRateUSDThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemRateUSDThaiZoneNull() {
                this[this.tableFnExpensePerdiem.PerdiemRateUSDThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemTotalAmountThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemTotalAmountThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemTotalAmountThaiZoneNull() {
                this[this.tableFnExpensePerdiem.PerdiemTotalAmountThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFullDayPerdiemThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalFullDayPerdiemThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFullDayPerdiemThaiZoneNull() {
                this[this.tableFnExpensePerdiem.TotalFullDayPerdiemThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullDayPerdiemRateThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.FullDayPerdiemRateThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullDayPerdiemRateThaiZoneNull() {
                this[this.tableFnExpensePerdiem.FullDayPerdiemRateThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFullDayPerdiemAmountThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFullDayPerdiemAmountThaiZoneNull() {
                this[this.tableFnExpensePerdiem.TotalFullDayPerdiemAmountThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHalfDayPerdiemThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalHalfDayPerdiemThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHalfDayPerdiemThaiZoneNull() {
                this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHalfDayPerdiemRateThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.HalfDayPerdiemRateThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHalfDayPerdiemRateThaiZoneNull() {
                this[this.tableFnExpensePerdiem.HalfDayPerdiemRateThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHalfDayPerdiemAmountThaiZoneNull() {
                return this.IsNull(this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountThaiZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHalfDayPerdiemAmountThaiZoneNull() {
                this[this.tableFnExpensePerdiem.TotalHalfDayPerdiemAmountThaiZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemTotalAmountLocalCurrencyNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemTotalAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemTotalAmountLocalCurrencyNull() {
                this[this.tableFnExpensePerdiem.PerdiemTotalAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerdiemTotalAmountMainCurrencyNull() {
                return this.IsNull(this.tableFnExpensePerdiem.PerdiemTotalAmountMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerdiemTotalAmountMainCurrencyNull() {
                this[this.tableFnExpensePerdiem.PerdiemTotalAmountMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRow[] GetFnExpensePerdiemDetailRows() {
                if ((this.Table.ChildRelations["FK_FnExpensePerdiemDetail_FnExpensePerdiem"] == null)) {
                    return new FnExpensePerdiemDetailRow[0];
                }
                else {
                    return ((FnExpensePerdiemDetailRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpensePerdiemDetail_FnExpensePerdiem"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRow[] GetFnExpensePerdiemItemRows() {
                if ((this.Table.ChildRelations["FK_FnExpensePerdiemItem_FnExpensePerdiem"] == null)) {
                    return new FnExpensePerdiemItemRow[0];
                }
                else {
                    return ((FnExpensePerdiemItemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FnExpensePerdiemItem_FnExpensePerdiem"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpensePerdiemItemRow : global::System.Data.DataRow {
            
            private FnExpensePerdiemItemDataTable tableFnExpensePerdiemItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpensePerdiemItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpensePerdiemItem = ((FnExpensePerdiemItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PerdiemItemID {
                get {
                    return ((long)(this[this.tableFnExpensePerdiemItem.PerdiemItemIDColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.PerdiemItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpensePerdiemID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiemItem.ExpensePerdiemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpensePerdiemID\' in table \'FnExpensePerdiemItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.ExpensePerdiemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FromDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiemItem.FromDateColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ToDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiemItem.ToDateColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FromTime {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiemItem.FromTimeColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ToTime {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiemItem.ToTimeColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AdjustedDay {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiemItem.AdjustedDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustedDay\' in table \'FnExpensePerdiemItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.AdjustedDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HalfDay {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiemItem.HalfDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HalfDay\' in table \'FnExpensePerdiemItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.HalfDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullDay {
                get {
                    try {
                        return ((decimal)(this[this.tableFnExpensePerdiemItem.FullDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullDay\' in table \'FnExpensePerdiemItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.FullDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetDay {
                get {
                    return ((decimal)(this[this.tableFnExpensePerdiemItem.NetDayColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.NetDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short CountryID {
                get {
                    try {
                        return ((short)(this[this.tableFnExpensePerdiemItem.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'FnExpensePerdiemItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CountryZoneID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiemItem.CountryZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryZoneID\' in table \'FnExpensePerdiemItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.CountryZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpensePerdiemItem.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpensePerdiemItem.CreByColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiemItem.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpensePerdiemItem.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpensePerdiemItem.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpensePerdiemItem.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemItem.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpensePerdiemItem.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpensePerdiemItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    if (this.IsRemarkNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpensePerdiemItem.RemarkColumn]));
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemItem.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow FnExpensePerdiemRow {
                get {
                    return ((FnExpensePerdiemRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpensePerdiemItem_FnExpensePerdiem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpensePerdiemItem_FnExpensePerdiem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpensePerdiemIDNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.ExpensePerdiemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpensePerdiemIDNull() {
                this[this.tableFnExpensePerdiemItem.ExpensePerdiemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdjustedDayNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.AdjustedDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdjustedDayNull() {
                this[this.tableFnExpensePerdiemItem.AdjustedDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHalfDayNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.HalfDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHalfDayNull() {
                this[this.tableFnExpensePerdiemItem.HalfDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullDayNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.FullDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullDayNull() {
                this[this.tableFnExpensePerdiemItem.FullDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryIDNull() {
                this[this.tableFnExpensePerdiemItem.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryZoneIDNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.CountryZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryZoneIDNull() {
                this[this.tableFnExpensePerdiemItem.CountryZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpensePerdiemItem.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableFnExpensePerdiemItem.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableFnExpensePerdiemItem.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpensePerdiemDetailRow : global::System.Data.DataRow {
            
            private FnExpensePerdiemDetailDataTable tableFnExpensePerdiemDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpensePerdiemDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpensePerdiemDetail = ((FnExpensePerdiemDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpensePerdiemDetailID {
                get {
                    return ((long)(this[this.tableFnExpensePerdiemDetail.ExpensePerdiemDetailIDColumn]));
                }
                set {
                    this[this.tableFnExpensePerdiemDetail.ExpensePerdiemDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFnExpensePerdiemDetail.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemDetail.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CurrencyID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiemDetail.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'FnExpensePerdiemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemDetail.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExchangeRate {
                get {
                    try {
                        return ((double)(this[this.tableFnExpensePerdiemDetail.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'FnExpensePerdiemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemDetail.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableFnExpensePerdiemDetail.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'FnExpensePerdiemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemDetail.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpensePerdiemID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpensePerdiemDetail.ExpensePerdiemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpensePerdiemID\' in table \'FnExpensePerdiemDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFnExpensePerdiemDetail.ExpensePerdiemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow FnExpensePerdiemRow {
                get {
                    return ((FnExpensePerdiemRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpensePerdiemDetail_FnExpensePerdiem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpensePerdiemDetail_FnExpensePerdiem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableFnExpensePerdiemDetail.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableFnExpensePerdiemDetail.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableFnExpensePerdiemDetail.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableFnExpensePerdiemDetail.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableFnExpensePerdiemDetail.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateNull() {
                this[this.tableFnExpensePerdiemDetail.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableFnExpensePerdiemDetail.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountNull() {
                this[this.tableFnExpensePerdiemDetail.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpensePerdiemIDNull() {
                return this.IsNull(this.tableFnExpensePerdiemDetail.ExpensePerdiemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpensePerdiemIDNull() {
                this[this.tableFnExpensePerdiemDetail.ExpensePerdiemIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseMPARow : global::System.Data.DataRow {
            
            private FnExpenseMPADataTable tableFnExpenseMPA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseMPARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseMPA = ((FnExpenseMPADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FnExpenseMPAID {
                get {
                    return ((long)(this[this.tableFnExpenseMPA.FnExpenseMPAIDColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.FnExpenseMPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMPA.ExpenseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseID\' in table \'FnExpenseMPA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMPA.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MPADocumentID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseMPA.MPADocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MPADocumentID\' in table \'FnExpenseMPA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMPA.MPADocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseMPA.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseMPA.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseMPA.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseMPA.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseMPA.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseMPA.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseMPA.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseMPA.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseMPA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseMPA.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseIDNull() {
                return this.IsNull(this.tableFnExpenseMPA.ExpenseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseIDNull() {
                this[this.tableFnExpenseMPA.ExpenseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMPADocumentIDNull() {
                return this.IsNull(this.tableFnExpenseMPA.MPADocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMPADocumentIDNull() {
                this[this.tableFnExpenseMPA.MPADocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseMPA.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseMPA.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FnExpenseCARow : global::System.Data.DataRow {
            
            private FnExpenseCADataTable tableFnExpenseCA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FnExpenseCARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFnExpenseCA = ((FnExpenseCADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FnExpenseCAID {
                get {
                    return ((long)(this[this.tableFnExpenseCA.FnExpenseCAIDColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.FnExpenseCAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ExpenseID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseCA.ExpenseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseID\' in table \'FnExpenseCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseCA.ExpenseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CADocumentID {
                get {
                    try {
                        return ((long)(this[this.tableFnExpenseCA.CADocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADocumentID\' in table \'FnExpenseCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseCA.CADocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFnExpenseCA.ActiveColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFnExpenseCA.CreByColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseCA.CreDateColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFnExpenseCA.UpdByColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFnExpenseCA.UpdDateColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFnExpenseCA.UpdPgmColumn]));
                }
                set {
                    this[this.tableFnExpenseCA.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFnExpenseCA.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FnExpenseCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFnExpenseCA.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow FnExpenseDocumentRow {
                get {
                    return ((FnExpenseDocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FnExpenseCA_FnExpenseCA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FnExpenseCA_FnExpenseCA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpenseIDNull() {
                return this.IsNull(this.tableFnExpenseCA.ExpenseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpenseIDNull() {
                this[this.tableFnExpenseCA.ExpenseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCADocumentIDNull() {
                return this.IsNull(this.tableFnExpenseCA.CADocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCADocumentIDNull() {
                this[this.tableFnExpenseCA.CADocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFnExpenseCA.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFnExpenseCA.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DocumentRowChangeEvent : global::System.EventArgs {
            
            private DocumentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRowChangeEvent(DocumentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DocumentInitiatorRowChangeEvent : global::System.EventArgs {
            
            private DocumentInitiatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRowChangeEvent(DocumentInitiatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WorkFlowRowChangeEvent : global::System.EventArgs {
            
            private WorkFlowRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRowChangeEvent(WorkFlowRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DocumentAttachmentRowChangeEvent : global::System.EventArgs {
            
            private DocumentAttachmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRowChangeEvent(DocumentAttachmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseDocumentRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseDocumentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRowChangeEvent(FnExpenseDocumentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseDocumentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseAdvanceRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseAdvanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRowChangeEvent(FnExpenseAdvanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseAdvanceExchangeRateRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseAdvanceExchangeRateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRowChangeEvent(FnExpenseAdvanceExchangeRateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseAdvanceExchangeRateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseMileageRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseMileageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRowChangeEvent(FnExpenseMileageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseMileageItemRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseMileageItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRowChangeEvent(FnExpenseMileageItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMileageItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseInvoiceRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRowChangeEvent(FnExpenseInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseInvoiceItemRowChangeEvent : global::System.EventArgs {
            
            private FnExpenseInvoiceItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRowChangeEvent(FnExpenseInvoiceItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseInvoiceItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpensePerdiemRowChangeEvent : global::System.EventArgs {
            
            private FnExpensePerdiemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRowChangeEvent(FnExpensePerdiemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpensePerdiemItemRowChangeEvent : global::System.EventArgs {
            
            private FnExpensePerdiemItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRowChangeEvent(FnExpensePerdiemItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpensePerdiemDetailRowChangeEvent : global::System.EventArgs {
            
            private FnExpensePerdiemDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRowChangeEvent(FnExpensePerdiemDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpensePerdiemDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseMPARowChangeEvent : global::System.EventArgs {
            
            private FnExpenseMPARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPARowChangeEvent(FnExpenseMPARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseMPARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FnExpenseCARowChangeEvent : global::System.EventArgs {
            
            private FnExpenseCARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARowChangeEvent(FnExpenseCARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FnExpenseCARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591