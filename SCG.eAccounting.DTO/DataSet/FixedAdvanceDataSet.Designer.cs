//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SCG.eAccounting.DTO.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FixedAdvanceDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FixedAdvanceDataSet : global::System.Data.DataSet {
        
        private DocumentDataTable tableDocument;
        
        private WorkFlowDataTable tableWorkFlow;
        
        private DocumentAttachmentDataTable tableDocumentAttachment;
        
        private DocumentInitiatorDataTable tableDocumentInitiator;
        
        private FixedAdvanceDocumentDataTable tableFixedAdvanceDocument;
        
        private global::System.Data.DataRelation relationFK_WorkFlow_Document;
        
        private global::System.Data.DataRelation relationFK_DocumentAttachment_Document;
        
        private global::System.Data.DataRelation relationFK_DocumentInitiator_Document;
        
        private global::System.Data.DataRelation relationFK_FixedAdvanceDocument_Document;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FixedAdvanceDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FixedAdvanceDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Document"] != null)) {
                    base.Tables.Add(new DocumentDataTable(ds.Tables["Document"]));
                }
                if ((ds.Tables["WorkFlow"] != null)) {
                    base.Tables.Add(new WorkFlowDataTable(ds.Tables["WorkFlow"]));
                }
                if ((ds.Tables["DocumentAttachment"] != null)) {
                    base.Tables.Add(new DocumentAttachmentDataTable(ds.Tables["DocumentAttachment"]));
                }
                if ((ds.Tables["DocumentInitiator"] != null)) {
                    base.Tables.Add(new DocumentInitiatorDataTable(ds.Tables["DocumentInitiator"]));
                }
                if ((ds.Tables["FixedAdvanceDocument"] != null)) {
                    base.Tables.Add(new FixedAdvanceDocumentDataTable(ds.Tables["FixedAdvanceDocument"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentDataTable Document {
            get {
                return this.tableDocument;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkFlowDataTable WorkFlow {
            get {
                return this.tableWorkFlow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentAttachmentDataTable DocumentAttachment {
            get {
                return this.tableDocumentAttachment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentInitiatorDataTable DocumentInitiator {
            get {
                return this.tableDocumentInitiator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FixedAdvanceDocumentDataTable FixedAdvanceDocument {
            get {
                return this.tableFixedAdvanceDocument;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FixedAdvanceDataSet cln = ((FixedAdvanceDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Document"] != null)) {
                    base.Tables.Add(new DocumentDataTable(ds.Tables["Document"]));
                }
                if ((ds.Tables["WorkFlow"] != null)) {
                    base.Tables.Add(new WorkFlowDataTable(ds.Tables["WorkFlow"]));
                }
                if ((ds.Tables["DocumentAttachment"] != null)) {
                    base.Tables.Add(new DocumentAttachmentDataTable(ds.Tables["DocumentAttachment"]));
                }
                if ((ds.Tables["DocumentInitiator"] != null)) {
                    base.Tables.Add(new DocumentInitiatorDataTable(ds.Tables["DocumentInitiator"]));
                }
                if ((ds.Tables["FixedAdvanceDocument"] != null)) {
                    base.Tables.Add(new FixedAdvanceDocumentDataTable(ds.Tables["FixedAdvanceDocument"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDocument = ((DocumentDataTable)(base.Tables["Document"]));
            if ((initTable == true)) {
                if ((this.tableDocument != null)) {
                    this.tableDocument.InitVars();
                }
            }
            this.tableWorkFlow = ((WorkFlowDataTable)(base.Tables["WorkFlow"]));
            if ((initTable == true)) {
                if ((this.tableWorkFlow != null)) {
                    this.tableWorkFlow.InitVars();
                }
            }
            this.tableDocumentAttachment = ((DocumentAttachmentDataTable)(base.Tables["DocumentAttachment"]));
            if ((initTable == true)) {
                if ((this.tableDocumentAttachment != null)) {
                    this.tableDocumentAttachment.InitVars();
                }
            }
            this.tableDocumentInitiator = ((DocumentInitiatorDataTable)(base.Tables["DocumentInitiator"]));
            if ((initTable == true)) {
                if ((this.tableDocumentInitiator != null)) {
                    this.tableDocumentInitiator.InitVars();
                }
            }
            this.tableFixedAdvanceDocument = ((FixedAdvanceDocumentDataTable)(base.Tables["FixedAdvanceDocument"]));
            if ((initTable == true)) {
                if ((this.tableFixedAdvanceDocument != null)) {
                    this.tableFixedAdvanceDocument.InitVars();
                }
            }
            this.relationFK_WorkFlow_Document = this.Relations["FK_WorkFlow_Document"];
            this.relationFK_DocumentAttachment_Document = this.Relations["FK_DocumentAttachment_Document"];
            this.relationFK_DocumentInitiator_Document = this.Relations["FK_DocumentInitiator_Document"];
            this.relationFK_FixedAdvanceDocument_Document = this.Relations["FK_FixedAdvanceDocument_Document"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FixedAdvanceDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FixedAdvanceDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDocument = new DocumentDataTable();
            base.Tables.Add(this.tableDocument);
            this.tableWorkFlow = new WorkFlowDataTable();
            base.Tables.Add(this.tableWorkFlow);
            this.tableDocumentAttachment = new DocumentAttachmentDataTable();
            base.Tables.Add(this.tableDocumentAttachment);
            this.tableDocumentInitiator = new DocumentInitiatorDataTable();
            base.Tables.Add(this.tableDocumentInitiator);
            this.tableFixedAdvanceDocument = new FixedAdvanceDocumentDataTable();
            base.Tables.Add(this.tableFixedAdvanceDocument);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_WorkFlow_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableWorkFlow.DocumentIDColumn});
            this.tableWorkFlow.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DocumentAttachment_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentAttachment.DocumentIDColumn});
            this.tableDocumentAttachment.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DocumentInitiator_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentInitiator.DocumentIDColumn});
            this.tableDocumentInitiator.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FixedAdvanceDocument_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFixedAdvanceDocument.DocumentIDColumn});
            this.tableFixedAdvanceDocument.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_WorkFlow_Document = new global::System.Data.DataRelation("FK_WorkFlow_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableWorkFlow.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_WorkFlow_Document);
            this.relationFK_DocumentAttachment_Document = new global::System.Data.DataRelation("FK_DocumentAttachment_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentAttachment.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_DocumentAttachment_Document);
            this.relationFK_DocumentInitiator_Document = new global::System.Data.DataRelation("FK_DocumentInitiator_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDocumentInitiator.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_DocumentInitiator_Document);
            this.relationFK_FixedAdvanceDocument_Document = new global::System.Data.DataRelation("FK_FixedAdvanceDocument_Document", new global::System.Data.DataColumn[] {
                        this.tableDocument.DocumentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFixedAdvanceDocument.DocumentIDColumn}, false);
            this.Relations.Add(this.relationFK_FixedAdvanceDocument_Document);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDocument() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWorkFlow() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDocumentAttachment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDocumentInitiator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFixedAdvanceDocument() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FixedAdvanceDataSet ds = new FixedAdvanceDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DocumentRowChangeEventHandler(object sender, DocumentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WorkFlowRowChangeEventHandler(object sender, WorkFlowRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DocumentAttachmentRowChangeEventHandler(object sender, DocumentAttachmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DocumentInitiatorRowChangeEventHandler(object sender, DocumentInitiatorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FixedAdvanceDocumentRowChangeEventHandler(object sender, FixedAdvanceDocumentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentDataTable : global::System.Data.TypedTableBase<DocumentRow> {
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnRequesterID;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnReceiverID;
            
            private global::System.Data.DataColumn columnDocumentDate;
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnDocumentTypeID;
            
            private global::System.Data.DataColumn columnApproverID;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnPostingStatus;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnPaymentMethodID;
            
            private global::System.Data.DataColumn columnPostingDate;
            
            private global::System.Data.DataColumn columnBaseLineDate;
            
            private global::System.Data.DataColumn columnBankAccount;
            
            private global::System.Data.DataColumn columnIsVerifyImage;
            
            private global::System.Data.DataColumn columnReferenceNo;
            
            private global::System.Data.DataColumn columnIsContainDocumentNo;
            
            private global::System.Data.DataColumn columnMark;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnBusinessArea;
            
            private global::System.Data.DataColumn columnSupplementary;
            
            private global::System.Data.DataColumn columnApproveDate;
            
            private global::System.Data.DataColumn columnOldDocumentID;
            
            private global::System.Data.DataColumn columnCacheServiceTeamID;
            
            private global::System.Data.DataColumn columnCachePBID;
            
            private global::System.Data.DataColumn columnCacheAttachment;
            
            private global::System.Data.DataColumn columnCacheCurrentState;
            
            private global::System.Data.DataColumn columnCacheCreatorName;
            
            private global::System.Data.DataColumn columnCacheRequesterName;
            
            private global::System.Data.DataColumn columnCacheAmountLocalCurrency;
            
            private global::System.Data.DataColumn columnCacheAmountMainCurrency;
            
            private global::System.Data.DataColumn columnCacheAmountTHB;
            
            private global::System.Data.DataColumn columnCacheBoxID;
            
            private global::System.Data.DataColumn columnCacheWorkflowID;
            
            private global::System.Data.DataColumn columnCacheDocumentTypeName;
            
            private global::System.Data.DataColumn columnCacheCurrentWorkFlowTypeID;
            
            private global::System.Data.DataColumn columnCacheCurrentStateName;
            
            private global::System.Data.DataColumn columnIsVerifyWithImage;
            
            private global::System.Data.DataColumn columnReceiveDocumentDate;
            
            private global::System.Data.DataColumn columnVerifiedDate;
            
            private global::System.Data.DataColumn columnApproveVerifiedDate;
            
            private global::System.Data.DataColumn columnPaidDate;
            
            private global::System.Data.DataColumn columnRemittanceDate;
            
            private global::System.Data.DataColumn columnTotalHold;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentDataTable() {
                this.TableName = "Document";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DocumentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequesterIDColumn {
                get {
                    return this.columnRequesterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiverIDColumn {
                get {
                    return this.columnReceiverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentDateColumn {
                get {
                    return this.columnDocumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentTypeIDColumn {
                get {
                    return this.columnDocumentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApproverIDColumn {
                get {
                    return this.columnApproverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingStatusColumn {
                get {
                    return this.columnPostingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentMethodIDColumn {
                get {
                    return this.columnPaymentMethodID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingDateColumn {
                get {
                    return this.columnPostingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseLineDateColumn {
                get {
                    return this.columnBaseLineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccountColumn {
                get {
                    return this.columnBankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsVerifyImageColumn {
                get {
                    return this.columnIsVerifyImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceNoColumn {
                get {
                    return this.columnReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsContainDocumentNoColumn {
                get {
                    return this.columnIsContainDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkColumn {
                get {
                    return this.columnMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BusinessAreaColumn {
                get {
                    return this.columnBusinessArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplementaryColumn {
                get {
                    return this.columnSupplementary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApproveDateColumn {
                get {
                    return this.columnApproveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OldDocumentIDColumn {
                get {
                    return this.columnOldDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheServiceTeamIDColumn {
                get {
                    return this.columnCacheServiceTeamID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CachePBIDColumn {
                get {
                    return this.columnCachePBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAttachmentColumn {
                get {
                    return this.columnCacheAttachment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCurrentStateColumn {
                get {
                    return this.columnCacheCurrentState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCreatorNameColumn {
                get {
                    return this.columnCacheCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheRequesterNameColumn {
                get {
                    return this.columnCacheRequesterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAmountLocalCurrencyColumn {
                get {
                    return this.columnCacheAmountLocalCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAmountMainCurrencyColumn {
                get {
                    return this.columnCacheAmountMainCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheAmountTHBColumn {
                get {
                    return this.columnCacheAmountTHB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheBoxIDColumn {
                get {
                    return this.columnCacheBoxID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheWorkflowIDColumn {
                get {
                    return this.columnCacheWorkflowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheDocumentTypeNameColumn {
                get {
                    return this.columnCacheDocumentTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCurrentWorkFlowTypeIDColumn {
                get {
                    return this.columnCacheCurrentWorkFlowTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CacheCurrentStateNameColumn {
                get {
                    return this.columnCacheCurrentStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsVerifyWithImageColumn {
                get {
                    return this.columnIsVerifyWithImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveDocumentDateColumn {
                get {
                    return this.columnReceiveDocumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VerifiedDateColumn {
                get {
                    return this.columnVerifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApproveVerifiedDateColumn {
                get {
                    return this.columnApproveVerifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidDateColumn {
                get {
                    return this.columnPaidDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemittanceDateColumn {
                get {
                    return this.columnRemittanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHoldColumn {
                get {
                    return this.columnTotalHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow this[int index] {
                get {
                    return ((DocumentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentRowChangeEventHandler DocumentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDocumentRow(DocumentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow AddDocumentRow(
                        long CompanyID, 
                        long RequesterID, 
                        long CreatorID, 
                        long ReceiverID, 
                        System.DateTime DocumentDate, 
                        string DocumentNo, 
                        int DocumentTypeID, 
                        long ApproverID, 
                        string Subject, 
                        string Memo, 
                        string PostingStatus, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        string BranchCode, 
                        long PaymentMethodID, 
                        System.DateTime PostingDate, 
                        System.DateTime BaseLineDate, 
                        string BankAccount, 
                        bool IsVerifyImage, 
                        string ReferenceNo, 
                        bool IsContainDocumentNo, 
                        bool Mark, 
                        bool Archived, 
                        string BusinessArea, 
                        string Supplementary, 
                        System.DateTime ApproveDate, 
                        long OldDocumentID, 
                        long CacheServiceTeamID, 
                        long CachePBID, 
                        bool CacheAttachment, 
                        int CacheCurrentState, 
                        string CacheCreatorName, 
                        string CacheRequesterName, 
                        decimal CacheAmountLocalCurrency, 
                        decimal CacheAmountMainCurrency, 
                        decimal CacheAmountTHB, 
                        string CacheBoxID, 
                        long CacheWorkflowID, 
                        string CacheDocumentTypeName, 
                        int CacheCurrentWorkFlowTypeID, 
                        string CacheCurrentStateName, 
                        bool IsVerifyWithImage, 
                        System.DateTime ReceiveDocumentDate, 
                        System.DateTime VerifiedDate, 
                        System.DateTime ApproveVerifiedDate, 
                        System.DateTime PaidDate, 
                        System.DateTime RemittanceDate, 
                        int TotalHold) {
                DocumentRow rowDocumentRow = ((DocumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CompanyID,
                        RequesterID,
                        CreatorID,
                        ReceiverID,
                        DocumentDate,
                        DocumentNo,
                        DocumentTypeID,
                        ApproverID,
                        Subject,
                        Memo,
                        PostingStatus,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        BranchCode,
                        PaymentMethodID,
                        PostingDate,
                        BaseLineDate,
                        BankAccount,
                        IsVerifyImage,
                        ReferenceNo,
                        IsContainDocumentNo,
                        Mark,
                        Archived,
                        BusinessArea,
                        Supplementary,
                        ApproveDate,
                        OldDocumentID,
                        CacheServiceTeamID,
                        CachePBID,
                        CacheAttachment,
                        CacheCurrentState,
                        CacheCreatorName,
                        CacheRequesterName,
                        CacheAmountLocalCurrency,
                        CacheAmountMainCurrency,
                        CacheAmountTHB,
                        CacheBoxID,
                        CacheWorkflowID,
                        CacheDocumentTypeName,
                        CacheCurrentWorkFlowTypeID,
                        CacheCurrentStateName,
                        IsVerifyWithImage,
                        ReceiveDocumentDate,
                        VerifiedDate,
                        ApproveVerifiedDate,
                        PaidDate,
                        RemittanceDate,
                        TotalHold};
                rowDocumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentRow);
                return rowDocumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow FindByDocumentID(long DocumentID) {
                return ((DocumentRow)(this.Rows.Find(new object[] {
                            DocumentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DocumentDataTable cln = ((DocumentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnRequesterID = base.Columns["RequesterID"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnReceiverID = base.Columns["ReceiverID"];
                this.columnDocumentDate = base.Columns["DocumentDate"];
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnDocumentTypeID = base.Columns["DocumentTypeID"];
                this.columnApproverID = base.Columns["ApproverID"];
                this.columnSubject = base.Columns["Subject"];
                this.columnMemo = base.Columns["Memo"];
                this.columnPostingStatus = base.Columns["PostingStatus"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnPaymentMethodID = base.Columns["PaymentMethodID"];
                this.columnPostingDate = base.Columns["PostingDate"];
                this.columnBaseLineDate = base.Columns["BaseLineDate"];
                this.columnBankAccount = base.Columns["BankAccount"];
                this.columnIsVerifyImage = base.Columns["IsVerifyImage"];
                this.columnReferenceNo = base.Columns["ReferenceNo"];
                this.columnIsContainDocumentNo = base.Columns["IsContainDocumentNo"];
                this.columnMark = base.Columns["Mark"];
                this.columnArchived = base.Columns["Archived"];
                this.columnBusinessArea = base.Columns["BusinessArea"];
                this.columnSupplementary = base.Columns["Supplementary"];
                this.columnApproveDate = base.Columns["ApproveDate"];
                this.columnOldDocumentID = base.Columns["OldDocumentID"];
                this.columnCacheServiceTeamID = base.Columns["CacheServiceTeamID"];
                this.columnCachePBID = base.Columns["CachePBID"];
                this.columnCacheAttachment = base.Columns["CacheAttachment"];
                this.columnCacheCurrentState = base.Columns["CacheCurrentState"];
                this.columnCacheCreatorName = base.Columns["CacheCreatorName"];
                this.columnCacheRequesterName = base.Columns["CacheRequesterName"];
                this.columnCacheAmountLocalCurrency = base.Columns["CacheAmountLocalCurrency"];
                this.columnCacheAmountMainCurrency = base.Columns["CacheAmountMainCurrency"];
                this.columnCacheAmountTHB = base.Columns["CacheAmountTHB"];
                this.columnCacheBoxID = base.Columns["CacheBoxID"];
                this.columnCacheWorkflowID = base.Columns["CacheWorkflowID"];
                this.columnCacheDocumentTypeName = base.Columns["CacheDocumentTypeName"];
                this.columnCacheCurrentWorkFlowTypeID = base.Columns["CacheCurrentWorkFlowTypeID"];
                this.columnCacheCurrentStateName = base.Columns["CacheCurrentStateName"];
                this.columnIsVerifyWithImage = base.Columns["IsVerifyWithImage"];
                this.columnReceiveDocumentDate = base.Columns["ReceiveDocumentDate"];
                this.columnVerifiedDate = base.Columns["VerifiedDate"];
                this.columnApproveVerifiedDate = base.Columns["ApproveVerifiedDate"];
                this.columnPaidDate = base.Columns["PaidDate"];
                this.columnRemittanceDate = base.Columns["RemittanceDate"];
                this.columnTotalHold = base.Columns["TotalHold"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnRequesterID = new global::System.Data.DataColumn("RequesterID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequesterID);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnReceiverID = new global::System.Data.DataColumn("ReceiverID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverID);
                this.columnDocumentDate = new global::System.Data.DataColumn("DocumentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentDate);
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnDocumentTypeID = new global::System.Data.DataColumn("DocumentTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentTypeID);
                this.columnApproverID = new global::System.Data.DataColumn("ApproverID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproverID);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnPostingStatus = new global::System.Data.DataColumn("PostingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingStatus);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnPaymentMethodID = new global::System.Data.DataColumn("PaymentMethodID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMethodID);
                this.columnPostingDate = new global::System.Data.DataColumn("PostingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingDate);
                this.columnBaseLineDate = new global::System.Data.DataColumn("BaseLineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseLineDate);
                this.columnBankAccount = new global::System.Data.DataColumn("BankAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccount);
                this.columnIsVerifyImage = new global::System.Data.DataColumn("IsVerifyImage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVerifyImage);
                this.columnReferenceNo = new global::System.Data.DataColumn("ReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNo);
                this.columnIsContainDocumentNo = new global::System.Data.DataColumn("IsContainDocumentNo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsContainDocumentNo);
                this.columnMark = new global::System.Data.DataColumn("Mark", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMark);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnBusinessArea = new global::System.Data.DataColumn("BusinessArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessArea);
                this.columnSupplementary = new global::System.Data.DataColumn("Supplementary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplementary);
                this.columnApproveDate = new global::System.Data.DataColumn("ApproveDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveDate);
                this.columnOldDocumentID = new global::System.Data.DataColumn("OldDocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldDocumentID);
                this.columnCacheServiceTeamID = new global::System.Data.DataColumn("CacheServiceTeamID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheServiceTeamID);
                this.columnCachePBID = new global::System.Data.DataColumn("CachePBID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCachePBID);
                this.columnCacheAttachment = new global::System.Data.DataColumn("CacheAttachment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAttachment);
                this.columnCacheCurrentState = new global::System.Data.DataColumn("CacheCurrentState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCurrentState);
                this.columnCacheCreatorName = new global::System.Data.DataColumn("CacheCreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCreatorName);
                this.columnCacheRequesterName = new global::System.Data.DataColumn("CacheRequesterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheRequesterName);
                this.columnCacheAmountLocalCurrency = new global::System.Data.DataColumn("CacheAmountLocalCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAmountLocalCurrency);
                this.columnCacheAmountMainCurrency = new global::System.Data.DataColumn("CacheAmountMainCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAmountMainCurrency);
                this.columnCacheAmountTHB = new global::System.Data.DataColumn("CacheAmountTHB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheAmountTHB);
                this.columnCacheBoxID = new global::System.Data.DataColumn("CacheBoxID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheBoxID);
                this.columnCacheWorkflowID = new global::System.Data.DataColumn("CacheWorkflowID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheWorkflowID);
                this.columnCacheDocumentTypeName = new global::System.Data.DataColumn("CacheDocumentTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheDocumentTypeName);
                this.columnCacheCurrentWorkFlowTypeID = new global::System.Data.DataColumn("CacheCurrentWorkFlowTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCurrentWorkFlowTypeID);
                this.columnCacheCurrentStateName = new global::System.Data.DataColumn("CacheCurrentStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacheCurrentStateName);
                this.columnIsVerifyWithImage = new global::System.Data.DataColumn("IsVerifyWithImage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVerifyWithImage);
                this.columnReceiveDocumentDate = new global::System.Data.DataColumn("ReceiveDocumentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDocumentDate);
                this.columnVerifiedDate = new global::System.Data.DataColumn("VerifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerifiedDate);
                this.columnApproveVerifiedDate = new global::System.Data.DataColumn("ApproveVerifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveVerifiedDate);
                this.columnPaidDate = new global::System.Data.DataColumn("PaidDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidDate);
                this.columnRemittanceDate = new global::System.Data.DataColumn("RemittanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemittanceDate);
                this.columnTotalHold = new global::System.Data.DataColumn("TotalHold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHold);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentID}, true));
                this.columnDocumentID.AutoIncrement = true;
                this.columnDocumentID.AutoIncrementSeed = -1;
                this.columnDocumentID.AutoIncrementStep = -1;
                this.columnDocumentID.AllowDBNull = false;
                this.columnDocumentID.ReadOnly = true;
                this.columnDocumentID.Unique = true;
                this.columnDocumentNo.MaxLength = 20;
                this.columnSubject.MaxLength = 200;
                this.columnMemo.MaxLength = 1000;
                this.columnPostingStatus.MaxLength = 2;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnBranchCode.MaxLength = 20;
                this.columnBankAccount.MaxLength = 6;
                this.columnReferenceNo.MaxLength = 50;
                this.columnBusinessArea.MaxLength = 10;
                this.columnSupplementary.MaxLength = 50;
                this.columnCacheCreatorName.MaxLength = 100;
                this.columnCacheRequesterName.MaxLength = 100;
                this.columnCacheBoxID.MaxLength = 20;
                this.columnCacheDocumentTypeName.MaxLength = 100;
                this.columnCacheCurrentStateName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow NewDocumentRow() {
                return ((DocumentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentRowChanged != null)) {
                    this.DocumentRowChanged(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentRowChanging != null)) {
                    this.DocumentRowChanging(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentRowDeleted != null)) {
                    this.DocumentRowDeleted(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentRowDeleting != null)) {
                    this.DocumentRowDeleting(this, new DocumentRowChangeEvent(((DocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDocumentRow(DocumentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FixedAdvanceDataSet ds = new FixedAdvanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkFlowDataTable : global::System.Data.TypedTableBase<WorkFlowRow> {
            
            private global::System.Data.DataColumn columnWorkFlowID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnWorkFlowTypeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCurrentState;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowDataTable() {
                this.TableName = "WorkFlow";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkFlowDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WorkFlowDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkFlowIDColumn {
                get {
                    return this.columnWorkFlowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkFlowTypeIDColumn {
                get {
                    return this.columnWorkFlowTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentStateColumn {
                get {
                    return this.columnCurrentState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow this[int index] {
                get {
                    return ((WorkFlowRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkFlowRowChangeEventHandler WorkFlowRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWorkFlowRow(WorkFlowRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow AddWorkFlowRow(DocumentRow parentDocumentRowByFK_WorkFlow_Document, int WorkFlowTypeID, string Description, int CurrentState, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                WorkFlowRow rowWorkFlowRow = ((WorkFlowRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        WorkFlowTypeID,
                        Description,
                        CurrentState,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentDocumentRowByFK_WorkFlow_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_WorkFlow_Document[0];
                }
                rowWorkFlowRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkFlowRow);
                return rowWorkFlowRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow FindByWorkFlowID(long WorkFlowID) {
                return ((WorkFlowRow)(this.Rows.Find(new object[] {
                            WorkFlowID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WorkFlowDataTable cln = ((WorkFlowDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkFlowDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWorkFlowID = base.Columns["WorkFlowID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnWorkFlowTypeID = base.Columns["WorkFlowTypeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnCurrentState = base.Columns["CurrentState"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWorkFlowID = new global::System.Data.DataColumn("WorkFlowID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFlowID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnWorkFlowTypeID = new global::System.Data.DataColumn("WorkFlowTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFlowTypeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCurrentState = new global::System.Data.DataColumn("CurrentState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentState);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkFlowID}, true));
                this.columnWorkFlowID.AutoIncrement = true;
                this.columnWorkFlowID.AutoIncrementSeed = -1;
                this.columnWorkFlowID.AutoIncrementStep = -1;
                this.columnWorkFlowID.AllowDBNull = false;
                this.columnWorkFlowID.ReadOnly = true;
                this.columnWorkFlowID.Unique = true;
                this.columnDescription.MaxLength = 100;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow NewWorkFlowRow() {
                return ((WorkFlowRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkFlowRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WorkFlowRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkFlowRowChanged != null)) {
                    this.WorkFlowRowChanged(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkFlowRowChanging != null)) {
                    this.WorkFlowRowChanging(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkFlowRowDeleted != null)) {
                    this.WorkFlowRowDeleted(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkFlowRowDeleting != null)) {
                    this.WorkFlowRowDeleting(this, new WorkFlowRowChangeEvent(((WorkFlowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWorkFlowRow(WorkFlowRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FixedAdvanceDataSet ds = new FixedAdvanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkFlowDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentAttachmentDataTable : global::System.Data.TypedTableBase<DocumentAttachmentRow> {
            
            private global::System.Data.DataColumn columnAttachmentID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnAttachFileName;
            
            private global::System.Data.DataColumn columnAttachFilePath;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentDataTable() {
                this.TableName = "DocumentAttachment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentAttachmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DocumentAttachmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachmentIDColumn {
                get {
                    return this.columnAttachmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachFileNameColumn {
                get {
                    return this.columnAttachFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachFilePathColumn {
                get {
                    return this.columnAttachFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow this[int index] {
                get {
                    return ((DocumentAttachmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentAttachmentRowChangeEventHandler DocumentAttachmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDocumentAttachmentRow(DocumentAttachmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow AddDocumentAttachmentRow(DocumentRow parentDocumentRowByFK_DocumentAttachment_Document, string AttachFileName, string AttachFilePath, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion) {
                DocumentAttachmentRow rowDocumentAttachmentRow = ((DocumentAttachmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        AttachFileName,
                        AttachFilePath,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion};
                if ((parentDocumentRowByFK_DocumentAttachment_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_DocumentAttachment_Document[0];
                }
                rowDocumentAttachmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentAttachmentRow);
                return rowDocumentAttachmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow FindByAttachmentID(long AttachmentID) {
                return ((DocumentAttachmentRow)(this.Rows.Find(new object[] {
                            AttachmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DocumentAttachmentDataTable cln = ((DocumentAttachmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentAttachmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAttachmentID = base.Columns["AttachmentID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnAttachFileName = base.Columns["AttachFileName"];
                this.columnAttachFilePath = base.Columns["AttachFilePath"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAttachmentID = new global::System.Data.DataColumn("AttachmentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachmentID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnAttachFileName = new global::System.Data.DataColumn("AttachFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachFileName);
                this.columnAttachFilePath = new global::System.Data.DataColumn("AttachFilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachFilePath);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAttachmentID}, true));
                this.columnAttachmentID.AutoIncrement = true;
                this.columnAttachmentID.AutoIncrementSeed = -1;
                this.columnAttachmentID.AutoIncrementStep = -1;
                this.columnAttachmentID.AllowDBNull = false;
                this.columnAttachmentID.ReadOnly = true;
                this.columnAttachmentID.Unique = true;
                this.columnAttachFileName.MaxLength = 50;
                this.columnAttachFilePath.MaxLength = 1000;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow NewDocumentAttachmentRow() {
                return ((DocumentAttachmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentAttachmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentAttachmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentAttachmentRowChanged != null)) {
                    this.DocumentAttachmentRowChanged(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentAttachmentRowChanging != null)) {
                    this.DocumentAttachmentRowChanging(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentAttachmentRowDeleted != null)) {
                    this.DocumentAttachmentRowDeleted(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentAttachmentRowDeleting != null)) {
                    this.DocumentAttachmentRowDeleting(this, new DocumentAttachmentRowChangeEvent(((DocumentAttachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDocumentAttachmentRow(DocumentAttachmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FixedAdvanceDataSet ds = new FixedAdvanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentAttachmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentInitiatorDataTable : global::System.Data.TypedTableBase<DocumentInitiatorRow> {
            
            private global::System.Data.DataColumn columnInitiatorID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnSeq;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnInitiatorType;
            
            private global::System.Data.DataColumn columnDoApprove;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnisSkip;
            
            private global::System.Data.DataColumn columnSkipReason;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorDataTable() {
                this.TableName = "DocumentInitiator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentInitiatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DocumentInitiatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitiatorIDColumn {
                get {
                    return this.columnInitiatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeqColumn {
                get {
                    return this.columnSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitiatorTypeColumn {
                get {
                    return this.columnInitiatorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoApproveColumn {
                get {
                    return this.columnDoApprove;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isSkipColumn {
                get {
                    return this.columnisSkip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SkipReasonColumn {
                get {
                    return this.columnSkipReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow this[int index] {
                get {
                    return ((DocumentInitiatorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DocumentInitiatorRowChangeEventHandler DocumentInitiatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDocumentInitiatorRow(DocumentInitiatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow AddDocumentInitiatorRow(DocumentRow parentDocumentRowByFK_DocumentInitiator_Document, short Seq, long UserID, string InitiatorType, bool DoApprove, bool Active, long CreBy, System.DateTime CreDate, long UpdBy, System.DateTime UpdDate, string UpdPgm, byte[] RowVersion, bool isSkip, string SkipReason) {
                DocumentInitiatorRow rowDocumentInitiatorRow = ((DocumentInitiatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Seq,
                        UserID,
                        InitiatorType,
                        DoApprove,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        isSkip,
                        SkipReason};
                if ((parentDocumentRowByFK_DocumentInitiator_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_DocumentInitiator_Document[0];
                }
                rowDocumentInitiatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentInitiatorRow);
                return rowDocumentInitiatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow FindByInitiatorID(long InitiatorID) {
                return ((DocumentInitiatorRow)(this.Rows.Find(new object[] {
                            InitiatorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DocumentInitiatorDataTable cln = ((DocumentInitiatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentInitiatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInitiatorID = base.Columns["InitiatorID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnSeq = base.Columns["Seq"];
                this.columnUserID = base.Columns["UserID"];
                this.columnInitiatorType = base.Columns["InitiatorType"];
                this.columnDoApprove = base.Columns["DoApprove"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnisSkip = base.Columns["isSkip"];
                this.columnSkipReason = base.Columns["SkipReason"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInitiatorID = new global::System.Data.DataColumn("InitiatorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitiatorID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnSeq = new global::System.Data.DataColumn("Seq", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeq);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnInitiatorType = new global::System.Data.DataColumn("InitiatorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitiatorType);
                this.columnDoApprove = new global::System.Data.DataColumn("DoApprove", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoApprove);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnisSkip = new global::System.Data.DataColumn("isSkip", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSkip);
                this.columnSkipReason = new global::System.Data.DataColumn("SkipReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkipReason);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInitiatorID}, true));
                this.columnInitiatorID.AutoIncrement = true;
                this.columnInitiatorID.AutoIncrementSeed = -1;
                this.columnInitiatorID.AutoIncrementStep = -1;
                this.columnInitiatorID.AllowDBNull = false;
                this.columnInitiatorID.ReadOnly = true;
                this.columnInitiatorID.Unique = true;
                this.columnInitiatorType.MaxLength = 1;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnSkipReason.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow NewDocumentInitiatorRow() {
                return ((DocumentInitiatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentInitiatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentInitiatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentInitiatorRowChanged != null)) {
                    this.DocumentInitiatorRowChanged(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentInitiatorRowChanging != null)) {
                    this.DocumentInitiatorRowChanging(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentInitiatorRowDeleted != null)) {
                    this.DocumentInitiatorRowDeleted(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentInitiatorRowDeleting != null)) {
                    this.DocumentInitiatorRowDeleting(this, new DocumentInitiatorRowChangeEvent(((DocumentInitiatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDocumentInitiatorRow(DocumentInitiatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FixedAdvanceDataSet ds = new FixedAdvanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentInitiatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FixedAdvanceDocumentDataTable : global::System.Data.TypedTableBase<FixedAdvanceDocumentRow> {
            
            private global::System.Data.DataColumn columnFixedAdvanceID;
            
            private global::System.Data.DataColumn columnDocumentID;
            
            private global::System.Data.DataColumn columnEffectiveFromDate;
            
            private global::System.Data.DataColumn columnEffectiveToDate;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnObjective;
            
            private global::System.Data.DataColumn columnRefFixedAdvanceID;
            
            private global::System.Data.DataColumn columnFixedAdvanceType;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnServiceTeamID;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnPBID;
            
            private global::System.Data.DataColumn columnReturnServiceTeamID;
            
            private global::System.Data.DataColumn columnReturnRequestDate;
            
            private global::System.Data.DataColumn columnReturnPBID;
            
            private global::System.Data.DataColumn columnReturnPaymentType;
            
            private global::System.Data.DataColumn columnBranchCodeReturn;
            
            private global::System.Data.DataColumn columnPaymentMethodIDReturn;
            
            private global::System.Data.DataColumn columnPostingDateReturn;
            
            private global::System.Data.DataColumn columnBaseLineDateReturn;
            
            private global::System.Data.DataColumn columnPostingStatusReturn;
            
            private global::System.Data.DataColumn columnRefRootFixedAdvance;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnCreBy;
            
            private global::System.Data.DataColumn columnCreDate;
            
            private global::System.Data.DataColumn columnUpdBy;
            
            private global::System.Data.DataColumn columnUpdDate;
            
            private global::System.Data.DataColumn columnUpdPgm;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            private global::System.Data.DataColumn columnFixedAdvanceBankAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentDataTable() {
                this.TableName = "FixedAdvanceDocument";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FixedAdvanceDocumentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FixedAdvanceDocumentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixedAdvanceIDColumn {
                get {
                    return this.columnFixedAdvanceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentIDColumn {
                get {
                    return this.columnDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EffectiveFromDateColumn {
                get {
                    return this.columnEffectiveFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EffectiveToDateColumn {
                get {
                    return this.columnEffectiveToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObjectiveColumn {
                get {
                    return this.columnObjective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefFixedAdvanceIDColumn {
                get {
                    return this.columnRefFixedAdvanceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixedAdvanceTypeColumn {
                get {
                    return this.columnFixedAdvanceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceTeamIDColumn {
                get {
                    return this.columnServiceTeamID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PBIDColumn {
                get {
                    return this.columnPBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnServiceTeamIDColumn {
                get {
                    return this.columnReturnServiceTeamID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnRequestDateColumn {
                get {
                    return this.columnReturnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnPBIDColumn {
                get {
                    return this.columnReturnPBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnPaymentTypeColumn {
                get {
                    return this.columnReturnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchCodeReturnColumn {
                get {
                    return this.columnBranchCodeReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentMethodIDReturnColumn {
                get {
                    return this.columnPaymentMethodIDReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingDateReturnColumn {
                get {
                    return this.columnPostingDateReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseLineDateReturnColumn {
                get {
                    return this.columnBaseLineDateReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingStatusReturnColumn {
                get {
                    return this.columnPostingStatusReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefRootFixedAdvanceColumn {
                get {
                    return this.columnRefRootFixedAdvance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreByColumn {
                get {
                    return this.columnCreBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreDateColumn {
                get {
                    return this.columnCreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdByColumn {
                get {
                    return this.columnUpdBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdDateColumn {
                get {
                    return this.columnUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdPgmColumn {
                get {
                    return this.columnUpdPgm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixedAdvanceBankAccountColumn {
                get {
                    return this.columnFixedAdvanceBankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRow this[int index] {
                get {
                    return ((FixedAdvanceDocumentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FixedAdvanceDocumentRowChangeEventHandler FixedAdvanceDocumentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FixedAdvanceDocumentRowChangeEventHandler FixedAdvanceDocumentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FixedAdvanceDocumentRowChangeEventHandler FixedAdvanceDocumentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FixedAdvanceDocumentRowChangeEventHandler FixedAdvanceDocumentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFixedAdvanceDocumentRow(FixedAdvanceDocumentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRow AddFixedAdvanceDocumentRow(
                        DocumentRow parentDocumentRowByFK_FixedAdvanceDocument_Document, 
                        System.DateTime EffectiveFromDate, 
                        System.DateTime EffectiveToDate, 
                        System.DateTime RequestDate, 
                        string Objective, 
                        long RefFixedAdvanceID, 
                        byte FixedAdvanceType, 
                        decimal Amount, 
                        decimal NetAmount, 
                        long ServiceTeamID, 
                        string PaymentType, 
                        long PBID, 
                        long ReturnServiceTeamID, 
                        System.DateTime ReturnRequestDate, 
                        long ReturnPBID, 
                        string ReturnPaymentType, 
                        string BranchCodeReturn, 
                        long PaymentMethodIDReturn, 
                        System.DateTime PostingDateReturn, 
                        System.DateTime BaseLineDateReturn, 
                        string PostingStatusReturn, 
                        long RefRootFixedAdvance, 
                        bool Active, 
                        long CreBy, 
                        System.DateTime CreDate, 
                        long UpdBy, 
                        System.DateTime UpdDate, 
                        string UpdPgm, 
                        byte[] RowVersion, 
                        string FixedAdvanceBankAccount) {
                FixedAdvanceDocumentRow rowFixedAdvanceDocumentRow = ((FixedAdvanceDocumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        EffectiveFromDate,
                        EffectiveToDate,
                        RequestDate,
                        Objective,
                        RefFixedAdvanceID,
                        FixedAdvanceType,
                        Amount,
                        NetAmount,
                        ServiceTeamID,
                        PaymentType,
                        PBID,
                        ReturnServiceTeamID,
                        ReturnRequestDate,
                        ReturnPBID,
                        ReturnPaymentType,
                        BranchCodeReturn,
                        PaymentMethodIDReturn,
                        PostingDateReturn,
                        BaseLineDateReturn,
                        PostingStatusReturn,
                        RefRootFixedAdvance,
                        Active,
                        CreBy,
                        CreDate,
                        UpdBy,
                        UpdDate,
                        UpdPgm,
                        RowVersion,
                        FixedAdvanceBankAccount};
                if ((parentDocumentRowByFK_FixedAdvanceDocument_Document != null)) {
                    columnValuesArray[1] = parentDocumentRowByFK_FixedAdvanceDocument_Document[0];
                }
                rowFixedAdvanceDocumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFixedAdvanceDocumentRow);
                return rowFixedAdvanceDocumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRow FindByFixedAdvanceID(long FixedAdvanceID) {
                return ((FixedAdvanceDocumentRow)(this.Rows.Find(new object[] {
                            FixedAdvanceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FixedAdvanceDocumentDataTable cln = ((FixedAdvanceDocumentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FixedAdvanceDocumentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFixedAdvanceID = base.Columns["FixedAdvanceID"];
                this.columnDocumentID = base.Columns["DocumentID"];
                this.columnEffectiveFromDate = base.Columns["EffectiveFromDate"];
                this.columnEffectiveToDate = base.Columns["EffectiveToDate"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnObjective = base.Columns["Objective"];
                this.columnRefFixedAdvanceID = base.Columns["RefFixedAdvanceID"];
                this.columnFixedAdvanceType = base.Columns["FixedAdvanceType"];
                this.columnAmount = base.Columns["Amount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnServiceTeamID = base.Columns["ServiceTeamID"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnPBID = base.Columns["PBID"];
                this.columnReturnServiceTeamID = base.Columns["ReturnServiceTeamID"];
                this.columnReturnRequestDate = base.Columns["ReturnRequestDate"];
                this.columnReturnPBID = base.Columns["ReturnPBID"];
                this.columnReturnPaymentType = base.Columns["ReturnPaymentType"];
                this.columnBranchCodeReturn = base.Columns["BranchCodeReturn"];
                this.columnPaymentMethodIDReturn = base.Columns["PaymentMethodIDReturn"];
                this.columnPostingDateReturn = base.Columns["PostingDateReturn"];
                this.columnBaseLineDateReturn = base.Columns["BaseLineDateReturn"];
                this.columnPostingStatusReturn = base.Columns["PostingStatusReturn"];
                this.columnRefRootFixedAdvance = base.Columns["RefRootFixedAdvance"];
                this.columnActive = base.Columns["Active"];
                this.columnCreBy = base.Columns["CreBy"];
                this.columnCreDate = base.Columns["CreDate"];
                this.columnUpdBy = base.Columns["UpdBy"];
                this.columnUpdDate = base.Columns["UpdDate"];
                this.columnUpdPgm = base.Columns["UpdPgm"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnFixedAdvanceBankAccount = base.Columns["FixedAdvanceBankAccount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFixedAdvanceID = new global::System.Data.DataColumn("FixedAdvanceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixedAdvanceID);
                this.columnDocumentID = new global::System.Data.DataColumn("DocumentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentID);
                this.columnEffectiveFromDate = new global::System.Data.DataColumn("EffectiveFromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveFromDate);
                this.columnEffectiveToDate = new global::System.Data.DataColumn("EffectiveToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveToDate);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnObjective = new global::System.Data.DataColumn("Objective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjective);
                this.columnRefFixedAdvanceID = new global::System.Data.DataColumn("RefFixedAdvanceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefFixedAdvanceID);
                this.columnFixedAdvanceType = new global::System.Data.DataColumn("FixedAdvanceType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixedAdvanceType);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnServiceTeamID = new global::System.Data.DataColumn("ServiceTeamID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTeamID);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnPBID = new global::System.Data.DataColumn("PBID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBID);
                this.columnReturnServiceTeamID = new global::System.Data.DataColumn("ReturnServiceTeamID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnServiceTeamID);
                this.columnReturnRequestDate = new global::System.Data.DataColumn("ReturnRequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnRequestDate);
                this.columnReturnPBID = new global::System.Data.DataColumn("ReturnPBID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnPBID);
                this.columnReturnPaymentType = new global::System.Data.DataColumn("ReturnPaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnPaymentType);
                this.columnBranchCodeReturn = new global::System.Data.DataColumn("BranchCodeReturn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCodeReturn);
                this.columnPaymentMethodIDReturn = new global::System.Data.DataColumn("PaymentMethodIDReturn", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMethodIDReturn);
                this.columnPostingDateReturn = new global::System.Data.DataColumn("PostingDateReturn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingDateReturn);
                this.columnBaseLineDateReturn = new global::System.Data.DataColumn("BaseLineDateReturn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseLineDateReturn);
                this.columnPostingStatusReturn = new global::System.Data.DataColumn("PostingStatusReturn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingStatusReturn);
                this.columnRefRootFixedAdvance = new global::System.Data.DataColumn("RefRootFixedAdvance", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefRootFixedAdvance);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnCreBy = new global::System.Data.DataColumn("CreBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreBy);
                this.columnCreDate = new global::System.Data.DataColumn("CreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreDate);
                this.columnUpdBy = new global::System.Data.DataColumn("UpdBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdBy);
                this.columnUpdDate = new global::System.Data.DataColumn("UpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdDate);
                this.columnUpdPgm = new global::System.Data.DataColumn("UpdPgm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdPgm);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnFixedAdvanceBankAccount = new global::System.Data.DataColumn("FixedAdvanceBankAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixedAdvanceBankAccount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFixedAdvanceID}, true));
                this.columnFixedAdvanceID.AutoIncrement = true;
                this.columnFixedAdvanceID.AutoIncrementSeed = -1;
                this.columnFixedAdvanceID.AutoIncrementStep = -1;
                this.columnFixedAdvanceID.AllowDBNull = false;
                this.columnFixedAdvanceID.ReadOnly = true;
                this.columnFixedAdvanceID.Unique = true;
                this.columnDocumentID.AllowDBNull = false;
                this.columnEffectiveFromDate.AllowDBNull = false;
                this.columnEffectiveToDate.AllowDBNull = false;
                this.columnRequestDate.AllowDBNull = false;
                this.columnObjective.MaxLength = 200;
                this.columnFixedAdvanceType.AllowDBNull = false;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 50;
                this.columnReturnPaymentType.MaxLength = 50;
                this.columnBranchCodeReturn.MaxLength = 20;
                this.columnPostingStatusReturn.MaxLength = 2;
                this.columnActive.AllowDBNull = false;
                this.columnCreBy.AllowDBNull = false;
                this.columnCreDate.AllowDBNull = false;
                this.columnUpdBy.AllowDBNull = false;
                this.columnUpdDate.AllowDBNull = false;
                this.columnUpdPgm.AllowDBNull = false;
                this.columnUpdPgm.MaxLength = 30;
                this.columnRowVersion.ReadOnly = true;
                this.columnFixedAdvanceBankAccount.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRow NewFixedAdvanceDocumentRow() {
                return ((FixedAdvanceDocumentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FixedAdvanceDocumentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FixedAdvanceDocumentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FixedAdvanceDocumentRowChanged != null)) {
                    this.FixedAdvanceDocumentRowChanged(this, new FixedAdvanceDocumentRowChangeEvent(((FixedAdvanceDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FixedAdvanceDocumentRowChanging != null)) {
                    this.FixedAdvanceDocumentRowChanging(this, new FixedAdvanceDocumentRowChangeEvent(((FixedAdvanceDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FixedAdvanceDocumentRowDeleted != null)) {
                    this.FixedAdvanceDocumentRowDeleted(this, new FixedAdvanceDocumentRowChangeEvent(((FixedAdvanceDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FixedAdvanceDocumentRowDeleting != null)) {
                    this.FixedAdvanceDocumentRowDeleting(this, new FixedAdvanceDocumentRowChangeEvent(((FixedAdvanceDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFixedAdvanceDocumentRow(FixedAdvanceDocumentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FixedAdvanceDataSet ds = new FixedAdvanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FixedAdvanceDocumentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DocumentRow : global::System.Data.DataRow {
            
            private DocumentDataTable tableDocument;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocument = ((DocumentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    return ((long)(this[this.tableDocument.DocumentIDColumn]));
                }
                set {
                    this[this.tableDocument.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CompanyID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RequesterID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.RequesterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequesterID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.RequesterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreatorID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatorID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReceiverID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.ReceiverIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiverID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ReceiverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DocumentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.DocumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.DocumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DocumentNo {
                get {
                    try {
                        return ((string)(this[this.tableDocument.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DocumentTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDocument.DocumentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentTypeID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.DocumentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ApproverID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.ApproverIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproverID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ApproverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableDocument.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tableDocument.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostingStatus {
                get {
                    try {
                        return ((string)(this[this.tableDocument.PostingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingStatus\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PostingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableDocument.ActiveColumn]));
                }
                set {
                    this[this.tableDocument.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableDocument.CreByColumn]));
                }
                set {
                    this[this.tableDocument.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocument.CreDateColumn]));
                }
                set {
                    this[this.tableDocument.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableDocument.UpdByColumn]));
                }
                set {
                    this[this.tableDocument.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocument.UpdDateColumn]));
                }
                set {
                    this[this.tableDocument.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableDocument.UpdPgmColumn]));
                }
                set {
                    this[this.tableDocument.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableDocument.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BranchCode {
                get {
                    try {
                        return ((string)(this[this.tableDocument.BranchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCode\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PaymentMethodID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.PaymentMethodIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMethodID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PaymentMethodIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PostingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.PostingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PostingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BaseLineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.BaseLineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseLineDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BaseLineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAccount {
                get {
                    try {
                        return ((string)(this[this.tableDocument.BankAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccount\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifyImage {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.IsVerifyImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVerifyImage\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.IsVerifyImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReferenceNo {
                get {
                    try {
                        return ((string)(this[this.tableDocument.ReferenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContainDocumentNo {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.IsContainDocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsContainDocumentNo\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.IsContainDocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mark {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.MarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mark\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.MarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BusinessArea {
                get {
                    try {
                        return ((string)(this[this.tableDocument.BusinessAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessArea\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.BusinessAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Supplementary {
                get {
                    try {
                        return ((string)(this[this.tableDocument.SupplementaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplementary\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.SupplementaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApproveDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.ApproveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproveDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ApproveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OldDocumentID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.OldDocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldDocumentID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.OldDocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CacheServiceTeamID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CacheServiceTeamIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheServiceTeamID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheServiceTeamIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CachePBID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CachePBIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CachePBID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CachePBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CacheAttachment {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.CacheAttachmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAttachment\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAttachmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CacheCurrentState {
                get {
                    try {
                        return ((int)(this[this.tableDocument.CacheCurrentStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCurrentState\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCurrentStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheCreatorName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheCreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCreatorName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheRequesterName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheRequesterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheRequesterName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheRequesterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CacheAmountLocalCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableDocument.CacheAmountLocalCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAmountLocalCurrency\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAmountLocalCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CacheAmountMainCurrency {
                get {
                    try {
                        return ((decimal)(this[this.tableDocument.CacheAmountMainCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAmountMainCurrency\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAmountMainCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CacheAmountTHB {
                get {
                    try {
                        return ((decimal)(this[this.tableDocument.CacheAmountTHBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheAmountTHB\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheAmountTHBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheBoxID {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheBoxIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheBoxID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheBoxIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CacheWorkflowID {
                get {
                    try {
                        return ((long)(this[this.tableDocument.CacheWorkflowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheWorkflowID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheWorkflowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheDocumentTypeName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheDocumentTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheDocumentTypeName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheDocumentTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CacheCurrentWorkFlowTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDocument.CacheCurrentWorkFlowTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCurrentWorkFlowTypeID\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCurrentWorkFlowTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CacheCurrentStateName {
                get {
                    try {
                        return ((string)(this[this.tableDocument.CacheCurrentStateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CacheCurrentStateName\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.CacheCurrentStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifyWithImage {
                get {
                    try {
                        return ((bool)(this[this.tableDocument.IsVerifyWithImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVerifyWithImage\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.IsVerifyWithImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReceiveDocumentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.ReceiveDocumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiveDocumentDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ReceiveDocumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VerifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.VerifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VerifiedDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.VerifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApproveVerifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.ApproveVerifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproveVerifiedDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.ApproveVerifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PaidDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.PaidDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.PaidDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RemittanceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocument.RemittanceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemittanceDate\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.RemittanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalHold {
                get {
                    try {
                        return ((int)(this[this.tableDocument.TotalHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHold\' in table \'Document\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocument.TotalHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableDocument.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyIDNull() {
                this[this.tableDocument.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequesterIDNull() {
                return this.IsNull(this.tableDocument.RequesterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequesterIDNull() {
                this[this.tableDocument.RequesterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableDocument.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableDocument.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiverIDNull() {
                return this.IsNull(this.tableDocument.ReceiverIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiverIDNull() {
                this[this.tableDocument.ReceiverIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentDateNull() {
                return this.IsNull(this.tableDocument.DocumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentDateNull() {
                this[this.tableDocument.DocumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tableDocument.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentNoNull() {
                this[this.tableDocument.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentTypeIDNull() {
                return this.IsNull(this.tableDocument.DocumentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentTypeIDNull() {
                this[this.tableDocument.DocumentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproverIDNull() {
                return this.IsNull(this.tableDocument.ApproverIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApproverIDNull() {
                this[this.tableDocument.ApproverIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableDocument.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectNull() {
                this[this.tableDocument.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoNull() {
                return this.IsNull(this.tableDocument.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoNull() {
                this[this.tableDocument.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingStatusNull() {
                return this.IsNull(this.tableDocument.PostingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingStatusNull() {
                this[this.tableDocument.PostingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableDocument.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableDocument.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableDocument.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchCodeNull() {
                this[this.tableDocument.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentMethodIDNull() {
                return this.IsNull(this.tableDocument.PaymentMethodIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentMethodIDNull() {
                this[this.tableDocument.PaymentMethodIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingDateNull() {
                return this.IsNull(this.tableDocument.PostingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingDateNull() {
                this[this.tableDocument.PostingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseLineDateNull() {
                return this.IsNull(this.tableDocument.BaseLineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseLineDateNull() {
                this[this.tableDocument.BaseLineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccountNull() {
                return this.IsNull(this.tableDocument.BankAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccountNull() {
                this[this.tableDocument.BankAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsVerifyImageNull() {
                return this.IsNull(this.tableDocument.IsVerifyImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsVerifyImageNull() {
                this[this.tableDocument.IsVerifyImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferenceNoNull() {
                return this.IsNull(this.tableDocument.ReferenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferenceNoNull() {
                this[this.tableDocument.ReferenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsContainDocumentNoNull() {
                return this.IsNull(this.tableDocument.IsContainDocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsContainDocumentNoNull() {
                this[this.tableDocument.IsContainDocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkNull() {
                return this.IsNull(this.tableDocument.MarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkNull() {
                this[this.tableDocument.MarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableDocument.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchivedNull() {
                this[this.tableDocument.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBusinessAreaNull() {
                return this.IsNull(this.tableDocument.BusinessAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBusinessAreaNull() {
                this[this.tableDocument.BusinessAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplementaryNull() {
                return this.IsNull(this.tableDocument.SupplementaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplementaryNull() {
                this[this.tableDocument.SupplementaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproveDateNull() {
                return this.IsNull(this.tableDocument.ApproveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApproveDateNull() {
                this[this.tableDocument.ApproveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldDocumentIDNull() {
                return this.IsNull(this.tableDocument.OldDocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOldDocumentIDNull() {
                this[this.tableDocument.OldDocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheServiceTeamIDNull() {
                return this.IsNull(this.tableDocument.CacheServiceTeamIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheServiceTeamIDNull() {
                this[this.tableDocument.CacheServiceTeamIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCachePBIDNull() {
                return this.IsNull(this.tableDocument.CachePBIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCachePBIDNull() {
                this[this.tableDocument.CachePBIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAttachmentNull() {
                return this.IsNull(this.tableDocument.CacheAttachmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAttachmentNull() {
                this[this.tableDocument.CacheAttachmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCurrentStateNull() {
                return this.IsNull(this.tableDocument.CacheCurrentStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCurrentStateNull() {
                this[this.tableDocument.CacheCurrentStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCreatorNameNull() {
                return this.IsNull(this.tableDocument.CacheCreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCreatorNameNull() {
                this[this.tableDocument.CacheCreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheRequesterNameNull() {
                return this.IsNull(this.tableDocument.CacheRequesterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheRequesterNameNull() {
                this[this.tableDocument.CacheRequesterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAmountLocalCurrencyNull() {
                return this.IsNull(this.tableDocument.CacheAmountLocalCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAmountLocalCurrencyNull() {
                this[this.tableDocument.CacheAmountLocalCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAmountMainCurrencyNull() {
                return this.IsNull(this.tableDocument.CacheAmountMainCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAmountMainCurrencyNull() {
                this[this.tableDocument.CacheAmountMainCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheAmountTHBNull() {
                return this.IsNull(this.tableDocument.CacheAmountTHBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheAmountTHBNull() {
                this[this.tableDocument.CacheAmountTHBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheBoxIDNull() {
                return this.IsNull(this.tableDocument.CacheBoxIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheBoxIDNull() {
                this[this.tableDocument.CacheBoxIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheWorkflowIDNull() {
                return this.IsNull(this.tableDocument.CacheWorkflowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheWorkflowIDNull() {
                this[this.tableDocument.CacheWorkflowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheDocumentTypeNameNull() {
                return this.IsNull(this.tableDocument.CacheDocumentTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheDocumentTypeNameNull() {
                this[this.tableDocument.CacheDocumentTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCurrentWorkFlowTypeIDNull() {
                return this.IsNull(this.tableDocument.CacheCurrentWorkFlowTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCurrentWorkFlowTypeIDNull() {
                this[this.tableDocument.CacheCurrentWorkFlowTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCacheCurrentStateNameNull() {
                return this.IsNull(this.tableDocument.CacheCurrentStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCacheCurrentStateNameNull() {
                this[this.tableDocument.CacheCurrentStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsVerifyWithImageNull() {
                return this.IsNull(this.tableDocument.IsVerifyWithImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsVerifyWithImageNull() {
                this[this.tableDocument.IsVerifyWithImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiveDocumentDateNull() {
                return this.IsNull(this.tableDocument.ReceiveDocumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiveDocumentDateNull() {
                this[this.tableDocument.ReceiveDocumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifiedDateNull() {
                return this.IsNull(this.tableDocument.VerifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVerifiedDateNull() {
                this[this.tableDocument.VerifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproveVerifiedDateNull() {
                return this.IsNull(this.tableDocument.ApproveVerifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApproveVerifiedDateNull() {
                this[this.tableDocument.ApproveVerifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaidDateNull() {
                return this.IsNull(this.tableDocument.PaidDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaidDateNull() {
                this[this.tableDocument.PaidDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemittanceDateNull() {
                return this.IsNull(this.tableDocument.RemittanceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemittanceDateNull() {
                this[this.tableDocument.RemittanceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHoldNull() {
                return this.IsNull(this.tableDocument.TotalHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHoldNull() {
                this[this.tableDocument.TotalHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRow[] GetFixedAdvanceDocumentRows() {
                if ((this.Table.ChildRelations["FK_FixedAdvanceDocument_Document"] == null)) {
                    return new FixedAdvanceDocumentRow[0];
                }
                else {
                    return ((FixedAdvanceDocumentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FixedAdvanceDocument_Document"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow[] GetDocumentInitiatorRows() {
                if ((this.Table.ChildRelations["FK_DocumentInitiator_Document"] == null)) {
                    return new DocumentInitiatorRow[0];
                }
                else {
                    return ((DocumentInitiatorRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DocumentInitiator_Document"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow[] GetDocumentAttachmentRows() {
                if ((this.Table.ChildRelations["FK_DocumentAttachment_Document"] == null)) {
                    return new DocumentAttachmentRow[0];
                }
                else {
                    return ((DocumentAttachmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DocumentAttachment_Document"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow[] GetWorkFlowRows() {
                if ((this.Table.ChildRelations["FK_WorkFlow_Document"] == null)) {
                    return new WorkFlowRow[0];
                }
                else {
                    return ((WorkFlowRow[])(base.GetChildRows(this.Table.ChildRelations["FK_WorkFlow_Document"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WorkFlowRow : global::System.Data.DataRow {
            
            private WorkFlowDataTable tableWorkFlow;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkFlowRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkFlow = ((WorkFlowDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WorkFlowID {
                get {
                    return ((long)(this[this.tableWorkFlow.WorkFlowIDColumn]));
                }
                set {
                    this[this.tableWorkFlow.WorkFlowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    try {
                        return ((long)(this[this.tableWorkFlow.DocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentID\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WorkFlowTypeID {
                get {
                    try {
                        return ((int)(this[this.tableWorkFlow.WorkFlowTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkFlowTypeID\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.WorkFlowTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableWorkFlow.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrentState {
                get {
                    try {
                        return ((int)(this[this.tableWorkFlow.CurrentStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentState\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.CurrentStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableWorkFlow.ActiveColumn]));
                }
                set {
                    this[this.tableWorkFlow.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableWorkFlow.CreByColumn]));
                }
                set {
                    this[this.tableWorkFlow.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableWorkFlow.CreDateColumn]));
                }
                set {
                    this[this.tableWorkFlow.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableWorkFlow.UpdByColumn]));
                }
                set {
                    this[this.tableWorkFlow.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableWorkFlow.UpdDateColumn]));
                }
                set {
                    this[this.tableWorkFlow.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableWorkFlow.UpdPgmColumn]));
                }
                set {
                    this[this.tableWorkFlow.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableWorkFlow.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'WorkFlow\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkFlow.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_WorkFlow_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_WorkFlow_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentIDNull() {
                return this.IsNull(this.tableWorkFlow.DocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentIDNull() {
                this[this.tableWorkFlow.DocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkFlowTypeIDNull() {
                return this.IsNull(this.tableWorkFlow.WorkFlowTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkFlowTypeIDNull() {
                this[this.tableWorkFlow.WorkFlowTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableWorkFlow.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableWorkFlow.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentStateNull() {
                return this.IsNull(this.tableWorkFlow.CurrentStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentStateNull() {
                this[this.tableWorkFlow.CurrentStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableWorkFlow.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableWorkFlow.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DocumentAttachmentRow : global::System.Data.DataRow {
            
            private DocumentAttachmentDataTable tableDocumentAttachment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentAttachmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentAttachment = ((DocumentAttachmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AttachmentID {
                get {
                    return ((long)(this[this.tableDocumentAttachment.AttachmentIDColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.AttachmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    try {
                        return ((long)(this[this.tableDocumentAttachment.DocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentID\' in table \'DocumentAttachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentAttachment.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttachFileName {
                get {
                    try {
                        return ((string)(this[this.tableDocumentAttachment.AttachFileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttachFileName\' in table \'DocumentAttachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentAttachment.AttachFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttachFilePath {
                get {
                    try {
                        return ((string)(this[this.tableDocumentAttachment.AttachFilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttachFilePath\' in table \'DocumentAttachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentAttachment.AttachFilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableDocumentAttachment.ActiveColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableDocumentAttachment.CreByColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentAttachment.CreDateColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableDocumentAttachment.UpdByColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentAttachment.UpdDateColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableDocumentAttachment.UpdPgmColumn]));
                }
                set {
                    this[this.tableDocumentAttachment.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableDocumentAttachment.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'DocumentAttachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentAttachment.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_DocumentAttachment_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DocumentAttachment_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentIDNull() {
                return this.IsNull(this.tableDocumentAttachment.DocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentIDNull() {
                this[this.tableDocumentAttachment.DocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachFileNameNull() {
                return this.IsNull(this.tableDocumentAttachment.AttachFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachFileNameNull() {
                this[this.tableDocumentAttachment.AttachFileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachFilePathNull() {
                return this.IsNull(this.tableDocumentAttachment.AttachFilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachFilePathNull() {
                this[this.tableDocumentAttachment.AttachFilePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableDocumentAttachment.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableDocumentAttachment.RowVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DocumentInitiatorRow : global::System.Data.DataRow {
            
            private DocumentInitiatorDataTable tableDocumentInitiator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DocumentInitiatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentInitiator = ((DocumentInitiatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InitiatorID {
                get {
                    return ((long)(this[this.tableDocumentInitiator.InitiatorIDColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.InitiatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    try {
                        return ((long)(this[this.tableDocumentInitiator.DocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentID\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Seq {
                get {
                    try {
                        return ((short)(this[this.tableDocumentInitiator.SeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Seq\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.SeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UserID {
                get {
                    try {
                        return ((long)(this[this.tableDocumentInitiator.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InitiatorType {
                get {
                    try {
                        return ((string)(this[this.tableDocumentInitiator.InitiatorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitiatorType\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.InitiatorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DoApprove {
                get {
                    try {
                        return ((bool)(this[this.tableDocumentInitiator.DoApproveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoApprove\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.DoApproveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableDocumentInitiator.ActiveColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableDocumentInitiator.CreByColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentInitiator.CreDateColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableDocumentInitiator.UpdByColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentInitiator.UpdDateColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableDocumentInitiator.UpdPgmColumn]));
                }
                set {
                    this[this.tableDocumentInitiator.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableDocumentInitiator.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isSkip {
                get {
                    try {
                        return ((bool)(this[this.tableDocumentInitiator.isSkipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isSkip\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.isSkipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SkipReason {
                get {
                    try {
                        return ((string)(this[this.tableDocumentInitiator.SkipReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkipReason\' in table \'DocumentInitiator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentInitiator.SkipReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_DocumentInitiator_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DocumentInitiator_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentIDNull() {
                return this.IsNull(this.tableDocumentInitiator.DocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentIDNull() {
                this[this.tableDocumentInitiator.DocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeqNull() {
                return this.IsNull(this.tableDocumentInitiator.SeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeqNull() {
                this[this.tableDocumentInitiator.SeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableDocumentInitiator.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIDNull() {
                this[this.tableDocumentInitiator.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInitiatorTypeNull() {
                return this.IsNull(this.tableDocumentInitiator.InitiatorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInitiatorTypeNull() {
                this[this.tableDocumentInitiator.InitiatorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoApproveNull() {
                return this.IsNull(this.tableDocumentInitiator.DoApproveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoApproveNull() {
                this[this.tableDocumentInitiator.DoApproveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableDocumentInitiator.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableDocumentInitiator.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisSkipNull() {
                return this.IsNull(this.tableDocumentInitiator.isSkipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisSkipNull() {
                this[this.tableDocumentInitiator.isSkipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSkipReasonNull() {
                return this.IsNull(this.tableDocumentInitiator.SkipReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSkipReasonNull() {
                this[this.tableDocumentInitiator.SkipReasonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FixedAdvanceDocumentRow : global::System.Data.DataRow {
            
            private FixedAdvanceDocumentDataTable tableFixedAdvanceDocument;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FixedAdvanceDocumentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFixedAdvanceDocument = ((FixedAdvanceDocumentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FixedAdvanceID {
                get {
                    return ((long)(this[this.tableFixedAdvanceDocument.FixedAdvanceIDColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.FixedAdvanceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DocumentID {
                get {
                    return ((long)(this[this.tableFixedAdvanceDocument.DocumentIDColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.DocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EffectiveFromDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.EffectiveFromDateColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.EffectiveFromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EffectiveToDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.EffectiveToDateColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.EffectiveToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RequestDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.RequestDateColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Objective {
                get {
                    try {
                        return ((string)(this[this.tableFixedAdvanceDocument.ObjectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Objective\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.ObjectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RefFixedAdvanceID {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.RefFixedAdvanceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefFixedAdvanceID\' in table \'FixedAdvanceDocument\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.RefFixedAdvanceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte FixedAdvanceType {
                get {
                    return ((byte)(this[this.tableFixedAdvanceDocument.FixedAdvanceTypeColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.FixedAdvanceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFixedAdvanceDocument.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFixedAdvanceDocument.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ServiceTeamID {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.ServiceTeamIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceTeamID\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.ServiceTeamIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableFixedAdvanceDocument.PaymentTypeColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PBID {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.PBIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PBID\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.PBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReturnServiceTeamID {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.ReturnServiceTeamIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnServiceTeamID\' in table \'FixedAdvanceDocument\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.ReturnServiceTeamIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReturnRequestDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.ReturnRequestDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnRequestDate\' in table \'FixedAdvanceDocument\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.ReturnRequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReturnPBID {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.ReturnPBIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnPBID\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.ReturnPBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReturnPaymentType {
                get {
                    try {
                        return ((string)(this[this.tableFixedAdvanceDocument.ReturnPaymentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnPaymentType\' in table \'FixedAdvanceDocument\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.ReturnPaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BranchCodeReturn {
                get {
                    try {
                        return ((string)(this[this.tableFixedAdvanceDocument.BranchCodeReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCodeReturn\' in table \'FixedAdvanceDocument\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.BranchCodeReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PaymentMethodIDReturn {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.PaymentMethodIDReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMethodIDReturn\' in table \'FixedAdvanceDocument\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.PaymentMethodIDReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PostingDateReturn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.PostingDateReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingDateReturn\' in table \'FixedAdvanceDocument\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.PostingDateReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BaseLineDateReturn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.BaseLineDateReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseLineDateReturn\' in table \'FixedAdvanceDocument\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.BaseLineDateReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostingStatusReturn {
                get {
                    try {
                        return ((string)(this[this.tableFixedAdvanceDocument.PostingStatusReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingStatusReturn\' in table \'FixedAdvanceDocument\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.PostingStatusReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RefRootFixedAdvance {
                get {
                    try {
                        return ((long)(this[this.tableFixedAdvanceDocument.RefRootFixedAdvanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefRootFixedAdvance\' in table \'FixedAdvanceDocument\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.RefRootFixedAdvanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tableFixedAdvanceDocument.ActiveColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreBy {
                get {
                    return ((long)(this[this.tableFixedAdvanceDocument.CreByColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.CreByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.CreDateColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.CreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UpdBy {
                get {
                    return ((long)(this[this.tableFixedAdvanceDocument.UpdByColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.UpdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdDate {
                get {
                    return ((global::System.DateTime)(this[this.tableFixedAdvanceDocument.UpdDateColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.UpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdPgm {
                get {
                    return ((string)(this[this.tableFixedAdvanceDocument.UpdPgmColumn]));
                }
                set {
                    this[this.tableFixedAdvanceDocument.UpdPgmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableFixedAdvanceDocument.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'FixedAdvanceDocument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FixedAdvanceBankAccount {
                get {
                    try {
                        return ((string)(this[this.tableFixedAdvanceDocument.FixedAdvanceBankAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FixedAdvanceBankAccount\' in table \'FixedAdvanceDocument\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFixedAdvanceDocument.FixedAdvanceBankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow DocumentRow {
                get {
                    return ((DocumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_FixedAdvanceDocument_Document"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FixedAdvanceDocument_Document"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObjectiveNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.ObjectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObjectiveNull() {
                this[this.tableFixedAdvanceDocument.ObjectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefFixedAdvanceIDNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.RefFixedAdvanceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefFixedAdvanceIDNull() {
                this[this.tableFixedAdvanceDocument.RefFixedAdvanceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountNull() {
                this[this.tableFixedAdvanceDocument.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetAmountNull() {
                this[this.tableFixedAdvanceDocument.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceTeamIDNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.ServiceTeamIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceTeamIDNull() {
                this[this.tableFixedAdvanceDocument.ServiceTeamIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPBIDNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.PBIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPBIDNull() {
                this[this.tableFixedAdvanceDocument.PBIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnServiceTeamIDNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.ReturnServiceTeamIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnServiceTeamIDNull() {
                this[this.tableFixedAdvanceDocument.ReturnServiceTeamIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnRequestDateNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.ReturnRequestDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnRequestDateNull() {
                this[this.tableFixedAdvanceDocument.ReturnRequestDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnPBIDNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.ReturnPBIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnPBIDNull() {
                this[this.tableFixedAdvanceDocument.ReturnPBIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnPaymentTypeNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.ReturnPaymentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnPaymentTypeNull() {
                this[this.tableFixedAdvanceDocument.ReturnPaymentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchCodeReturnNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.BranchCodeReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchCodeReturnNull() {
                this[this.tableFixedAdvanceDocument.BranchCodeReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentMethodIDReturnNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.PaymentMethodIDReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentMethodIDReturnNull() {
                this[this.tableFixedAdvanceDocument.PaymentMethodIDReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingDateReturnNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.PostingDateReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingDateReturnNull() {
                this[this.tableFixedAdvanceDocument.PostingDateReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseLineDateReturnNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.BaseLineDateReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseLineDateReturnNull() {
                this[this.tableFixedAdvanceDocument.BaseLineDateReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingStatusReturnNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.PostingStatusReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingStatusReturnNull() {
                this[this.tableFixedAdvanceDocument.PostingStatusReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefRootFixedAdvanceNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.RefRootFixedAdvanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefRootFixedAdvanceNull() {
                this[this.tableFixedAdvanceDocument.RefRootFixedAdvanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableFixedAdvanceDocument.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFixedAdvanceBankAccountNull() {
                return this.IsNull(this.tableFixedAdvanceDocument.FixedAdvanceBankAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFixedAdvanceBankAccountNull() {
                this[this.tableFixedAdvanceDocument.FixedAdvanceBankAccountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DocumentRowChangeEvent : global::System.EventArgs {
            
            private DocumentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRowChangeEvent(DocumentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WorkFlowRowChangeEvent : global::System.EventArgs {
            
            private WorkFlowRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRowChangeEvent(WorkFlowRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkFlowRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DocumentAttachmentRowChangeEvent : global::System.EventArgs {
            
            private DocumentAttachmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRowChangeEvent(DocumentAttachmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentAttachmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DocumentInitiatorRowChangeEvent : global::System.EventArgs {
            
            private DocumentInitiatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRowChangeEvent(DocumentInitiatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DocumentInitiatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FixedAdvanceDocumentRowChangeEvent : global::System.EventArgs {
            
            private FixedAdvanceDocumentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRowChangeEvent(FixedAdvanceDocumentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FixedAdvanceDocumentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591