//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using SS.Standard.Data.NHibernate.DTO;
using System.Data;

namespace SCG.eAccounting.DTO
{
    /// <summary>
    /// POJO for FnExpensePerdiemDetail. This class is autogenerated
    /// </summary>
    [Serializable]
    public partial class FnExpensePerdiemDetail : INHibernateAdapterDTO<long>
    {
        #region Fields

        private long expensePerdiemDetailID;
        private string description;
        private long currencyID;
        private double exchangeRate;
        private double amount;
        private SCG.eAccounting.DTO.FnExpensePerdiem expensePerdiem;

        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the FnExpensePerdiemDetail class
        /// </summary>
        public FnExpensePerdiemDetail()
        {
        }

        public FnExpensePerdiemDetail(long expensePerdiemDetailID)
        {
            this.expensePerdiemDetailID = expensePerdiemDetailID;
        }

        /// <summary>
        /// Initializes a new instance of the FnExpensePerdiemDetail class
        /// </summary>
        /// <param name="description">Initial <see cref="FnExpensePerdiemDetail.Description" /> value</param>
        /// <param name="currencyID">Initial <see cref="FnExpensePerdiemDetail.CurrencyID" /> value</param>
        /// <param name="exchangeRate">Initial <see cref="FnExpensePerdiemDetail.ExchangeRate" /> value</param>
        /// <param name="amount">Initial <see cref="FnExpensePerdiemDetail.Amount" /> value</param>
        /// <param name="expensePerdiem">Initial <see cref="FnExpensePerdiemDetail.ExpensePerdiem" /> value</param>
        public FnExpensePerdiemDetail(string description, long currencyID, double exchangeRate, double amount, SCG.eAccounting.DTO.FnExpensePerdiem expensePerdiem)
        {
            this.description = description;
            this.currencyID = currencyID;
            this.exchangeRate = exchangeRate;
            this.amount = amount;
            this.expensePerdiem = expensePerdiem;
        }

        #endregion

        #region Properties

        /// <summary>
        /// Gets or sets the ExpensePerdiemDetailID for the current FnExpensePerdiemDetail
        /// </summary>
        public virtual long ExpensePerdiemDetailID
        {
            get { return this.expensePerdiemDetailID; }
            set { this.expensePerdiemDetailID = value; }
        }

        /// <summary>
        /// Gets or sets the Description for the current FnExpensePerdiemDetail
        /// </summary>
        public virtual string Description
        {
            get { return this.description; }
            set { this.description = value; }
        }

        /// <summary>
        /// Gets or sets the CurrencyID for the current FnExpensePerdiemDetail
        /// </summary>
        public virtual long CurrencyID
        {
            get { return this.currencyID; }
            set { this.currencyID = value; }
        }

        /// <summary>
        /// Gets or sets the ExchangeRate for the current FnExpensePerdiemDetail
        /// </summary>
        public virtual double ExchangeRate
        {
            get { return this.exchangeRate; }
            set { this.exchangeRate = value; }
        }

        /// <summary>
        /// Gets or sets the Amount for the current FnExpensePerdiemDetail
        /// </summary>
        public virtual double Amount
        {
            get { return this.amount; }
            set { this.amount = value; }
        }

        /// <summary>
        /// Gets or sets the ExpensePerdiem for the current FnExpensePerdiemDetail
        /// </summary>
        public virtual SCG.eAccounting.DTO.FnExpensePerdiem ExpensePerdiem
        {
            get { return this.expensePerdiem; }
            set { this.expensePerdiem = value; }
        }

        #endregion

        #region INHibernateAdapterDTO<long> Members
        public void LoadFromDataRow(DataRow dr)
        {
            if (!string.IsNullOrEmpty(dr["expensePerdiemDetailID"].ToString()))
                this.expensePerdiemDetailID = Convert.ToInt64(dr["expensePerdiemDetailID"]);

            this.Description = dr["Description"].ToString();

            if (!string.IsNullOrEmpty(dr["CurrencyID"].ToString()))
                this.CurrencyID = Convert.ToInt64(dr["CurrencyID"].ToString());

            if (!string.IsNullOrEmpty(dr["ExchangeRate"].ToString()))
                this.ExchangeRate = Convert.ToDouble(dr["ExchangeRate"]);

            if (!string.IsNullOrEmpty(dr["Amount"].ToString()))
                this.Amount = Convert.ToDouble(dr["Amount"]);

            if (!string.IsNullOrEmpty(dr["ExpensePerdiemID"].ToString()))
                this.ExpensePerdiem = new FnExpensePerdiem(Convert.ToInt64(dr["ExpensePerdiemID"]));
        }
        public void SaveIDToDataRow(DataTable dt, DataRow dr, long newID)
        {
            long oldID = dr.Field<long>("expensePerdiemDetailID");

            dt.PrimaryKey[0].ReadOnly = false;
            dt.Rows.Find(oldID).BeginEdit();
            dt.Rows.Find(oldID)["expensePerdiemDetailID"] = newID;
            dt.Rows.Find(oldID).EndEdit();
            dt.PrimaryKey[0].ReadOnly = true;
        }
        public long GetIDFromDataRow(DataRow dr)
        {
            return Convert.ToInt64(dr["expensePerdiemDetailID"].ToString());
        }
        public long GetIDFromDataRow(DataRow dr, DataRowVersion rowState)
        {
            return Convert.ToInt64(dr["expensePerdiemDetailID", rowState].ToString());
        }
        #endregion
    }
}
