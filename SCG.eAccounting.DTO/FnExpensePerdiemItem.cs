//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using SS.Standard.Data.NHibernate.DTO;

namespace SCG.eAccounting.DTO
{
    /// <summary>
    /// POJO for FnExpensePerdiemItem. This class is autogenerated
    /// </summary>
    [Serializable]
    public partial class FnExpensePerdiemItem : INHibernateAdapterDTO<long>
    {
        #region Fields

        private long perdiemItemID;
        private SCG.eAccounting.DTO.FnExpensePerdiem expensePerdiem;
        private DateTime? fromDate;
        private DateTime? toDate;
        private DateTime? fromTime;
        private DateTime? toTime;
        private double adjustedDay;
        private double halfDay;
        private double fullDay;
        private double netDay;
        private short? countryID;
        private long? countryZoneID;
        private bool active;
        private long creBy;
        private DateTime creDate;
        private long updBy;
        private DateTime updDate;
        private string updPgm;
        private Byte[] rowVersion;
        private string remark;

        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the FnExpensePerdiemItem class
        /// </summary>
        public FnExpensePerdiemItem()
        {
        }

        public FnExpensePerdiemItem(long perdiemItemID)
        {
            this.perdiemItemID = perdiemItemID;
        }

        /// <summary>
        /// Initializes a new instance of the FnExpensePerdiemItem class
        /// </summary>
        /// <param name="expensePerdiemID">Initial <see cref="FnExpensePerdiemItem.ExpensePerdiemID" /> value</param>
        /// <param name="fromDate">Initial <see cref="FnExpensePerdiemItem.FromDate" /> value</param>
        /// <param name="toDate">Initial <see cref="FnExpensePerdiemItem.ToDate" /> value</param>
        /// <param name="fromTime">Initial <see cref="FnExpensePerdiemItem.FromTime" /> value</param>
        /// <param name="toTime">Initial <see cref="FnExpensePerdiemItem.ToTime" /> value</param>
        /// <param name="adjustedDay">Initial <see cref="FnExpensePerdiemItem.AdjustedDay" /> value</param>
        /// <param name="halfDay">Initial <see cref="FnExpensePerdiemItem.HalfDay" /> value</param>
        /// <param name="fullDay">Initial <see cref="FnExpensePerdiemItem.FullDay" /> value</param>
        /// <param name="netDay">Initial <see cref="FnExpensePerdiemItem.NetDay" /> value</param>
        /// <param name="countryID">Initial <see cref="FnExpensePerdiemItem.CountryID" /> value</param>
        /// <param name="countryZoneID">Initial <see cref="FnExpensePerdiemItem.CountryZoneID" /> value</param>
        /// <param name="active">Initial <see cref="FnExpensePerdiemItem.Active" /> value</param>
        /// <param name="creBy">Initial <see cref="FnExpensePerdiemItem.CreBy" /> value</param>
        /// <param name="creDate">Initial <see cref="FnExpensePerdiemItem.CreDate" /> value</param>
        /// <param name="updBy">Initial <see cref="FnExpensePerdiemItem.UpdBy" /> value</param>
        /// <param name="updDate">Initial <see cref="FnExpensePerdiemItem.UpdDate" /> value</param>
        /// <param name="updPgm">Initial <see cref="FnExpensePerdiemItem.UpdPgm" /> value</param>
        /// <param name="rowVersion">Initial <see cref="FnExpensePerdiemItem.RowVersion" /> value</param>
        public FnExpensePerdiemItem(SCG.eAccounting.DTO.FnExpensePerdiem expensePerdiem, DateTime? fromDate, DateTime? toDate, DateTime? fromTime, DateTime? toTime, double adjustedDay, double halfDay, double fullDay, double netDay, short? countryID, long? countryZoneID, bool active, long creBy, DateTime creDate, long updBy, DateTime updDate, string updPgm, Byte[] rowVersion, string remark)
        {
            this.expensePerdiem = expensePerdiem;
            this.fromDate = fromDate;
            this.toDate = toDate;
            this.fromTime = fromTime;
            this.toTime = toTime;
            this.adjustedDay = adjustedDay;
            this.halfDay = halfDay;
            this.fullDay = fullDay;
            this.netDay = netDay;
            this.countryID = countryID;
            this.countryZoneID = countryZoneID;
            this.active = active;
            this.creBy = creBy;
            this.creDate = creDate;
            this.updBy = updBy;
            this.updDate = updDate;
            this.updPgm = updPgm;
            this.rowVersion = rowVersion;
            this.remark = remark;
        }

        /// <summary>
        /// Minimal constructor for class FnExpensePerdiemItem
        /// </summary>
        /// <param name="expensePerdiemID">Initial <see cref="FnExpensePerdiemItem.ExpensePerdiemID" /> value</param>
        /// <param name="fromDate">Initial <see cref="FnExpensePerdiemItem.FromDate" /> value</param>
        /// <param name="toDate">Initial <see cref="FnExpensePerdiemItem.ToDate" /> value</param>
        /// <param name="fromTime">Initial <see cref="FnExpensePerdiemItem.FromTime" /> value</param>
        /// <param name="toTime">Initial <see cref="FnExpensePerdiemItem.ToTime" /> value</param>
        /// <param name="netDay">Initial <see cref="FnExpensePerdiemItem.NetDay" /> value</param>
        /// <param name="active">Initial <see cref="FnExpensePerdiemItem.Active" /> value</param>
        /// <param name="creBy">Initial <see cref="FnExpensePerdiemItem.CreBy" /> value</param>
        /// <param name="creDate">Initial <see cref="FnExpensePerdiemItem.CreDate" /> value</param>
        /// <param name="updBy">Initial <see cref="FnExpensePerdiemItem.UpdBy" /> value</param>
        /// <param name="updDate">Initial <see cref="FnExpensePerdiemItem.UpdDate" /> value</param>
        /// <param name="updPgm">Initial <see cref="FnExpensePerdiemItem.UpdPgm" /> value</param>
        public FnExpensePerdiemItem(SCG.eAccounting.DTO.FnExpensePerdiem expensePerdiem, DateTime? fromDate, DateTime? toDate, DateTime? fromTime, DateTime? toTime, double netDay, bool active, long creBy, DateTime creDate, long updBy, DateTime updDate, string updPgm)
        {
            this.expensePerdiem = expensePerdiem;
            this.fromDate = fromDate;
            this.toDate = toDate;
            this.fromTime = fromTime;
            this.toTime = toTime;
            this.netDay = netDay;
            this.active = active;
            this.creBy = creBy;
            this.creDate = creDate;
            this.updBy = updBy;
            this.updDate = updDate;
            this.updPgm = updPgm;
        }
        #endregion

        #region Properties

        /// <summary>
        /// Gets or sets the PerdiemItemID for the current FnExpensePerdiemItem
        /// </summary>
        public virtual long PerdiemItemID
        {
            get { return this.perdiemItemID; }
            set { this.perdiemItemID = value; }
        }

        /// <summary>
        /// Gets or sets the ExpensePerdiemID for the current FnExpensePerdiemItem
        /// </summary>
        public virtual SCG.eAccounting.DTO.FnExpensePerdiem ExpensePerdiem
        {
            get { return this.expensePerdiem; }
            set { this.expensePerdiem = value; }
        }

        /// <summary>
        /// Gets or sets the FromDate for the current FnExpensePerdiemItem
        /// </summary>
        public virtual DateTime? FromDate
        {
            get { return this.fromDate; }
            set { this.fromDate = value; }
        }

        /// <summary>
        /// Gets or sets the ToDate for the current FnExpensePerdiemItem
        /// </summary>
        public virtual DateTime? ToDate
        {
            get { return this.toDate; }
            set { this.toDate = value; }
        }

        /// <summary>
        /// Gets or sets the FromTime for the current FnExpensePerdiemItem
        /// </summary>
        public virtual DateTime? FromTime
        {
            get { return this.fromTime; }
            set { this.fromTime = value; }
        }

        /// <summary>
        /// Gets or sets the ToTime for the current FnExpensePerdiemItem
        /// </summary>
        public virtual DateTime? ToTime
        {
            get { return this.toTime; }
            set { this.toTime = value; }
        }

        /// <summary>
        /// Gets or sets the AdjustedDay for the current FnExpensePerdiemItem
        /// </summary>
        public virtual double AdjustedDay
        {
            get { return this.adjustedDay; }
            set { this.adjustedDay = value; }
        }

        /// <summary>
        /// Gets or sets the HalfDay for the current FnExpensePerdiemItem
        /// </summary>
        public virtual double HalfDay
        {
            get { return this.halfDay; }
            set { this.halfDay = value; }
        }

        /// <summary>
        /// Gets or sets the FullDay for the current FnExpensePerdiemItem
        /// </summary>
        public virtual double FullDay
        {
            get { return this.fullDay; }
            set { this.fullDay = value; }
        }

        /// <summary>
        /// Gets or sets the NetDay for the current FnExpensePerdiemItem
        /// </summary>
        public virtual double NetDay
        {
            get { return this.netDay; }
            set { this.netDay = value; }
        }

        /// <summary>
        /// Gets or sets the CountryID for the current FnExpensePerdiemItem
        /// </summary>
        public virtual short? CountryID
        {
            get { return this.countryID; }
            set { this.countryID = value; }
        }

        /// <summary>
        /// Gets or sets the CountryZoneID for the current FnExpensePerdiemItem
        /// </summary>
        public virtual long? CountryZoneID
        {
            get { return this.countryZoneID; }
            set { this.countryZoneID = value; }
        }

        /// <summary>
        /// Gets or sets the Active for the current FnExpensePerdiemItem
        /// </summary>
        public virtual bool Active
        {
            get { return this.active; }
            set { this.active = value; }
        }

        /// <summary>
        /// Gets or sets the CreBy for the current FnExpensePerdiemItem
        /// </summary>
        public virtual long CreBy
        {
            get { return this.creBy; }
            set { this.creBy = value; }
        }

        /// <summary>
        /// Gets or sets the CreDate for the current FnExpensePerdiemItem
        /// </summary>
        public virtual DateTime CreDate
        {
            get { return this.creDate; }
            set { this.creDate = value; }
        }

        /// <summary>
        /// Gets or sets the UpdBy for the current FnExpensePerdiemItem
        /// </summary>
        public virtual long UpdBy
        {
            get { return this.updBy; }
            set { this.updBy = value; }
        }

        /// <summary>
        /// Gets or sets the UpdDate for the current FnExpensePerdiemItem
        /// </summary>
        public virtual DateTime UpdDate
        {
            get { return this.updDate; }
            set { this.updDate = value; }
        }

        /// <summary>
        /// Gets or sets the UpdPgm for the current FnExpensePerdiemItem
        /// </summary>
        public virtual string UpdPgm
        {
            get { return this.updPgm; }
            set { this.updPgm = value; }
        }

        /// <summary>
        /// Gets or sets the RowVersion for the current FnExpensePerdiemItem
        /// </summary>
        public virtual Byte[] RowVersion
        {
            get { return this.rowVersion; }
            set { this.rowVersion = value; }
        }

        /// <summary>
        /// Gets or sets the Remark for the current FnExpensePerdiemItem
        /// </summary>
        public virtual string Remark
        {
            get { return this.remark; }
            set { this.remark = value; }
        }
        #endregion
        #region INHibernateAdapterDTO<long> Members
        public void LoadFromDataRow(DataRow dr)
        {
            this.PerdiemItemID = Convert.ToInt64(dr["PerdiemItemID"]);
            this.ExpensePerdiem = new FnExpensePerdiem(Convert.ToInt64(dr["ExpensePerdiemID"].ToString()));
            if (!string.IsNullOrEmpty(dr["FromDate"].ToString()))
                this.FromDate = Convert.ToDateTime(dr["FromDate"]);
            if (!string.IsNullOrEmpty(dr["ToDate"].ToString()))
                this.ToDate = Convert.ToDateTime(dr["ToDate"]);
            this.FromTime = Convert.ToDateTime(dr["FromTime"]);
            this.ToTime = Convert.ToDateTime(dr["ToTime"]);
            this.AdjustedDay = Convert.ToDouble(dr["AdjustedDay"]);
            this.HalfDay = Convert.ToDouble(dr["HalfDay"]);
            this.FullDay = Convert.ToDouble(dr["FullDay"]);
            this.NetDay = Convert.ToDouble(dr["NetDay"]);
            if (!string.IsNullOrEmpty(dr["CountryID"].ToString()))
                this.CountryID = Convert.ToInt16(dr["CountryID"]);
            if(dr["CountryZoneID"] != System.DBNull.Value)
                this.CountryZoneID = Convert.ToInt64(dr["CountryZoneID"]);
            this.Active = (bool)dr["Active"];
            this.CreBy = Convert.ToInt64(dr["CreBy"].ToString());
            this.CreDate = Convert.ToDateTime(dr["CreDate"]);
            this.UpdBy = Convert.ToInt64(dr["UpdBy"].ToString());
            this.UpdDate = Convert.ToDateTime(dr["UpdDate"]);
            this.UpdPgm = dr["UpdPgm"].ToString();
            this.Remark = dr["Remark"].ToString();
        }
        public void SaveIDToDataRow(DataTable dt, DataRow dr, long newID)
        {
            long oldID = dr.Field<long>("PerdiemItemID");

            dt.PrimaryKey[0].ReadOnly = false;
            dt.Rows.Find(oldID).BeginEdit();
            dt.Rows.Find(oldID)["PerdiemItemID"] = newID;
            dt.Rows.Find(oldID).EndEdit();
            dt.PrimaryKey[0].ReadOnly = true;
        }
        public long GetIDFromDataRow(DataRow dr)
        {
            return Convert.ToInt64(dr["PerdiemItemID"].ToString());
        }
        public long GetIDFromDataRow(DataRow dr, DataRowVersion rowState)
        {
            return Convert.ToInt64(dr["PerdiemItemID", rowState].ToString());
        }
        #endregion
    }
}
