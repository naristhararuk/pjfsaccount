//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using SCG.DB.DTO;
using SCG.eAccounting.DTO.DataSet;
using SS.Standard.Data.NHibernate.DTO;
using System.Data;

namespace SCG.eAccounting.DTO
{
	/// <summary>
	/// POJO for FnRemittanceAdvance. This class is autogenerated
	/// </summary>
    [Serializable]
    public partial class FnRemittanceAdvance : INHibernateAdapterDTO<long>
    {
        #region Fields

        private long remittanceAdvanceID;
        private bool active;
        private long updBy;
        private DateTime updDate;
        private long creBy;
        private DateTime creDate;
        private string updPgm;
        private byte[] rowVersion;
        private SCG.eAccounting.DTO.FnRemittance remittance;
        private SCG.eAccounting.DTO.AvAdvanceDocument advance;

        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the FnRemittanceAdvance class
        /// </summary>
        public FnRemittanceAdvance()
        {
        }

        public FnRemittanceAdvance(long remittanceAdvanceID)
        {
            this.remittanceAdvanceID = remittanceAdvanceID;
        }

        /// <summary>
        /// Initializes a new instance of the FnRemittanceAdvance class
        /// </summary>
        /// <param name="active">Initial <see cref="FnRemittanceAdvance.Active" /> value</param>
        /// <param name="updBy">Initial <see cref="FnRemittanceAdvance.UpdBy" /> value</param>
        /// <param name="updDate">Initial <see cref="FnRemittanceAdvance.UpdDate" /> value</param>
        /// <param name="creBy">Initial <see cref="FnRemittanceAdvance.CreBy" /> value</param>
        /// <param name="creDate">Initial <see cref="FnRemittanceAdvance.CreDate" /> value</param>
        /// <param name="updPgm">Initial <see cref="FnRemittanceAdvance.UpdPgm" /> value</param>
        /// <param name="rowVersion">Initial <see cref="FnRemittanceAdvance.RowVersion" /> value</param>
        /// <param name="remittance">Initial <see cref="FnRemittanceAdvance.Remittance" /> value</param>
        /// <param name="advance">Initial <see cref="FnRemittanceAdvance.Advance" /> value</param>
        public FnRemittanceAdvance(bool active, long updBy, DateTime updDate, long creBy, DateTime creDate, string updPgm, byte[] rowVersion, SCG.eAccounting.DTO.FnRemittance remittance, SCG.eAccounting.DTO.AvAdvanceDocument advance)
        {
            this.active = active;
            this.updBy = updBy;
            this.updDate = updDate;
            this.creBy = creBy;
            this.creDate = creDate;
            this.updPgm = updPgm;
            this.rowVersion = rowVersion;
            this.remittance = remittance;
            this.advance = advance;
        }

        /// <summary>
        /// Minimal constructor for class FnRemittanceAdvance
        /// </summary>
        /// <param name="active">Initial <see cref="FnRemittanceAdvance.Active" /> value</param>
        /// <param name="updBy">Initial <see cref="FnRemittanceAdvance.UpdBy" /> value</param>
        /// <param name="updDate">Initial <see cref="FnRemittanceAdvance.UpdDate" /> value</param>
        /// <param name="creBy">Initial <see cref="FnRemittanceAdvance.CreBy" /> value</param>
        /// <param name="creDate">Initial <see cref="FnRemittanceAdvance.CreDate" /> value</param>
        /// <param name="updPgm">Initial <see cref="FnRemittanceAdvance.UpdPgm" /> value</param>
        public FnRemittanceAdvance(bool active, long updBy, DateTime updDate, long creBy, DateTime creDate, string updPgm)
        {
            this.active = active;
            this.updBy = updBy;
            this.updDate = updDate;
            this.creBy = creBy;
            this.creDate = creDate;
            this.updPgm = updPgm;
        }
        #endregion

        #region Properties

        /// <summary>
        /// Gets or sets the RemittanceAdvanceID for the current FnRemittanceAdvance
        /// </summary>
        public virtual long RemittanceAdvanceID
        {
            get { return this.remittanceAdvanceID; }
            set { this.remittanceAdvanceID = value; }
        }

        /// <summary>
        /// Gets or sets the Active for the current FnRemittanceAdvance
        /// </summary>
        public virtual bool Active
        {
            get { return this.active; }
            set { this.active = value; }
        }

        /// <summary>
        /// Gets or sets the UpdBy for the current FnRemittanceAdvance
        /// </summary>
        public virtual long UpdBy
        {
            get { return this.updBy; }
            set { this.updBy = value; }
        }

        /// <summary>
        /// Gets or sets the UpdDate for the current FnRemittanceAdvance
        /// </summary>
        public virtual DateTime UpdDate
        {
            get { return this.updDate; }
            set { this.updDate = value; }
        }

        /// <summary>
        /// Gets or sets the CreBy for the current FnRemittanceAdvance
        /// </summary>
        public virtual long CreBy
        {
            get { return this.creBy; }
            set { this.creBy = value; }
        }

        /// <summary>
        /// Gets or sets the CreDate for the current FnRemittanceAdvance
        /// </summary>
        public virtual DateTime CreDate
        {
            get { return this.creDate; }
            set { this.creDate = value; }
        }

        /// <summary>
        /// Gets or sets the UpdPgm for the current FnRemittanceAdvance
        /// </summary>
        public virtual string UpdPgm
        {
            get { return this.updPgm; }
            set { this.updPgm = value; }
        }

        /// <summary>
        /// Gets or sets the RowVersion for the current FnRemittanceAdvance
        /// </summary>
        public virtual byte[] RowVersion
        {
            get { return this.rowVersion; }
            set { this.rowVersion = value; }
        }

        /// <summary>
        /// Gets or sets the Remittance for the current FnRemittanceAdvance
        /// </summary>
        public virtual SCG.eAccounting.DTO.FnRemittance Remittance
        {
            get { return this.remittance; }
            set { this.remittance = value; }
        }

        /// <summary>
        /// Gets or sets the Advance for the current FnRemittanceAdvance
        /// </summary>
        public virtual SCG.eAccounting.DTO.AvAdvanceDocument Advance
        {
            get { return this.advance; }
            set { this.advance = value; }
        }

        #endregion

        //public FnRemittanceAdvance(FnRemittanceDataset.FnRemittanceAdvanceRow remittanceAdvanceRow)
        //{
        //    this.remittanceAdvanceID = remittanceAdvanceRow.RemittanceAdvanceID;
        //    this.remittance = new FnRemittance(remittanceAdvanceRow.RemittanceID);
        //    this.advance = new AvAdvanceDocument(remittanceAdvanceRow.AdvanceID);
        //    this.Active = remittanceAdvanceRow.Active;
        //    this.CreBy = remittanceAdvanceRow.CreBy;
        //    this.CreDate = remittanceAdvanceRow.CreDate;
        //    this.UpdBy = remittanceAdvanceRow.UpdBy;
        //    this.UpdDate = remittanceAdvanceRow.UpdDate;
        //    this.UpdPgm = remittanceAdvanceRow.UpdPgm;
        //}

        #region INHibernateAdapterDTO<long> Members
        public void LoadFromDataRow(DataRow dr)
        {
            this.RemittanceAdvanceID = Convert.ToInt64(dr["RemittanceAdvanceID"]);
            this.Remittance = new FnRemittance(Convert.ToInt64( dr["RemittanceID"].ToString()));
            this.Advance = new AvAdvanceDocument(Convert.ToInt64(dr["AdvanceID"]));
            this.Active = (bool)dr["Active"];
            this.CreBy = Convert.ToInt64(dr["CreBy"].ToString());
            this.CreDate = Convert.ToDateTime(dr["CreDate"]);
            this.UpdBy = Convert.ToInt64(dr["UpdBy"].ToString());
            this.UpdDate = Convert.ToDateTime(dr["UpdDate"]);
            this.UpdPgm = dr["UpdPgm"].ToString();
        }
        public void SaveIDToDataRow(DataTable dt, DataRow dr, long newID)
        {
            long oldID = dr.Field<long>("RemittanceAdvanceID");

            dt.PrimaryKey[0].ReadOnly = false;
            dt.Rows.Find(oldID).BeginEdit();
            dt.Rows.Find(oldID)["RemittanceAdvanceID"] = newID;
            dt.Rows.Find(oldID).EndEdit();
            dt.PrimaryKey[0].ReadOnly = true;
        }
        public long GetIDFromDataRow(DataRow dr)
        {
            return Convert.ToInt64(dr["RemittanceAdvanceID"].ToString());
        }
        public long GetIDFromDataRow(DataRow dr, DataRowVersion rowState)
        {
            return Convert.ToInt64(dr["RemittanceAdvanceID", rowState].ToString());
        }
        #endregion
    }
}
