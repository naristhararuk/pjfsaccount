//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using SS.DB.DTO;
using SCG.eAccounting.DTO.DataSet;
using SS.Standard.Data.NHibernate.DTO;
using System.Data;

namespace SCG.eAccounting.DTO
{
    /// <summary>
    /// POJO for FnRemittanceItem. This class is autogenerated
    /// </summary>
    [Serializable]
    public partial class FnRemittanceItem : INHibernateAdapterDTO<long>
    {
        #region Fields

        private long remittanceItemID;
        private string paymentType;
        private double foreignCurrencyAdvanced;
        private double exchangeRate;
        private double foreignCurrencyRemitted;
        private double amountTHB;
        private bool active;
        private bool isImportFromAdvance;
        private long updBy;
        private DateTime updDate;
        private long creBy;
        private DateTime creDate;
        private string updPgm;
        private Byte[] rowVersion;
        private SCG.eAccounting.DTO.FnRemittance remittance;
        private SS.DB.DTO.DbCurrency currency;
        private double foreignAmountTHBAdvanced;
        private double mainCurrencyAmount;
        private double exchangeRateTHB;
        private double foreignAmountMainCurrencyAdvanced;
        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the FnRemittanceItem class
        /// </summary>
        public FnRemittanceItem()
        {
        }

        public FnRemittanceItem(long remittanceItemID)
        {
            this.remittanceItemID = remittanceItemID;
        }

        /// <summary>
        /// Initializes a new instance of the FnRemittanceItem class
        /// </summary>
        /// <param name="paymentType">Initial <see cref="FnRemittanceItem.PaymentType" /> value</param>
        /// <param name="foreignCurrencyAdvanced">Initial <see cref="FnRemittanceItem.ForeignCurrencyAdvanced" /> value</param>
        /// <param name="exchangeRate">Initial <see cref="FnRemittanceItem.ExchangeRate" /> value</param>
        /// <param name="foreignCurrencyRemitted">Initial <see cref="FnRemittanceItem.ForeignCurrencyRemitted" /> value</param>
        /// <param name="amountTHB">Initial <see cref="FnRemittanceItem.AmountTHB" /> value</param>
        /// <param name="active">Initial <see cref="FnRemittanceItem.Active" /> value</param>
        /// <param name="updBy">Initial <see cref="FnRemittanceItem.UpdBy" /> value</param>
        /// <param name="updDate">Initial <see cref="FnRemittanceItem.UpdDate" /> value</param>
        /// <param name="creBy">Initial <see cref="FnRemittanceItem.CreBy" /> value</param>
        /// <param name="creDate">Initial <see cref="FnRemittanceItem.CreDate" /> value</param>
        /// <param name="updPgm">Initial <see cref="FnRemittanceItem.UpdPgm" /> value</param>
        /// <param name="rowVersion">Initial <see cref="FnRemittanceItem.RowVersion" /> value</param>
        /// <param name="remittance">Initial <see cref="FnRemittanceItem.Remittance" /> value</param>
        /// <param name="currency">Initial <see cref="FnRemittanceItem.Currency" /> value</param>
        public FnRemittanceItem(string paymentType, double foreignCurrencyAdvanced, double exchangeRate, double foreignCurrencyRemitted, double amountTHB, bool active, long updBy, DateTime updDate, long creBy, DateTime creDate, string updPgm, Byte[] rowVersion, SCG.eAccounting.DTO.FnRemittance remittance, SS.DB.DTO.DbCurrency currency, double maincurrencyamount, double foreignAmountMainCurrencyAdvanced, double exchangeRateTHB)
        {
            this.paymentType = paymentType;
            this.foreignCurrencyAdvanced = foreignCurrencyAdvanced;
            this.exchangeRate = exchangeRate;
            this.foreignCurrencyRemitted = foreignCurrencyRemitted;
            this.amountTHB = amountTHB;
            this.active = active;
            this.updBy = updBy;
            this.updDate = updDate;
            this.creBy = creBy;
            this.creDate = creDate;
            this.updPgm = updPgm;
            this.rowVersion = rowVersion;
            this.remittance = remittance;
            this.currency = currency;
            this.mainCurrencyAmount = maincurrencyamount;
            this.foreignAmountMainCurrencyAdvanced = foreignAmountMainCurrencyAdvanced;
            this.exchangeRateTHB = exchangeRateTHB;
        }

        /// <summary>
        /// Minimal constructor for class FnRemittanceItem
        /// </summary>
        /// <param name="paymentType">Initial <see cref="FnRemittanceItem.PaymentType" /> value</param>
        /// <param name="active">Initial <see cref="FnRemittanceItem.Active" /> value</param>
        /// <param name="updBy">Initial <see cref="FnRemittanceItem.UpdBy" /> value</param>
        /// <param name="updDate">Initial <see cref="FnRemittanceItem.UpdDate" /> value</param>
        /// <param name="creBy">Initial <see cref="FnRemittanceItem.CreBy" /> value</param>
        /// <param name="creDate">Initial <see cref="FnRemittanceItem.CreDate" /> value</param>
        /// <param name="updPgm">Initial <see cref="FnRemittanceItem.UpdPgm" /> value</param>
        public FnRemittanceItem(string paymentType, bool active, long updBy, DateTime updDate, long creBy, DateTime creDate, string updPgm)
        {
            this.paymentType = paymentType;
            this.active = active;
            this.updBy = updBy;
            this.updDate = updDate;
            this.creBy = creBy;
            this.creDate = creDate;
            this.updPgm = updPgm;
        }
        #endregion

        #region Properties

        /// <summary>
        /// Gets or sets the RemittanceItemID for the current FnRemittanceItem
        /// </summary>
        public virtual long RemittanceItemID
        {
            get { return this.remittanceItemID; }
            set { this.remittanceItemID = value; }
        }

        /// <summary>
        /// Gets or sets the PaymentType for the current FnRemittanceItem
        /// </summary>
        public virtual string PaymentType
        {
            get { return this.paymentType; }
            set { this.paymentType = value; }
        }

        /// <summary>
        /// Gets or sets the ForeignCurrencyAdvanced for the current FnRemittanceItem
        /// </summary>
        public virtual double ForeignCurrencyAdvanced
        {
            get { return this.foreignCurrencyAdvanced; }
            set { this.foreignCurrencyAdvanced = value; }
        }

        /// <summary>
        /// Gets or sets the ExchangeRate for the current FnRemittanceItem
        /// </summary>
        public virtual double ExchangeRate
        {
            get { return this.exchangeRate; }
            set { this.exchangeRate = value; }
        }

        /// <summary>
        /// Gets or sets the ForeignCurrencyRemitted for the current FnRemittanceItem
        /// </summary>
        public virtual double ForeignCurrencyRemitted
        {
            get { return this.foreignCurrencyRemitted; }
            set { this.foreignCurrencyRemitted = value; }
        }

        /// <summary>
        /// Gets or sets the AmountTHB for the current FnRemittanceItem
        /// </summary>
        public virtual double AmountTHB
        {
            get { return this.amountTHB; }
            set { this.amountTHB = value; }
        }

        /// <summary>
        /// Gets or sets the IsImportFromAdvance for the current FnRemittanceItem
        /// </summary>
        public virtual bool IsImportFromAdvance
        {
            get { return this.isImportFromAdvance; }
            set { this.isImportFromAdvance = value; }
        }

        /// <summary>
        /// Gets or sets the Active for the current FnRemittanceItem
        /// </summary>
        public virtual bool Active
        {
            get { return this.active; }
            set { this.active = value; }
        }

        /// <summary>
        /// Gets or sets the UpdBy for the current FnRemittanceItem
        /// </summary>
        public virtual long UpdBy
        {
            get { return this.updBy; }
            set { this.updBy = value; }
        }

        /// <summary>
        /// Gets or sets the UpdDate for the current FnRemittanceItem
        /// </summary>
        public virtual DateTime UpdDate
        {
            get { return this.updDate; }
            set { this.updDate = value; }
        }

        /// <summary>
        /// Gets or sets the CreBy for the current FnRemittanceItem
        /// </summary>
        public virtual long CreBy
        {
            get { return this.creBy; }
            set { this.creBy = value; }
        }

        /// <summary>
        /// Gets or sets the CreDate for the current FnRemittanceItem
        /// </summary>
        public virtual DateTime CreDate
        {
            get { return this.creDate; }
            set { this.creDate = value; }
        }

        /// <summary>
        /// Gets or sets the UpdPgm for the current FnRemittanceItem
        /// </summary>
        public virtual string UpdPgm
        {
            get { return this.updPgm; }
            set { this.updPgm = value; }
        }

        /// <summary>
        /// Gets or sets the RowVersion for the current FnRemittanceItem
        /// </summary>
        public virtual Byte[] RowVersion
        {
            get { return this.rowVersion; }
            set { this.rowVersion = value; }
        }

        /// <summary>
        /// Gets or sets the Remittance for the current FnRemittanceItem
        /// </summary>
        public virtual SCG.eAccounting.DTO.FnRemittance Remittance
        {
            get { return this.remittance; }
            set { this.remittance = value; }
        }

        /// <summary>
        /// Gets or sets the Currency for the current FnRemittanceItem
        /// </summary>
        public virtual SS.DB.DTO.DbCurrency Currency
        {
            get { return this.currency; }
            set { this.currency = value; }
        }

        public virtual double ForeignAmountTHBAdvanced
        {
            get { return this.foreignAmountTHBAdvanced; }
            set { this.foreignAmountTHBAdvanced = value; }
        }

        public virtual double MainCurrencyAmount
        {
            get { return this.mainCurrencyAmount; }
            set { this.mainCurrencyAmount = value; }
        }

        public virtual double ForeignAmountMainCurrencyAdvanced
        {
            get { return this.foreignAmountMainCurrencyAdvanced; }
            set { this.foreignAmountMainCurrencyAdvanced = value; }
        }

        public virtual double ExchangeRateTHB
        {
            get { return this.exchangeRateTHB; }
            set { this.exchangeRateTHB = value; }
        }

        #endregion

        //public FnRemittanceItem(FnRemittanceDataset.FnRemittanceItemRow remittanceItemRow)
        //{
        //    this.remittanceItemID = remittanceItemRow.RemittanceID;
        //    this.remittance = new FnRemittance(remittanceItemRow.RemittanceID);
        //    this.currency = new DbCurrency(remittanceItemRow.CurrencyID);
        //    this.paymentType = remittanceItemRow.PaymentType;
        //    this.foreignCurrencyAdvanced = remittanceItemRow.ForeignCurrencyAdvanced;
        //    this.exchangeRate = remittanceItemRow.ExchangeRate;
        //    this.foreignCurrencyRemitted = remittanceItemRow.ForeignCurrencyRemitted;
        //    this.amountTHB = remittanceItemRow.AmountTHB;
        //    this.Active = remittanceItemRow.Active;
        //    this.CreBy = remittanceItemRow.CreBy;
        //    this.CreDate = remittanceItemRow.CreDate;
        //    this.UpdBy = remittanceItemRow.UpdBy;
        //    this.UpdDate = remittanceItemRow.UpdDate;
        //    this.UpdPgm = remittanceItemRow.UpdPgm;
        //}

        #region INHibernateAdapterDTO<long> Members
        public void LoadFromDataRow(DataRow dr)
        {
            this.RemittanceItemID = Convert.ToInt64(dr["RemittanceItemID"]);
            this.Remittance = new FnRemittance(Convert.ToInt64(dr["RemittanceID"].ToString()));
            this.Currency = new DbCurrency(Convert.ToInt16(dr["CurrencyID"].ToString()));
            this.PaymentType = dr["PaymentType"].ToString();
            this.ForeignCurrencyAdvanced = Convert.ToDouble(dr["ForeignCurrencyAdvanced"].ToString());
            this.ExchangeRate = Convert.ToDouble(dr["ExchangeRate"].ToString());
            this.ForeignCurrencyRemitted = Convert.ToDouble(dr["ForeignCurrencyRemitted"].ToString());
            this.AmountTHB = Convert.ToDouble(dr["AmountTHB"].ToString());
            this.IsImportFromAdvance = (bool)dr["IsImportFromAdvance"];
            this.Active = (bool)dr["Active"];
            this.CreBy = Convert.ToInt64(dr["CreBy"].ToString());
            this.CreDate = Convert.ToDateTime(dr["CreDate"]);
            this.UpdBy = Convert.ToInt64(dr["UpdBy"].ToString());
            this.UpdDate = Convert.ToDateTime(dr["UpdDate"]);
            this.UpdPgm = dr["UpdPgm"].ToString();

            if (!string.IsNullOrEmpty(dr["ForeignAmountTHBAdvanced"].ToString()))
                this.ForeignAmountTHBAdvanced = Convert.ToDouble(dr["ForeignAmountTHBAdvanced"].ToString());
            if (!string.IsNullOrEmpty(dr["MainCurrencyAmount"].ToString()))
                this.MainCurrencyAmount = Convert.ToDouble(dr["MainCurrencyAmount"].ToString());
            if (!string.IsNullOrEmpty(dr["ForeignAmountMainCurrencyAdvanced"].ToString()))
                this.ForeignAmountMainCurrencyAdvanced = Convert.ToDouble(dr["ForeignAmountMainCurrencyAdvanced"].ToString());
            if (!string.IsNullOrEmpty(dr["ExchangeRateTHB"].ToString()))
                this.ExchangeRateTHB = Convert.ToDouble(dr["ExchangeRateTHB"].ToString());
        }
        public void SaveIDToDataRow(DataTable dt, DataRow dr, long newID)
        {
            long oldID = dr.Field<long>("RemittanceItemID");

            dt.PrimaryKey[0].ReadOnly = false;
            dt.Rows.Find(oldID).BeginEdit();
            dt.Rows.Find(oldID)["RemittanceItemID"] = newID;
            dt.Rows.Find(oldID).EndEdit();
            dt.PrimaryKey[0].ReadOnly = true;
        }
        public long GetIDFromDataRow(DataRow dr)
        {
            return Convert.ToInt64(dr["RemittanceItemID"].ToString());
        }
        public long GetIDFromDataRow(DataRow dr, DataRowVersion rowState)
        {
            return Convert.ToInt64(dr["RemittanceItemID", rowState].ToString());
        }
        #endregion
    }
}
