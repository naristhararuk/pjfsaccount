//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using SCG.DB.DTO;
using SS.SU.DTO;
using SS.Standard.WorkFlow.DTO;
using SCG.eAccounting.DTO.DataSet;
using SS.Standard.Data.NHibernate.DTO;
using System.Data;

namespace SCG.eAccounting.DTO
{
    /// <summary>
    /// POJO for SCGDocument. This class is autogenerated
    /// </summary>
    [Serializable]
    public partial class SCGDocument : SS.Standard.WorkFlow.DTO.Document, INHibernateAdapterDTO<long>
    {
        #region Fields

        private string subject;
        private string memo;
        private DateTime? documentDate;
        private SCG.DB.DTO.DbCompany companyID;
        private SS.SU.DTO.SuUser requesterID;
        private SS.SU.DTO.SuUser creatorID;
        private SS.SU.DTO.SuUser receiverID;
        private SS.SU.DTO.SuUser approverID;
        //private SS.Standard.WorkFlow.DTO.DocumentType documentType;
        private string postingStatus;
        private string documentNo;
        private string branchCode;
        private long? paymentMethodId;
        private DateTime? postingDate;
        private DateTime? baseLineDate;
        private string bankAccount;
        private bool isVerifyImage;
        private string referenceNo;
        private bool mark;
        private string businessArea;
        private string supplementary;
        private DateTime? approveDate;
        private DateTime? receiveDocumentDate;
        private DateTime? verifiedDate;
        private DateTime? approveVerifiedDate;
        private DateTime? paidDate;
        private DateTime? remittanceDate;
        private bool? isVerifyWithImage;
        private int totalHold;
        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the SCGDocument class
        /// </summary>
        public SCGDocument()
        {
        }
        public SCGDocument(long documentID)
        {
            DocumentID = documentID;
        }

        public SCGDocument(string subject)
        {
            this.subject = subject;
        }

        /// <summary>
        /// Initializes a new instance of the SCGDocument class
        /// </summary>
        /// <param name="subject">Initial <see cref="SCGDocument.Subject" /> value</param>
        /// <param name="memo">Initial <see cref="SCGDocument.Memo" /> value</param>
        /// <param name="companyID">Initial <see cref="SCGDocument.CompanyID" /> value</param>
        /// <param name="requesterID">Initial <see cref="SCGDocument.RequesterID" /> value</param>
        /// <param name="creatorID">Initial <see cref="SCGDocument.CreatorID" /> value</param>
        /// <param name="receiverID">Initial <see cref="SCGDocument.ReceiverID" /> value</param>
        /// <param name="approverID">Initial <see cref="SCGDocument.ApproverID" /> value</param>
        public SCGDocument(string subject, string memo, DateTime? documentDate, SCG.DB.DTO.DbCompany companyID, SS.SU.DTO.SuUser requesterID, SS.SU.DTO.SuUser creatorID, SS.SU.DTO.SuUser receiverID, SS.SU.DTO.SuUser approverID)
        {
            this.subject = subject;
            this.memo = memo;
            this.companyID = companyID;
            this.requesterID = requesterID;
            this.creatorID = creatorID;
            this.receiverID = receiverID;
            this.approverID = approverID;
            this.documentDate = documentDate;
        }

        #endregion

        #region Properties

        /// <summary>
        /// Gets or sets the Subject for the current SCGDocument
        /// </summary>
        public virtual string Subject
        {
            get { return this.subject; }
            set { this.subject = value; }
        }

        public virtual string DocumentNo
        {
            get { return this.documentNo; }
            set { this.documentNo = value; }
        }
        /// <summary>
        /// Gets or sets the Memo for the current SCGDocument
        /// </summary>
        public virtual string Memo
        {
            get { return this.memo; }
            set { this.memo = value; }
        }

        /// <summary>
        /// Gets or sets the CompanyID for the current SCGDocument
        /// </summary>
        public virtual SCG.DB.DTO.DbCompany CompanyID
        {
            get { return this.companyID; }
            set { this.companyID = value; }
        }

        /// <summary>
        /// Gets or sets the RequesterID for the current SCGDocument
        /// </summary>
        public virtual SS.SU.DTO.SuUser RequesterID
        {
            get { return this.requesterID; }
            set { this.requesterID = value; }
        }


        //public virtual SS.Standard.WorkFlow.DTO.DocumentType DocumentType
        //{
        //    get { return this.documentType; }
        //    set { this.documentType = value; }
        //}
        /// <summary>
        /// Gets or sets the DocumentDate for the current SCGDocument
        /// </summary>
        public virtual DateTime? DocumentDate
        {
            get { return this.documentDate; }
            set { this.documentDate = value; }
        }

        /// <summary>
        /// Gets or sets the CreatorID for the current SCGDocument
        /// </summary>
        public virtual SS.SU.DTO.SuUser CreatorID
        {
            get { return this.creatorID; }
            set { this.creatorID = value; }
        }

        /// <summary>
        /// Gets or sets the ReceiverID for the current SCGDocument
        /// </summary>
        public virtual SS.SU.DTO.SuUser ReceiverID
        {
            get { return this.receiverID; }
            set { this.receiverID = value; }
        }

        /// <summary>
        /// Gets or sets the ApproverID for the current SCGDocument
        /// </summary>
        public virtual SS.SU.DTO.SuUser ApproverID
        {
            get { return this.approverID; }
            set { this.approverID = value; }
        }

        /// <summary>
        /// Gets or sets the PostingStatus for the current SCGDocument
        /// </summary>
        public virtual string PostingStatus
        {
            get { return this.postingStatus; }
            set { this.postingStatus = value; }
        }
        /// <summary>
        /// Gets or sets the BranchCode for the current SCGDocument
        /// </summary>
        public virtual string BranchCode
        {
            get { return this.branchCode; }
            set { this.branchCode = value; }
        }
        /// <summary>
        /// Gets or sets the PaymentMethodID for the current SCGDocument
        /// </summary>
        public virtual long? PaymentMethodID
        {
            get { return this.paymentMethodId; }
            set { this.paymentMethodId = value; }
        }
        /// <summary>
        /// Gets or sets the PostingDate for the current SCGDocument
        /// </summary>
        public virtual DateTime? PostingDate
        {
            get { return this.postingDate; }
            set { this.postingDate = value; }
        }
        /// <summary>
        /// Gets or sets the BaseLineDate for the current SCGDocument
        /// </summary>
        public virtual DateTime? BaseLineDate
        {
            get { return this.baseLineDate; }
            set { this.baseLineDate = value; }
        }
        /// <summary>
        /// Gets or sets the BankAccount for the current SCGDocument
        /// </summary>
        public virtual string BankAccount
        {
            get { return this.bankAccount; }
            set { this.bankAccount = value; }
        }

        /// <summary>
        /// Gets or sets the IsVerifyImage for the current SCGDocument
        /// </summary>
        public virtual bool IsVerifyImage
        {
            get { return this.isVerifyImage; }
            set { this.isVerifyImage = value; }
        }
        /// <summary>
        /// Gets or sets the ReferenceNo for the current SCGDocument
        /// </summary>
        public virtual string ReferenceNo
        {
            get { return this.referenceNo; }
            set { this.referenceNo = value; }
        }
        public virtual bool Mark
        {
            get { return this.mark; }
            set { this.mark = value; }
        }
        public virtual string BusinessArea
        {
            get { return this.businessArea; }
            set { this.businessArea = value; }
        }
        public virtual string Supplementary
        {
            get { return this.supplementary; }
            set { this.supplementary = value; }
        }
        public virtual DateTime? ApproveDate
        {
            get { return this.approveDate; }
            set { this.approveDate = value; }
        }



        public virtual DateTime? ReceiveDocumentDate
        {
            get { return this.receiveDocumentDate; }
            set { this.receiveDocumentDate = value; }
        }

        public virtual DateTime? VerifiedDate
        {
            get { return this.verifiedDate; }
            set { this.verifiedDate = value; }
        }

        public virtual DateTime? ApproveVerifiedDate
        {
            get { return this.approveVerifiedDate; }
            set { this.approveVerifiedDate = value; }
        }

        public virtual DateTime? PaidDate
        {
            get { return this.paidDate; }
            set { this.paidDate = value; }
        }

        public virtual DateTime? RemittanceDate
        {
            get { return this.remittanceDate; }
            set { this.remittanceDate = value; }
        }

        public virtual bool? IsVerifyWithImage
        {
            get { return this.isVerifyWithImage; }
            set { this.isVerifyWithImage = value; }
        }

        public virtual int TotalHold
        {
            get { return this.totalHold; }
            set { this.totalHold = value; }
        }
        
        #endregion

        #region INHibernateAdapterDTO<long> Members
        public void LoadFromDataRow(DataRow dr)
        {
            this.DocumentID = Convert.ToInt64(dr["DocumentID"]);
            this.CompanyID = new DbCompany(Convert.ToInt64(dr["CompanyID"]));
            this.RequesterID = new SuUser(Convert.ToInt64(dr["RequesterID"]));
            this.CreatorID = new SuUser(Convert.ToInt64(dr["CreatorID"].ToString()));
            if ((dr["ReceiverID"] != DBNull.Value) && (Convert.ToInt64(dr["ReceiverID"]) > 0))
                this.ReceiverID = new SuUser(Convert.ToInt64(dr["ReceiverID"].ToString()));

            if (dr["DocumentNo"] != DBNull.Value || (!string.IsNullOrEmpty(dr["DocumentNo"].ToString())))
                this.DocumentNo = dr["DocumentNo"].ToString();

            if ((dr["DocumentTypeID"] != DBNull.Value) && (Convert.ToInt32(dr["DocumentTypeID"]) > 0))
                this.DocumentType = new SS.Standard.WorkFlow.DTO.DocumentType(Convert.ToInt32(dr["DocumentTypeID"]));

            if ((dr["ApproverID"] != null) && (Convert.ToInt64(dr["ApproverID"]) > 0))
                this.ApproverID = new SuUser(Convert.ToInt64(dr["ApproverID"]));

            this.Subject = dr["Subject"].ToString();
            this.Memo = dr["Memo"].ToString();
            this.BranchCode = dr["BranchCode"].ToString();

            if ((dr["PaymentMethodID"] != DBNull.Value) && (Convert.ToInt64(dr["PaymentMethodID"]) > 0))
                this.PaymentMethodID = Convert.ToInt64(dr["PaymentMethodID"].ToString());

            if ((dr["PostingDate"] != DBNull.Value) && (Convert.ToDateTime(dr["PostingDate"]) != DateTime.MinValue))
                this.PostingDate = Convert.ToDateTime(dr["PostingDate"]);

            if ((dr["BaseLineDate"] != DBNull.Value) && (Convert.ToDateTime(dr["BaseLineDate"]) != DateTime.MinValue))
                this.BaseLineDate = Convert.ToDateTime(dr["BaseLineDate"]);

            this.BankAccount = dr["BankAccount"].ToString();
            this.IsVerifyImage = (bool)dr["IsVerifyImage"];
            this.Active = (bool)dr["Active"];
            this.CreBy = Convert.ToInt64(dr["CreBy"].ToString());
            this.CreDate = Convert.ToDateTime(dr["CreDate"]);
            this.UpdBy = Convert.ToInt64(dr["UpdBy"].ToString());
            this.UpdDate = Convert.ToDateTime(dr["UpdDate"]);
            this.UpdPgm = dr["UpdPgm"].ToString();
            this.Supplementary = dr["Supplementary"].ToString();
            this.BusinessArea = dr["BusinessArea"].ToString();
            
            if (dr["ReferenceNo"] != DBNull.Value || (!string.IsNullOrEmpty(dr["ReferenceNo"].ToString())))
                this.ReferenceNo = dr["ReferenceNo"].ToString();

            if (dr["DocumentDate"] != DBNull.Value && !Convert.ToDateTime(dr["DocumentDate"]).Equals(DateTime.MinValue))
            {
                this.DocumentDate = Convert.ToDateTime(dr["DocumentDate"].ToString());
            }
            else
            {
                this.DocumentDate = null;
            }
            if (dr["ApproveDate"] != DBNull.Value && !Convert.ToDateTime(dr["ApproveDate"]).Equals(DateTime.MinValue))
            {
                this.ApproveDate = Convert.ToDateTime(dr["ApproveDate"].ToString());
            }
            else
            {
                this.ApproveDate = null;
            }
        }

        public void SaveIDToDataRow(DataTable dt, DataRow dr, long newID)
        {
            long oldID = dr.Field<long>("DocumentID");

            dt.PrimaryKey[0].ReadOnly = false;
            dt.Rows.Find(oldID).BeginEdit();
            dt.Rows.Find(oldID)["DocumentID"] = newID;
            dt.Rows.Find(oldID).EndEdit();
            dt.PrimaryKey[0].ReadOnly = true;
        }
        public long GetIDFromDataRow(DataRow dr)
        {
            return Convert.ToInt64(dr["DocumentID"].ToString());
        }
        public long GetIDFromDataRow(DataRow dr, DataRowVersion rowState)
        {
            return Convert.ToInt64(dr["DocumentID", rowState].ToString());
        }
        #endregion
    }
}
