
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 2/4/2552
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Middleware.Connector;
//using SAP.Connector;

namespace SCG.eAccounting.SAP.BAPI
{

    /// <summary>
    /// Currency Items
    /// </summary>
    //[RfcStructure(AbapName ="BAPIACCR09" , Length = 90, Length2 = 110)]
    [Serializable]
    public class BAPIACCR09 //: SAPStructure
    {


        /// <summary>
        /// Accounting Document Line Item Number
        /// </summary>

        //[RfcField(AbapName = "ITEMNO_ACC", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 10, Length2 = 20, Offset = 0, Offset2 = 0)]
        //[XmlElement("ITEMNO_ACC", Form=XmlSchemaForm.Unqualified)]
        public string Itemno_Acc
        {
            get
            {
                return _Itemno_Acc;
            }
            set
            {
                _Itemno_Acc = value;
            }
        }
        private string _Itemno_Acc;


        /// <summary>
        /// Currency Type And Valuation View
        /// </summary>

        //[RfcField(AbapName = "CURR_TYPE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 2, Length2 = 4, Offset = 10, Offset2 = 20)]
        //[XmlElement("CURR_TYPE", Form=XmlSchemaForm.Unqualified)]
        public string Curr_Type
        {
            get
            {
                return _Curr_Type;
            }
            set
            {
                _Curr_Type = value;
            }
        }
        private string _Curr_Type;


        /// <summary>
        /// Currency Key
        /// </summary>

        //[RfcField(AbapName = "CURRENCY", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 5, Length2 = 10, Offset = 12, Offset2 = 24)]
        //[XmlElement("CURRENCY", Form=XmlSchemaForm.Unqualified)]
        public string Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                _Currency = value;
            }
        }
        private string _Currency;


        /// <summary>
        /// ISO code currency
        /// </summary>

        //[RfcField(AbapName = "CURRENCY_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 17, Offset2 = 34)]
        //[XmlElement("CURRENCY_ISO", Form=XmlSchemaForm.Unqualified)]
        public string Currency_Iso
        {
            get
            {
                return _Currency_Iso;
            }
            set
            {
                _Currency_Iso = value;
            }
        }
        private string _Currency_Iso;


        /// <summary>
        /// Amount in document currency
        /// </summary>

        //[RfcField(AbapName = "AMT_DOCCUR", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 12, Length2 = 12, Decimals = 4, Offset = 20, Offset2 = 40)]
        //[XmlElement("AMT_DOCCUR", Form=XmlSchemaForm.Unqualified)]
        public Decimal Amt_Doccur
        {
            get
            {
                return _Amt_Doccur;
            }
            set
            {
                _Amt_Doccur = value;
            }
        }
        private Decimal _Amt_Doccur;


        /// <summary>
        /// Exchange rate
        /// </summary>

        //[RfcField(AbapName = "EXCH_RATE", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 5, Length2 = 5, Decimals = 5, Offset = 32, Offset2 = 52)]
        //[XmlElement("EXCH_RATE", Form=XmlSchemaForm.Unqualified)]
        public Decimal Exch_Rate
        {
            get
            {
                return _Exch_Rate;
            }
            set
            {
                _Exch_Rate = value;
            }
        }
        private Decimal _Exch_Rate;


        /// <summary>
        /// Indirect quoted exchange rate
        /// </summary>

        //[RfcField(AbapName = "EXCH_RATE_V", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 5, Length2 = 5, Decimals = 5, Offset = 37, Offset2 = 57)]
        //[XmlElement("EXCH_RATE_V", Form=XmlSchemaForm.Unqualified)]
        public Decimal Exch_Rate_V
        {
            get
            {
                return _Exch_Rate_V;
            }
            set
            {
                _Exch_Rate_V = value;
            }
        }
        private Decimal _Exch_Rate_V;


        /// <summary>
        /// Tax Base Amount in Document Currency
        /// </summary>

        //[RfcField(AbapName = "AMT_BASE", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 12, Length2 = 12, Decimals = 4, Offset = 42, Offset2 = 62)]
        //[XmlElement("AMT_BASE", Form=XmlSchemaForm.Unqualified)]
        public Decimal Amt_Base
        {
            get
            {
                return _Amt_Base;
            }
            set
            {
                _Amt_Base = value;
            }
        }
        private Decimal _Amt_Base;


        /// <summary>
        /// Amount eligible for cash discount in document currency
        /// </summary>

        //[RfcField(AbapName = "DISC_BASE", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 12, Length2 = 12, Decimals = 4, Offset = 54, Offset2 = 74)]
        //[XmlElement("DISC_BASE", Form=XmlSchemaForm.Unqualified)]
        public Decimal Disc_Base
        {
            get
            {
                return _Disc_Base;
            }
            set
            {
                _Disc_Base = value;
            }
        }
        private Decimal _Disc_Base;


        /// <summary>
        /// Cash discount amount in the currency of the currency types
        /// </summary>

        //[RfcField(AbapName = "DISC_AMT", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 12, Length2 = 12, Decimals = 4, Offset = 66, Offset2 = 86)]
        //[XmlElement("DISC_AMT", Form=XmlSchemaForm.Unqualified)]
        public Decimal Disc_Amt
        {
            get
            {
                return _Disc_Amt;
            }
            set
            {
                _Disc_Amt = value;
            }
        }
        private Decimal _Disc_Amt;


        /// <summary>
        /// Amount in document currency
        /// </summary>

        //[RfcField(AbapName = "TAX_AMT", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 12, Length2 = 12, Decimals = 4, Offset = 78, Offset2 = 98)]
        //[XmlElement("TAX_AMT", Form=XmlSchemaForm.Unqualified)]
        public Decimal Tax_Amt
        {
            get
            {
                return _Tax_Amt;
            }
            set
            {
                _Tax_Amt = value;
            }
        }
        private Decimal _Tax_Amt;

        public void SetValue(IRfcStructure structure)
        {
            this.Itemno_Acc = structure.GetInt("ITEMNO_ACC").ToString();
            this.Curr_Type = structure.GetString("CURR_TYPE");
            this.Currency = structure.GetString("CURRENCY");
            this.Currency_Iso = structure.GetString("CURRENCY_ISO");
            this.Amt_Doccur = structure.GetDecimal("AMT_DOCCUR");
            this.Exch_Rate = structure.GetDecimal("EXCH_RATE");
            this.Exch_Rate_V = structure.GetDecimal("EXCH_RATE_V");
            this.Amt_Base = structure.GetDecimal("AMT_BASE");
            this.Disc_Base = structure.GetDecimal("DISC_BASE");
            this.Disc_Amt = structure.GetDecimal("DISC_AMT");
            this.Tax_Amt = structure.GetDecimal("TAX_AMT");
        }

        public IRfcStructure GetStructure(RfcRepository repository)
        {
            IRfcStructure structure = repository.GetStructureMetadata("BAPIACCR09").CreateStructure();

            structure.SetValue("ITEMNO_ACC", this.Itemno_Acc);
            structure.SetValue("CURR_TYPE", this.Curr_Type);
            structure.SetValue("CURRENCY", this.Currency);
            structure.SetValue("CURRENCY_ISO", this.Currency_Iso);
            structure.SetValue("AMT_DOCCUR", Math.Round(this.Amt_Doccur, 4, MidpointRounding.AwayFromZero));
            structure.SetValue("EXCH_RATE", Math.Round(this.Exch_Rate, 5, MidpointRounding.AwayFromZero));
            structure.SetValue("EXCH_RATE_V", Math.Round(this.Exch_Rate_V, 5, MidpointRounding.AwayFromZero));
            structure.SetValue("AMT_BASE", Math.Round(this.Amt_Base, 4, MidpointRounding.AwayFromZero));
            structure.SetValue("DISC_BASE", Math.Round(this.Disc_Base, 4, MidpointRounding.AwayFromZero));
            structure.SetValue("DISC_AMT", Math.Round(this.Disc_Amt, 4, MidpointRounding.AwayFromZero));
            structure.SetValue("TAX_AMT", Math.Round(this.Tax_Amt, 4, MidpointRounding.AwayFromZero));

            return structure;
        }
    }

}
