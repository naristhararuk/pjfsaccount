
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 2/4/2552
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Middleware.Connector;
//using SAP.Connector;

namespace SCG.eAccounting.SAP.BAPI
{

    /// <summary>
    /// Payment Card Information
    /// </summary>
    //[RfcStructure(AbapName ="BAPIACPC09" , Length = 212, Length2 = 412)]
    [Serializable]
    public class BAPIACPC09 //: SAPStructure
    {


        /// <summary>
        /// Accounting Document Line Item Number
        /// </summary>

        //[RfcField(AbapName = "ITEMNO_ACC", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 10, Length2 = 20, Offset = 0, Offset2 = 0)]
        //[XmlElement("ITEMNO_ACC", Form=XmlSchemaForm.Unqualified)]
        public string Itemno_Acc
        {
            get
            {
                return _Itemno_Acc;
            }
            set
            {
                _Itemno_Acc = value;
            }
        }
        private string _Itemno_Acc;


        /// <summary>
        /// G/L Account Number for Payment Card Receivables
        /// </summary>

        //[RfcField(AbapName = "CC_GLACCOUNT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 10, Offset2 = 20)]
        //[XmlElement("CC_GLACCOUNT", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Glaccount
        {
            get
            {
                return _Cc_Glaccount;
            }
            set
            {
                _Cc_Glaccount = value;
            }
        }
        private string _Cc_Glaccount;


        /// <summary>
        /// Payment cards: Card type
        /// </summary>

        //[RfcField(AbapName = "CC_TYPE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 20, Offset2 = 40)]
        //[XmlElement("CC_TYPE", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Type
        {
            get
            {
                return _Cc_Type;
            }
            set
            {
                _Cc_Type = value;
            }
        }
        private string _Cc_Type;


        /// <summary>
        /// Payment cards: Card number
        /// </summary>

        //[RfcField(AbapName = "CC_NUMBER", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 25, Length2 = 50, Offset = 24, Offset2 = 48)]
        //[XmlElement("CC_NUMBER", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Number
        {
            get
            {
                return _Cc_Number;
            }
            set
            {
                _Cc_Number = value;
            }
        }
        private string _Cc_Number;


        /// <summary>
        /// Payment cards: Payment card suffix
        /// </summary>

        //[RfcField(AbapName = "CC_SEQ_NO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 49, Offset2 = 98)]
        //[XmlElement("CC_SEQ_NO", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Seq_No
        {
            get
            {
                return _Cc_Seq_No;
            }
            set
            {
                _Cc_Seq_No = value;
            }
        }
        private string _Cc_Seq_No;


        /// <summary>
        /// Payment cards: Valid from
        /// </summary>

        //[RfcField(AbapName = "CC_VALID_F", RfcType = RFCTYPE.RFCTYPE_DATE, Length = 8, Length2 = 16, Offset = 59, Offset2 = 118)]
        //[XmlElement("CC_VALID_F", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Valid_F
        {
            get
            {
                return _Cc_Valid_F;
            }
            set
            {
                _Cc_Valid_F = value;
            }
        }
        private string _Cc_Valid_F;


        /// <summary>
        /// Payment Cards: Valid To
        /// </summary>

        //[RfcField(AbapName = "CC_VALID_T", RfcType = RFCTYPE.RFCTYPE_DATE, Length = 8, Length2 = 16, Offset = 67, Offset2 = 134)]
        //[XmlElement("CC_VALID_T", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Valid_T
        {
            get
            {
                return _Cc_Valid_T;
            }
            set
            {
                _Cc_Valid_T = value;
            }
        }
        private string _Cc_Valid_T;


        /// <summary>
        /// Payment cards: Name of cardholder
        /// </summary>

        //[RfcField(AbapName = "CC_NAME", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 40, Length2 = 80, Offset = 75, Offset2 = 150)]
        //[XmlElement("CC_NAME", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Name
        {
            get
            {
                return _Cc_Name;
            }
            set
            {
                _Cc_Name = value;
            }
        }
        private string _Cc_Name;


        /// <summary>
        /// Payment cards: Entry mode
        /// </summary>

        //[RfcField(AbapName = "DATAORIGIN", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 115, Offset2 = 230)]
        //[XmlElement("DATAORIGIN", Form=XmlSchemaForm.Unqualified)]
        public string Dataorigin
        {
            get
            {
                return _Dataorigin;
            }
            set
            {
                _Dataorigin = value;
            }
        }
        private string _Dataorigin;


        /// <summary>
        /// Payment Cards: Authorized Amount
        /// </summary>

        //[RfcField(AbapName = "AUTHAMOUNT", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 12, Length2 = 12, Decimals = 4, Offset = 116, Offset2 = 232)]
        //[XmlElement("AUTHAMOUNT", Form=XmlSchemaForm.Unqualified)]
        public Decimal Authamount
        {
            get
            {
                return _Authamount;
            }
            set
            {
                _Authamount = value;
            }
        }
        private Decimal _Authamount;


        /// <summary>
        /// Currency Key
        /// </summary>

        //[RfcField(AbapName = "CURRENCY", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 5, Length2 = 10, Offset = 128, Offset2 = 244)]
        //[XmlElement("CURRENCY", Form=XmlSchemaForm.Unqualified)]
        public string Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                _Currency = value;
            }
        }
        private string _Currency;


        /// <summary>
        /// ISO code currency
        /// </summary>

        //[RfcField(AbapName = "CURRENCY_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 133, Offset2 = 254)]
        //[XmlElement("CURRENCY_ISO", Form=XmlSchemaForm.Unqualified)]
        public string Currency_Iso
        {
            get
            {
                return _Currency_Iso;
            }
            set
            {
                _Currency_Iso = value;
            }
        }
        private string _Currency_Iso;


        /// <summary>
        /// Payment cards: Authorization number
        /// </summary>

        //[RfcField(AbapName = "CC_AUTTH_NO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 136, Offset2 = 260)]
        //[XmlElement("CC_AUTTH_NO", Form=XmlSchemaForm.Unqualified)]
        public string Cc_Autth_No
        {
            get
            {
                return _Cc_Autth_No;
            }
            set
            {
                _Cc_Autth_No = value;
            }
        }
        private string _Cc_Autth_No;


        /// <summary>
        /// Payment cards: Authoriz. reference code of clearing house
        /// </summary>

        //[RfcField(AbapName = "AUTH_REFNO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 15, Length2 = 30, Offset = 146, Offset2 = 280)]
        //[XmlElement("AUTH_REFNO", Form=XmlSchemaForm.Unqualified)]
        public string Auth_Refno
        {
            get
            {
                return _Auth_Refno;
            }
            set
            {
                _Auth_Refno = value;
            }
        }
        private string _Auth_Refno;


        /// <summary>
        /// Payment cards: Authorization date
        /// </summary>

        //[RfcField(AbapName = "AUTH_DATE", RfcType = RFCTYPE.RFCTYPE_DATE, Length = 8, Length2 = 16, Offset = 161, Offset2 = 310)]
        //[XmlElement("AUTH_DATE", Form=XmlSchemaForm.Unqualified)]
        public string Auth_Date
        {
            get
            {
                return _Auth_Date;
            }
            set
            {
                _Auth_Date = value;
            }
        }
        private string _Auth_Date;


        /// <summary>
        /// Payment cards: Authorization time
        /// </summary>

        //[RfcField(AbapName = "AUTH_TIME", RfcType = RFCTYPE.RFCTYPE_TIME, Length = 6, Length2 = 12, Offset = 169, Offset2 = 326)]
        //[XmlElement("AUTH_TIME", Form=XmlSchemaForm.Unqualified)]
        public string Auth_Time
        {
            get
            {
                return _Auth_Time;
            }
            set
            {
                _Auth_Time = value;
            }
        }
        private string _Auth_Time;


        /// <summary>
        /// Payment cards: Merchant ID at the clearing house
        /// </summary>

        //[RfcField(AbapName = "MERCHIDCL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 15, Length2 = 30, Offset = 175, Offset2 = 338)]
        //[XmlElement("MERCHIDCL", Form=XmlSchemaForm.Unqualified)]
        public string Merchidcl
        {
            get
            {
                return _Merchidcl;
            }
            set
            {
                _Merchidcl = value;
            }
        }
        private string _Merchidcl;


        /// <summary>
        /// Payment cards: Point of receipt for the transaction
        /// </summary>

        //[RfcField(AbapName = "POINT_OF_RECEIPT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 190, Offset2 = 368)]
        //[XmlElement("POINT_OF_RECEIPT", Form=XmlSchemaForm.Unqualified)]
        public string Point_Of_Receipt
        {
            get
            {
                return _Point_Of_Receipt;
            }
            set
            {
                _Point_Of_Receipt = value;
            }
        }
        private string _Point_Of_Receipt;


        /// <summary>
        /// Payment cards: Terminal
        /// </summary>

        //[RfcField(AbapName = "TERMINAL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 200, Offset2 = 388)]
        //[XmlElement("TERMINAL", Form=XmlSchemaForm.Unqualified)]
        public string Terminal
        {
            get
            {
                return _Terminal;
            }
            set
            {
                _Terminal = value;
            }
        }
        private string _Terminal;


        /// <summary>
        /// Payment cards: Card category
        /// </summary>

        //[RfcField(AbapName = "CCTYP", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 2, Length2 = 4, Offset = 210, Offset2 = 408)]
        //[XmlElement("CCTYP", Form=XmlSchemaForm.Unqualified)]
        public string Cctyp
        {
            get
            {
                return _Cctyp;
            }
            set
            {
                _Cctyp = value;
            }
        }
        private string _Cctyp;

        public void SetValue(IRfcStructure structure)
        {
            this.Itemno_Acc = structure.GetInt("ITEMNO_ACC").ToString();
            this.Cc_Glaccount = structure.GetString("CC_GLACCOUNT");
            this.Cc_Type = structure.GetString("CC_TYPE");
            this.Cc_Number = structure.GetString("CC_NUMBER");
            this.Cc_Seq_No = structure.GetString("CC_SEQ_NO");
            this.Cc_Valid_F = structure.GetString("CC_VALID_F");
            this.Cc_Valid_T = structure.GetString("CC_VALID_T");
            this.Cc_Name = structure.GetString("CC_NAME");
            this.Dataorigin = structure.GetString("DATAORIGIN");
            this.Authamount = structure.GetDecimal("AUTHAMOUNT");
            this.Currency = structure.GetString("CURRENCY");
            this.Currency_Iso = structure.GetString("CURRENCY_ISO");
            this.Cc_Autth_No = structure.GetString("CC_AUTTH_NO");
            this.Auth_Refno = structure.GetString("AUTH_REFNO");
            this.Auth_Date = structure.GetString("AUTH_DATE");
            this.Auth_Time = structure.GetString("AUTH_TIME");
            this.Merchidcl = structure.GetString("MERCHIDCL");
            this.Point_Of_Receipt = structure.GetString("POINT_OF_RECEIPT");
            this.Terminal = structure.GetString("TERMINAL");
            this.Cctyp = structure.GetString("CCTYP");
        }

        public IRfcStructure GetStructure(RfcRepository repository)
        {
            IRfcStructure structure = repository.GetStructureMetadata("BAPIACPC09").CreateStructure();

            structure.SetValue("ITEMNO_ACC", this.Itemno_Acc);
            structure.SetValue("CC_GLACCOUNT", this.Cc_Glaccount);
            structure.SetValue("CC_TYPE", this.Cc_Type);
            structure.SetValue("CC_NUMBER", this.Cc_Number);
            structure.SetValue("CC_SEQ_NO", this.Cc_Seq_No);
            structure.SetValue("CC_VALID_F", this.Cc_Valid_F);
            structure.SetValue("CC_VALID_T", this.Cc_Valid_T);
            structure.SetValue("CC_NAME", this.Cc_Name);
            structure.SetValue("DATAORIGIN", this.Dataorigin);
            structure.SetValue("AUTHAMOUNT", Math.Round(this.Authamount, 4, MidpointRounding.AwayFromZero));
            structure.SetValue("CURRENCY", this.Currency);
            structure.SetValue("CURRENCY_ISO", this.Currency_Iso);
            structure.SetValue("CC_AUTTH_NO", this.Cc_Autth_No);
            structure.SetValue("AUTH_REFNO", this.Auth_Refno);
            structure.SetValue("AUTH_DATE", this.Auth_Date);
            structure.SetValue("AUTH_TIME", this.Auth_Time);
            structure.SetValue("MERCHIDCL", this.Merchidcl);
            structure.SetValue("POINT_OF_RECEIPT", this.Point_Of_Receipt);
            structure.SetValue("TERMINAL", this.Terminal);
            structure.SetValue("CCTYP", this.Cctyp);

            return structure;
        }
    }

}
