
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 2/4/2552
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Middleware.Connector;
//using SAP.Connector;

namespace SCG.eAccounting.SAP.BAPI
{

    /// <summary>
    /// Tax Rate and Tax Amount for a Tax Code
    /// </summary>
    //[RfcStructure(AbapName ="RTAX1U15" , Length = 83, Length2 = 142)]
    [Serializable]
    public class RTAX1U15 //: SAPStructure
    {


        /// <summary>
        /// Tax amount in document currency
        /// </summary>

        //[RfcField(AbapName = "WMWST", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 2, Offset = 0, Offset2 = 0)]
        //[XmlElement("WMWST", Form=XmlSchemaForm.Unqualified)]
        public Decimal Wmwst
        {
            get
            {
                return _Wmwst;
            }
            set
            {
                _Wmwst = value;
            }
        }
        private Decimal _Wmwst;


        /// <summary>
        /// Tax rate
        /// </summary>

        //[RfcField(AbapName = "MSATZ", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 4, Length2 = 4, Decimals = 3, Offset = 7, Offset2 = 7)]
        //[XmlElement("MSATZ", Form=XmlSchemaForm.Unqualified)]
        public Decimal Msatz
        {
            get
            {
                return _Msatz;
            }
            set
            {
                _Msatz = value;
            }
        }
        private Decimal _Msatz;


        /// <summary>
        /// Transaction Key
        /// </summary>

        //[RfcField(AbapName = "KTOSL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 11, Offset2 = 12)]
        //[XmlElement("KTOSL", Form=XmlSchemaForm.Unqualified)]
        public string Ktosl
        {
            get
            {
                return _Ktosl;
            }
            set
            {
                _Ktosl = value;
            }
        }
        private string _Ktosl;


        /// <summary>
        /// Jurisdiction for Tax Calculation - Tax Jurisdiction Code
        /// </summary>

        //[RfcField(AbapName = "TXJCD", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 15, Length2 = 30, Offset = 14, Offset2 = 18)]
        //[XmlElement("TXJCD", Form=XmlSchemaForm.Unqualified)]
        public string Txjcd
        {
            get
            {
                return _Txjcd;
            }
            set
            {
                _Txjcd = value;
            }
        }
        private string _Txjcd;


        /// <summary>
        /// Condition record number
        /// </summary>

        //[RfcField(AbapName = "KNUMH", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 29, Offset2 = 48)]
        //[XmlElement("KNUMH", Form=XmlSchemaForm.Unqualified)]
        public string Knumh
        {
            get
            {
                return _Knumh;
            }
            set
            {
                _Knumh = value;
            }
        }
        private string _Knumh;


        /// <summary>
        /// Rate (condition amount or percentage) where no scale exists
        /// </summary>

        //[RfcField(AbapName = "KBETR", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 6, Length2 = 6, Decimals = 2, Offset = 39, Offset2 = 68)]
        //[XmlElement("KBETR", Form=XmlSchemaForm.Unqualified)]
        public Decimal Kbetr
        {
            get
            {
                return _Kbetr;
            }
            set
            {
                _Kbetr = value;
            }
        }
        private Decimal _Kbetr;


        /// <summary>
        /// Condition base value
        /// </summary>

        //[RfcField(AbapName = "KAWRT", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 8, Length2 = 8, Decimals = 2, Offset = 45, Offset2 = 74)]
        //[XmlElement("KAWRT", Form=XmlSchemaForm.Unqualified)]
        public Decimal Kawrt
        {
            get
            {
                return _Kawrt;
            }
            set
            {
                _Kawrt = value;
            }
        }
        private Decimal _Kawrt;


        /// <summary>
        /// General Ledger Account
        /// </summary>

        //[RfcField(AbapName = "HKONT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 53, Offset2 = 82)]
        //[XmlElement("HKONT", Form=XmlSchemaForm.Unqualified)]
        public string Hkont
        {
            get
            {
                return _Hkont;
            }
            set
            {
                _Hkont = value;
            }
        }
        private string _Hkont;


        /// <summary>
        /// Condition type
        /// </summary>

        //[RfcField(AbapName = "KSCHL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 63, Offset2 = 102)]
        //[XmlElement("KSCHL", Form=XmlSchemaForm.Unqualified)]
        public string Kschl
        {
            get
            {
                return _Kschl;
            }
            set
            {
                _Kschl = value;
            }
        }
        private string _Kschl;


        /// <summary>
        /// Jurisdiction for Tax Calculation - Tax Jurisdiction Code
        /// </summary>

        //[RfcField(AbapName = "TXJCD_DEEP", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 15, Length2 = 30, Offset = 67, Offset2 = 110)]
        //[XmlElement("TXJCD_DEEP", Form=XmlSchemaForm.Unqualified)]
        public string Txjcd_Deep
        {
            get
            {
                return _Txjcd_Deep;
            }
            set
            {
                _Txjcd_Deep = value;
            }
        }
        private string _Txjcd_Deep;


        /// <summary>
        /// Tax jurisdiction code level
        /// </summary>

        //[RfcField(AbapName = "TXJLV", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 82, Offset2 = 140)]
        //[XmlElement("TXJLV", Form=XmlSchemaForm.Unqualified)]
        public string Txjlv
        {
            get
            {
                return _Txjlv;
            }
            set
            {
                _Txjlv = value;
            }
        }
        private string _Txjlv;

        public void SetValue(IRfcStructure structure)
        {
            this.Wmwst = structure.GetDecimal("WMWST");
            this.Msatz = structure.GetDecimal("MSATZ");
            this.Ktosl = structure.GetString("KTOSL");
            this.Txjcd = structure.GetString("TXJCD");
            this.Knumh = structure.GetString("KNUMH");
            this.Kbetr = structure.GetDecimal("KBETR");
            this.Kawrt = structure.GetDecimal("KAWRT");
            this.Hkont = structure.GetString("HKONT");
            this.Kschl = structure.GetString("KSCHL");
            this.Txjcd_Deep = structure.GetString("TXJCD_DEEP");
            this.Txjlv = structure.GetString("TXJLV");
        }

        public IRfcStructure GetStructure(RfcRepository repository)
        {
            IRfcStructure structure = repository.GetStructureMetadata("RTAX1U15").CreateStructure();

            structure.SetValue("WMWST", Math.Round(this.Wmwst, 2, MidpointRounding.AwayFromZero));
            structure.SetValue("MSATZ", Math.Round(this.Msatz, 3, MidpointRounding.AwayFromZero));
            structure.SetValue("KTOSL", this.Ktosl);
            structure.SetValue("TXJCD", this.Txjcd);
            structure.SetValue("KNUMH", this.Knumh);
            structure.SetValue("KBETR", Math.Round(this.Kbetr, 2, MidpointRounding.AwayFromZero));
            structure.SetValue("KAWRT", Math.Round(this.Kawrt, 2, MidpointRounding.AwayFromZero));
            structure.SetValue("HKONT", this.Hkont);
            structure.SetValue("KSCHL", this.Kschl);
            structure.SetValue("TXJCD_DEEP", this.Txjcd_Deep);
            structure.SetValue("TXJLV", this.Txjlv);

            return structure;
        }
    }

}
