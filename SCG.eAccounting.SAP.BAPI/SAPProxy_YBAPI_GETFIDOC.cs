
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 2/4/2552
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Middleware.Connector;
//using SAP.Connector;

namespace SCG.eAccounting.SAP.BAPI
{

    /// <summary>
    /// Client SAP proxy class
    /// </summary>
    //[WebServiceBinding(Name="dummy.Binding", Namespace="urn:sap-com:document:sap:rfc:functions")]
    [Serializable]
    public class SAPProxy_YBAPI_GETFIDOC //: SAPClient
    {
        /*
        /// <summary>
        /// Initializes a new SAPProxy_YBAPI_GETFIDOC.
        /// </summary>
        public SAPProxy_YBAPI_GETFIDOC() { }

        /// <summary>
        /// Initializes a new SAPProxy_YBAPI_GETFIDOC with a new connection based on the specified connection string.
        /// </summary>
        /// <param name="connectionString">A connection string (e.g. RFC or URL) specifying the system where the proxy should connect to.</param>
        public SAPProxy_YBAPI_GETFIDOC(string connectionString) : base(connectionString) { }

        /// <summary>
        /// Initializes a new SAPProxy_YBAPI_GETFIDOC instance and adds it to the given container.
        /// This allows automated connection mananged by VS component designer:
        /// If container is disposed, it will also dispose this SAPClient instance,
        /// which will dispose a contained connection if needed.
        /// </summary>
        /// <param name="container"<The container where the new SAPClient instance is to be added.>/param<
        public SAPProxy_YBAPI_GETFIDOC(System.ComponentModel.IContainer container) : base(container) { }

        /// <summary>
        /// Remote Function Module YBAPI_GETFIDOC.  
        /// ZDMS_GETFIDOC
        /// </summary>
        /// <param name="Companycode">Company Code</param>
        /// <param name="Docnumber">From document number</param>
        /// <param name="Fiscalyear">Fiscal Year</param>
        /// <param name="I_Bkpf">Accounting Document Header</param>
        /// <param name="I_Bseg">Accounting Document Segment</param>
        [RfcMethod(AbapName = "YBAPI_GETFIDOC")]
        [SoapDocumentMethodAttribute("http://tempuri.org/YBAPI_GETFIDOC",
         RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
         RequestElementName = "YBAPI_GETFIDOC",
         ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
         ResponseElementName = "YBAPI_GETFIDOC.Response")]
        public virtual void Ybapi_Getfidoc(

         [RfcParameter(AbapName = "COMPANYCODE", RfcType = RFCTYPE.RFCTYPE_CHAR, Optional = false, Direction = RFCINOUT.IN, Length = 4, Length2 = 8)]
     [XmlElement("COMPANYCODE", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     string Companycode,
     [RfcParameter(AbapName = "DOCNUMBER", RfcType = RFCTYPE.RFCTYPE_CHAR, Optional = false, Direction = RFCINOUT.IN, Length = 10, Length2 = 20)]
     [XmlElement("DOCNUMBER", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     string Docnumber,
     [RfcParameter(AbapName = "FISCALYEAR", RfcType = RFCTYPE.RFCTYPE_NUM, Optional = false, Direction = RFCINOUT.IN, Length = 4, Length2 = 8)]
     [XmlElement("FISCALYEAR", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     string Fiscalyear,
     [RfcParameter(AbapName = "I_BKPF", RfcType = RFCTYPE.RFCTYPE_ITAB, Optional = true, Direction = RFCINOUT.INOUT)]
     [XmlArray("I_BKPF", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     ref YGETFIDOC_HTable I_Bkpf,
     [RfcParameter(AbapName = "I_BSEG", RfcType = RFCTYPE.RFCTYPE_ITAB, Optional = true, Direction = RFCINOUT.INOUT)]
     [XmlArray("I_BSEG", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     ref YGETFIDOC_ITable I_Bseg)
        {
            object[] results = null;
            results = this.SAPInvoke("Ybapi_Getfidoc", new object[] {
                            Companycode,Docnumber,Fiscalyear,I_Bkpf,I_Bseg });
            I_Bkpf = (YGETFIDOC_HTable)results[0];
            I_Bseg = (YGETFIDOC_ITable)results[1];

        }
       */

        private RfcDestination destination;

        public SAPProxy_YBAPI_GETFIDOC() { }

        public SAPProxy_YBAPI_GETFIDOC(RfcDestination destination)
        {
            this.destination = destination;
        }

        /// <summary>
        /// Remote Function Module YBAPI_GETFIDOC.  
        /// ZDMS_GETFIDOC
        /// </summary>
        /// <param name="Companycode">Company Code</param>
        /// <param name="Docnumber">From document number</param>
        /// <param name="Fiscalyear">Fiscal Year</param>
        /// <param name="I_Bkpf">Accounting Document Header</param>
        /// <param name="I_Bseg">Accounting Document Segment</param>
        //[RfcMethod(AbapName = "YBAPI_GETFIDOC")]
        //[SoapDocumentMethodAttribute("http://tempuri.org/YBAPI_GETFIDOC",
        // RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
        // RequestElementName = "YBAPI_GETFIDOC",
        // ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
        // ResponseElementName = "YBAPI_GETFIDOC.Response")]
        public virtual void Ybapi_Getfidoc(

         //[RfcParameter(AbapName = "COMPANYCODE", RfcType = RFCTYPE.RFCTYPE_CHAR, Optional = false, Direction = RFCINOUT.IN, Length = 4, Length2 = 8)]
     //[XmlElement("COMPANYCODE", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     string Companycode,
     //[RfcParameter(AbapName = "DOCNUMBER", RfcType = RFCTYPE.RFCTYPE_CHAR, Optional = false, Direction = RFCINOUT.IN, Length = 10, Length2 = 20)]
     //[XmlElement("DOCNUMBER", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     string Docnumber,
     //[RfcParameter(AbapName = "FISCALYEAR", RfcType = RFCTYPE.RFCTYPE_NUM, Optional = false, Direction = RFCINOUT.IN, Length = 4, Length2 = 8)]
     //[XmlElement("FISCALYEAR", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     string Fiscalyear,
     //[RfcParameter(AbapName = "I_BKPF", RfcType = RFCTYPE.RFCTYPE_ITAB, Optional = true, Direction = RFCINOUT.INOUT)]
     //[XmlArray("I_BKPF", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     //[XmlArrayItem("item", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     ref YGETFIDOC_HTable I_Bkpf,
     //[RfcParameter(AbapName = "I_BSEG", RfcType = RFCTYPE.RFCTYPE_ITAB, Optional = true, Direction = RFCINOUT.INOUT)]
     //[XmlArray("I_BSEG", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     //[XmlArrayItem("item", IsNullable = false, Form = XmlSchemaForm.Unqualified)]
     ref YGETFIDOC_ITable I_Bseg)
        {
            //object[] results = null;
            //results = this.SAPInvoke("Ybapi_Getfidoc", new object[] {
            //                Companycode,Docnumber,Fiscalyear,I_Bkpf,I_Bseg });
            //I_Bkpf = (YGETFIDOC_HTable)results[0];
            //I_Bseg = (YGETFIDOC_ITable)results[1];

            IRfcFunction function = destination.Repository.CreateFunction("YBAPI_GETFIDOC");

            #region set parameter value

            function.SetValue("COMPANYCODE", Companycode);
            function.SetValue("DOCNUMBER", Docnumber);
            function.SetValue("FISCALYEAR", Fiscalyear);
            function.SetValue("I_BKPF", I_Bkpf.GetTable(destination.Repository, function.GetTable("I_BKPF")));
            function.SetValue("I_BSEG", I_Bseg.GetTable(destination.Repository, function.GetTable("I_BSEG")));

            #endregion

            function.Invoke(destination);

            //Companycode = function.GetString("COMPANYCODE");
            I_Bkpf.SetValue(function.GetTable("I_BKPF"));//(string)results[0];
            I_Bseg.SetValue(function.GetTable("I_BSEG"));//(string)results[1];
        }
    }

}
