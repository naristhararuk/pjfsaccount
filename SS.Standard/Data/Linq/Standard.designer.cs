#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SS.Standard.Data.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SSLINQDB")]
	public partial class StandardDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDB_Address(DB_Address instance);
    partial void UpdateDB_Address(DB_Address instance);
    partial void DeleteDB_Address(DB_Address instance);
    partial void InsertSuUserRole(SuUserRole instance);
    partial void UpdateSuUserRole(SuUserRole instance);
    partial void DeleteSuUserRole(SuUserRole instance);
    partial void InsertDB_City(DB_City instance);
    partial void UpdateDB_City(DB_City instance);
    partial void DeleteDB_City(DB_City instance);
    partial void InsertDB_CityLang(DB_CityLang instance);
    partial void UpdateDB_CityLang(DB_CityLang instance);
    partial void DeleteDB_CityLang(DB_CityLang instance);
    partial void InsertDB_Country(DB_Country instance);
    partial void UpdateDB_Country(DB_Country instance);
    partial void DeleteDB_Country(DB_Country instance);
    partial void InsertDB_CountryLang(DB_CountryLang instance);
    partial void UpdateDB_CountryLang(DB_CountryLang instance);
    partial void DeleteDB_CountryLang(DB_CountryLang instance);
    partial void InsertDB_District(DB_District instance);
    partial void UpdateDB_District(DB_District instance);
    partial void DeleteDB_District(DB_District instance);
    partial void InsertDB_DistrictLang(DB_DistrictLang instance);
    partial void UpdateDB_DistrictLang(DB_DistrictLang instance);
    partial void DeleteDB_DistrictLang(DB_DistrictLang instance);
    partial void InsertDB_Parameter(DB_Parameter instance);
    partial void UpdateDB_Parameter(DB_Parameter instance);
    partial void DeleteDB_Parameter(DB_Parameter instance);
    partial void InsertDB_Parameter_Group(DB_Parameter_Group instance);
    partial void UpdateDB_Parameter_Group(DB_Parameter_Group instance);
    partial void DeleteDB_Parameter_Group(DB_Parameter_Group instance);
    partial void InsertDB_Postal(DB_Postal instance);
    partial void UpdateDB_Postal(DB_Postal instance);
    partial void DeleteDB_Postal(DB_Postal instance);
    partial void InsertDB_Prefix(DB_Prefix instance);
    partial void UpdateDB_Prefix(DB_Prefix instance);
    partial void DeleteDB_Prefix(DB_Prefix instance);
    partial void InsertDB_PrefixLang(DB_PrefixLang instance);
    partial void UpdateDB_PrefixLang(DB_PrefixLang instance);
    partial void DeleteDB_PrefixLang(DB_PrefixLang instance);
    partial void InsertDB_Province(DB_Province instance);
    partial void UpdateDB_Province(DB_Province instance);
    partial void DeleteDB_Province(DB_Province instance);
    partial void InsertDB_ProvinceLang(DB_ProvinceLang instance);
    partial void UpdateDB_ProvinceLang(DB_ProvinceLang instance);
    partial void DeleteDB_ProvinceLang(DB_ProvinceLang instance);
    partial void InsertDB_Region(DB_Region instance);
    partial void UpdateDB_Region(DB_Region instance);
    partial void DeleteDB_Region(DB_Region instance);
    partial void InsertDB_RegionLang(DB_RegionLang instance);
    partial void UpdateDB_RegionLang(DB_RegionLang instance);
    partial void DeleteDB_RegionLang(DB_RegionLang instance);
    partial void InsertDB_Zone(DB_Zone instance);
    partial void UpdateDB_Zone(DB_Zone instance);
    partial void DeleteDB_Zone(DB_Zone instance);
    partial void InsertDB_ZoneLang(DB_ZoneLang instance);
    partial void UpdateDB_ZoneLang(DB_ZoneLang instance);
    partial void DeleteDB_ZoneLang(DB_ZoneLang instance);
    partial void InsertSU_AlertGroup(SU_AlertGroup instance);
    partial void UpdateSU_AlertGroup(SU_AlertGroup instance);
    partial void DeleteSU_AlertGroup(SU_AlertGroup instance);
    partial void InsertSU_AlertGroupLang(SU_AlertGroupLang instance);
    partial void UpdateSU_AlertGroupLang(SU_AlertGroupLang instance);
    partial void DeleteSU_AlertGroupLang(SU_AlertGroupLang instance);
    partial void InsertSU_AlertMessage(SU_AlertMessage instance);
    partial void UpdateSU_AlertMessage(SU_AlertMessage instance);
    partial void DeleteSU_AlertMessage(SU_AlertMessage instance);
    partial void InsertSU_AlertMessageLang(SU_AlertMessageLang instance);
    partial void UpdateSU_AlertMessageLang(SU_AlertMessageLang instance);
    partial void DeleteSU_AlertMessageLang(SU_AlertMessageLang instance);
    partial void InsertSU_Application(SU_Application instance);
    partial void UpdateSU_Application(SU_Application instance);
    partial void DeleteSU_Application(SU_Application instance);
    partial void InsertSU_Division(SU_Division instance);
    partial void UpdateSU_Division(SU_Division instance);
    partial void DeleteSU_Division(SU_Division instance);
    partial void InsertSU_DivisionLang(SU_DivisionLang instance);
    partial void UpdateSU_DivisionLang(SU_DivisionLang instance);
    partial void DeleteSU_DivisionLang(SU_DivisionLang instance);
    partial void InsertSU_EventLogGroup(SU_EventLogGroup instance);
    partial void UpdateSU_EventLogGroup(SU_EventLogGroup instance);
    partial void DeleteSU_EventLogGroup(SU_EventLogGroup instance);
    partial void InsertSU_EventLogGroupLang(SU_EventLogGroupLang instance);
    partial void UpdateSU_EventLogGroupLang(SU_EventLogGroupLang instance);
    partial void DeleteSU_EventLogGroupLang(SU_EventLogGroupLang instance);
    partial void InsertSU_Language(SU_Language instance);
    partial void UpdateSU_Language(SU_Language instance);
    partial void DeleteSU_Language(SU_Language instance);
    partial void InsertSU_Menu(SU_Menu instance);
    partial void UpdateSU_Menu(SU_Menu instance);
    partial void DeleteSU_Menu(SU_Menu instance);
    partial void InsertSU_MenuGroupLang(SU_MenuGroupLang instance);
    partial void UpdateSU_MenuGroupLang(SU_MenuGroupLang instance);
    partial void DeleteSU_MenuGroupLang(SU_MenuGroupLang instance);
    partial void InsertSU_MenuLang(SU_MenuLang instance);
    partial void UpdateSU_MenuLang(SU_MenuLang instance);
    partial void DeleteSU_MenuLang(SU_MenuLang instance);
    partial void InsertSU_MenusGroup(SU_MenusGroup instance);
    partial void UpdateSU_MenusGroup(SU_MenusGroup instance);
    partial void DeleteSU_MenusGroup(SU_MenusGroup instance);
    partial void InsertSU_Organization(SU_Organization instance);
    partial void UpdateSU_Organization(SU_Organization instance);
    partial void DeleteSU_Organization(SU_Organization instance);
    partial void InsertSU_OrganizationLang(SU_OrganizationLang instance);
    partial void UpdateSU_OrganizationLang(SU_OrganizationLang instance);
    partial void DeleteSU_OrganizationLang(SU_OrganizationLang instance);
    partial void InsertSuProgram(SuProgram instance);
    partial void UpdateSuProgram(SuProgram instance);
    partial void DeleteSuProgram(SuProgram instance);
    partial void InsertSuProgramLang(SuProgramLang instance);
    partial void UpdateSuProgramLang(SuProgramLang instance);
    partial void DeleteSuProgramLang(SuProgramLang instance);
    partial void InsertSuProgramMenu(SuProgramMenu instance);
    partial void UpdateSuProgramMenu(SuProgramMenu instance);
    partial void DeleteSuProgramMenu(SuProgramMenu instance);
    partial void InsertSuProgramRole(SuProgramRole instance);
    partial void UpdateSuProgramRole(SuProgramRole instance);
    partial void DeleteSuProgramRole(SuProgramRole instance);
    partial void InsertSuRole(SuRole instance);
    partial void UpdateSuRole(SuRole instance);
    partial void DeleteSuRole(SuRole instance);
    partial void InsertSuRoleGroup(SuRoleGroup instance);
    partial void UpdateSuRoleGroup(SuRoleGroup instance);
    partial void DeleteSuRoleGroup(SuRoleGroup instance);
    partial void InsertSuRoleGroupLang(SuRoleGroupLang instance);
    partial void UpdateSuRoleGroupLang(SuRoleGroupLang instance);
    partial void DeleteSuRoleGroupLang(SuRoleGroupLang instance);
    partial void InsertSuSession(SuSession instance);
    partial void UpdateSuSession(SuSession instance);
    partial void DeleteSuSession(SuSession instance);
    partial void InsertSuUser(SuUser instance);
    partial void UpdateSuUser(SuUser instance);
    partial void DeleteSuUser(SuUser instance);
    partial void InsertSuUserDivision(SuUserDivision instance);
    partial void UpdateSuUserDivision(SuUserDivision instance);
    partial void DeleteSuUserDivision(SuUserDivision instance);
    partial void InsertSuUserLog(SuUserLog instance);
    partial void UpdateSuUserLog(SuUserLog instance);
    partial void DeleteSuUserLog(SuUserLog instance);
    partial void InsertSuUserOrgPermission(SuUserOrgPermission instance);
    partial void UpdateSuUserOrgPermission(SuUserOrgPermission instance);
    partial void DeleteSuUserOrgPermission(SuUserOrgPermission instance);
    partial void InsertSuUserProfile(SuUserProfile instance);
    partial void UpdateSuUserProfile(SuUserProfile instance);
    partial void DeleteSuUserProfile(SuUserProfile instance);
    partial void InsertSuUserProfileLang(SuUserProfileLang instance);
    partial void UpdateSuUserProfileLang(SuUserProfileLang instance);
    partial void DeleteSuUserProfileLang(SuUserProfileLang instance);
    #endregion
		
		public StandardDataContext() : 
				base(global::SS.Standard.Properties.Settings.Default.SSLINQDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StandardDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StandardDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StandardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StandardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DB_Address> DB_Addresses
		{
			get
			{
				return this.GetTable<DB_Address>();
			}
		}
		
		public System.Data.Linq.Table<SuUserRole> SuUserRoles
		{
			get
			{
				return this.GetTable<SuUserRole>();
			}
		}
		
		public System.Data.Linq.Table<DB_City> DB_Cities
		{
			get
			{
				return this.GetTable<DB_City>();
			}
		}
		
		public System.Data.Linq.Table<DB_CityLang> DB_CityLangs
		{
			get
			{
				return this.GetTable<DB_CityLang>();
			}
		}
		
		public System.Data.Linq.Table<DB_Country> DB_Countries
		{
			get
			{
				return this.GetTable<DB_Country>();
			}
		}
		
		public System.Data.Linq.Table<DB_CountryLang> DB_CountryLangs
		{
			get
			{
				return this.GetTable<DB_CountryLang>();
			}
		}
		
		public System.Data.Linq.Table<DB_District> DB_Districts
		{
			get
			{
				return this.GetTable<DB_District>();
			}
		}
		
		public System.Data.Linq.Table<DB_DistrictLang> DB_DistrictLangs
		{
			get
			{
				return this.GetTable<DB_DistrictLang>();
			}
		}
		
		public System.Data.Linq.Table<DB_Parameter> DB_Parameters
		{
			get
			{
				return this.GetTable<DB_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<DB_Parameter_Group> DB_Parameter_Groups
		{
			get
			{
				return this.GetTable<DB_Parameter_Group>();
			}
		}
		
		public System.Data.Linq.Table<DB_Postal> DB_Postals
		{
			get
			{
				return this.GetTable<DB_Postal>();
			}
		}
		
		public System.Data.Linq.Table<DB_Prefix> DB_Prefixes
		{
			get
			{
				return this.GetTable<DB_Prefix>();
			}
		}
		
		public System.Data.Linq.Table<DB_PrefixLang> DB_PrefixLangs
		{
			get
			{
				return this.GetTable<DB_PrefixLang>();
			}
		}
		
		public System.Data.Linq.Table<DB_Province> DB_Provinces
		{
			get
			{
				return this.GetTable<DB_Province>();
			}
		}
		
		public System.Data.Linq.Table<DB_ProvinceLang> DB_ProvinceLangs
		{
			get
			{
				return this.GetTable<DB_ProvinceLang>();
			}
		}
		
		public System.Data.Linq.Table<DB_Region> DB_Regions
		{
			get
			{
				return this.GetTable<DB_Region>();
			}
		}
		
		public System.Data.Linq.Table<DB_RegionLang> DB_RegionLangs
		{
			get
			{
				return this.GetTable<DB_RegionLang>();
			}
		}
		
		public System.Data.Linq.Table<DB_Zone> DB_Zones
		{
			get
			{
				return this.GetTable<DB_Zone>();
			}
		}
		
		public System.Data.Linq.Table<DB_ZoneLang> DB_ZoneLangs
		{
			get
			{
				return this.GetTable<DB_ZoneLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_AlertGroup> SU_AlertGroups
		{
			get
			{
				return this.GetTable<SU_AlertGroup>();
			}
		}
		
		public System.Data.Linq.Table<SU_AlertGroupLang> SU_AlertGroupLangs
		{
			get
			{
				return this.GetTable<SU_AlertGroupLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_AlertMessage> SU_AlertMessages
		{
			get
			{
				return this.GetTable<SU_AlertMessage>();
			}
		}
		
		public System.Data.Linq.Table<SU_AlertMessageLang> SU_AlertMessageLangs
		{
			get
			{
				return this.GetTable<SU_AlertMessageLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_Application> SU_Applications
		{
			get
			{
				return this.GetTable<SU_Application>();
			}
		}
		
		public System.Data.Linq.Table<SU_Division> SU_Divisions
		{
			get
			{
				return this.GetTable<SU_Division>();
			}
		}
		
		public System.Data.Linq.Table<SU_DivisionLang> SU_DivisionLangs
		{
			get
			{
				return this.GetTable<SU_DivisionLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_EventLogGroup> SU_EventLogGroups
		{
			get
			{
				return this.GetTable<SU_EventLogGroup>();
			}
		}
		
		public System.Data.Linq.Table<SU_EventLogGroupLang> SU_EventLogGroupLangs
		{
			get
			{
				return this.GetTable<SU_EventLogGroupLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_Language> SU_Languages
		{
			get
			{
				return this.GetTable<SU_Language>();
			}
		}
		
		public System.Data.Linq.Table<SU_Menu> SU_Menus
		{
			get
			{
				return this.GetTable<SU_Menu>();
			}
		}
		
		public System.Data.Linq.Table<SU_MenuGroupLang> SU_MenuGroupLangs
		{
			get
			{
				return this.GetTable<SU_MenuGroupLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_MenuLang> SU_MenuLangs
		{
			get
			{
				return this.GetTable<SU_MenuLang>();
			}
		}
		
		public System.Data.Linq.Table<SU_MenusGroup> SU_MenusGroups
		{
			get
			{
				return this.GetTable<SU_MenusGroup>();
			}
		}
		
		public System.Data.Linq.Table<SU_Organization> SU_Organizations
		{
			get
			{
				return this.GetTable<SU_Organization>();
			}
		}
		
		public System.Data.Linq.Table<SU_OrganizationLang> SU_OrganizationLangs
		{
			get
			{
				return this.GetTable<SU_OrganizationLang>();
			}
		}
		
		public System.Data.Linq.Table<SuProgram> SuPrograms
		{
			get
			{
				return this.GetTable<SuProgram>();
			}
		}
		
		public System.Data.Linq.Table<SuProgramLang> SuProgramLangs
		{
			get
			{
				return this.GetTable<SuProgramLang>();
			}
		}
		
		public System.Data.Linq.Table<SuProgramMenu> SuProgramMenus
		{
			get
			{
				return this.GetTable<SuProgramMenu>();
			}
		}
		
		public System.Data.Linq.Table<SuProgramRole> SuProgramRoles
		{
			get
			{
				return this.GetTable<SuProgramRole>();
			}
		}
		
		public System.Data.Linq.Table<SuRole> SuRoles
		{
			get
			{
				return this.GetTable<SuRole>();
			}
		}
		
		public System.Data.Linq.Table<SuRoleGroup> SuRoleGroups
		{
			get
			{
				return this.GetTable<SuRoleGroup>();
			}
		}
		
		public System.Data.Linq.Table<SuRoleGroupLang> SuRoleGroupLangs
		{
			get
			{
				return this.GetTable<SuRoleGroupLang>();
			}
		}
		
		public System.Data.Linq.Table<SuSession> SuSessions
		{
			get
			{
				return this.GetTable<SuSession>();
			}
		}
		
		public System.Data.Linq.Table<SuUser> SuUsers
		{
			get
			{
				return this.GetTable<SuUser>();
			}
		}
		
		public System.Data.Linq.Table<SuUserDivision> SuUserDivisions
		{
			get
			{
				return this.GetTable<SuUserDivision>();
			}
		}
		
		public System.Data.Linq.Table<SuUserLog> SuUserLogs
		{
			get
			{
				return this.GetTable<SuUserLog>();
			}
		}
		
		public System.Data.Linq.Table<SuUserOrgPermission> SuUserOrgPermissions
		{
			get
			{
				return this.GetTable<SuUserOrgPermission>();
			}
		}
		
		public System.Data.Linq.Table<SuUserProfile> SuUserProfiles
		{
			get
			{
				return this.GetTable<SuUserProfile>();
			}
		}
		
		public System.Data.Linq.Table<SuUserProfileLang> SuUserProfileLangs
		{
			get
			{
				return this.GetTable<SuUserProfileLang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Address")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressID;
		
		private short _CountryID;
		
		private short _ProvinceID;
		
		private short _DistrictID;
		
		private short _CityID;
		
		private short _PostalID;
		
		private string _AddressNumber;
		
		private string _Road;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Map;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _Rowversion;
		
		private bool _Active;
		
		private EntitySet<SU_Organization> _SU_Organizations;
		
		private EntitySet<SuUserProfile> _SuUserProfiles;
		
		private EntityRef<DB_City> _DB_City;
		
		private EntityRef<DB_District> _DB_District;
		
		private EntityRef<DB_Postal> _DB_Postal;
		
		private EntityRef<DB_Province> _DB_Province;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnProvinceIDChanging(short value);
    partial void OnProvinceIDChanged();
    partial void OnDistrictIDChanging(short value);
    partial void OnDistrictIDChanged();
    partial void OnCityIDChanging(short value);
    partial void OnCityIDChanged();
    partial void OnPostalIDChanging(short value);
    partial void OnPostalIDChanged();
    partial void OnAddressNumberChanging(string value);
    partial void OnAddressNumberChanged();
    partial void OnRoadChanging(string value);
    partial void OnRoadChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMapChanging(string value);
    partial void OnMapChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowversionChanging(byte[] value);
    partial void OnRowversionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Address()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public short ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					if (this._DB_Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public short DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DB_District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public short CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._DB_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public short PostalID
		{
			get
			{
				return this._PostalID;
			}
			set
			{
				if ((this._PostalID != value))
				{
					if (this._DB_Postal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostalIDChanging(value);
					this.SendPropertyChanging();
					this._PostalID = value;
					this.SendPropertyChanged("PostalID");
					this.OnPostalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNumber", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string AddressNumber
		{
			get
			{
				return this._AddressNumber;
			}
			set
			{
				if ((this._AddressNumber != value))
				{
					this.OnAddressNumberChanging(value);
					this.SendPropertyChanging();
					this._AddressNumber = value;
					this.SendPropertyChanged("AddressNumber");
					this.OnAddressNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Road", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Road
		{
			get
			{
				return this._Road;
			}
			set
			{
				if ((this._Road != value))
				{
					this.OnRoadChanging(value);
					this.SendPropertyChanging();
					this._Road = value;
					this.SendPropertyChanged("Road");
					this.OnRoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Map
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnMapChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Map");
					this.OnMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowversion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public byte[] Rowversion
		{
			get
			{
				return this._Rowversion;
			}
			set
			{
				if ((this._Rowversion != value))
				{
					this.OnRowversionChanging(value);
					this.SendPropertyChanging();
					this._Rowversion = value;
					this.SendPropertyChanged("Rowversion");
					this.OnRowversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Address_SU_Organization", Storage="_SU_Organizations", ThisKey="AddressID", OtherKey="AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<SU_Organization> SU_Organizations
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_Organizations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_Organizations;
			}
			set
			{
				this._SU_Organizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Address_SuUserProfile", Storage="_SuUserProfiles", ThisKey="AddressID", OtherKey="AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<SuUserProfile> SuUserProfiles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserProfiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserProfiles;
			}
			set
			{
				this._SuUserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_City_DB_Address", Storage="_DB_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true)]
		public DB_City DB_City
		{
			get
			{
				return this._DB_City.Entity;
			}
			set
			{
				DB_City previousValue = this._DB_City.Entity;
				if (((previousValue != value) 
							|| (this._DB_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_City.Entity = null;
						previousValue.DB_Addresses.Remove(this);
					}
					this._DB_City.Entity = value;
					if ((value != null))
					{
						value.DB_Addresses.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(short);
					}
					this.SendPropertyChanged("DB_City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_District_DB_Address", Storage="_DB_District", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DB_District DB_District
		{
			get
			{
				return this._DB_District.Entity;
			}
			set
			{
				DB_District previousValue = this._DB_District.Entity;
				if (((previousValue != value) 
							|| (this._DB_District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_District.Entity = null;
						previousValue.DB_Addresses.Remove(this);
					}
					this._DB_District.Entity = value;
					if ((value != null))
					{
						value.DB_Addresses.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(short);
					}
					this.SendPropertyChanged("DB_District");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Postal_DB_Address", Storage="_DB_Postal", ThisKey="PostalID", OtherKey="PostalID", IsForeignKey=true)]
		public DB_Postal DB_Postal
		{
			get
			{
				return this._DB_Postal.Entity;
			}
			set
			{
				DB_Postal previousValue = this._DB_Postal.Entity;
				if (((previousValue != value) 
							|| (this._DB_Postal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Postal.Entity = null;
						previousValue.DB_Addresses.Remove(this);
					}
					this._DB_Postal.Entity = value;
					if ((value != null))
					{
						value.DB_Addresses.Add(this);
						this._PostalID = value.PostalID;
					}
					else
					{
						this._PostalID = default(short);
					}
					this.SendPropertyChanged("DB_Postal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Province_DB_Address", Storage="_DB_Province", ThisKey="ProvinceID", OtherKey="ProvinceID", IsForeignKey=true)]
		public DB_Province DB_Province
		{
			get
			{
				return this._DB_Province.Entity;
			}
			set
			{
				DB_Province previousValue = this._DB_Province.Entity;
				if (((previousValue != value) 
							|| (this._DB_Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Province.Entity = null;
						previousValue.DB_Addresses.Remove(this);
					}
					this._DB_Province.Entity = value;
					if ((value != null))
					{
						value.DB_Addresses.Add(this);
						this._ProvinceID = value.ProvinceID;
					}
					else
					{
						this._ProvinceID = default(short);
					}
					this.SendPropertyChanged("DB_Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_Organizations(SU_Organization entity)
		{
			this.SendPropertyChanging();
			entity.DB_Address = this;
		}
		
		private void detach_SU_Organizations(SU_Organization entity)
		{
			this.SendPropertyChanging();
			entity.DB_Address = null;
		}
		
		private void attach_SuUserProfiles(SuUserProfile entity)
		{
			this.SendPropertyChanging();
			entity.DB_Address = this;
		}
		
		private void detach_SuUserProfiles(SuUserProfile entity)
		{
			this.SendPropertyChanging();
			entity.DB_Address = null;
		}
		
		private void Initialize()
		{
			this._SU_Organizations = new EntitySet<SU_Organization>(new Action<SU_Organization>(this.attach_SU_Organizations), new Action<SU_Organization>(this.detach_SU_Organizations));
			this._SuUserProfiles = new EntitySet<SuUserProfile>(new Action<SuUserProfile>(this.attach_SuUserProfiles), new Action<SuUserProfile>(this.detach_SuUserProfiles));
			this._DB_City = default(EntityRef<DB_City>);
			this._DB_District = default(EntityRef<DB_District>);
			this._DB_Postal = default(EntityRef<DB_Postal>);
			this._DB_Province = default(EntityRef<DB_Province>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleID;
		
		private long _UserID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SuRole> _SuRole;
		
		private EntityRef<SuUser> _SuUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(short value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuUserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._SuRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRole_SuUserRole", Storage="_SuRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public SuRole SuRole
		{
			get
			{
				return this._SuRole.Entity;
			}
			set
			{
				SuRole previousValue = this._SuRole.Entity;
				if (((previousValue != value) 
							|| (this._SuRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuRole.Entity = null;
						previousValue.SuUserRoles.Remove(this);
					}
					this._SuRole.Entity = value;
					if ((value != null))
					{
						value.SuUserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(short);
					}
					this.SendPropertyChanged("SuRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserRole", Storage="_SuUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUser SuUser
		{
			get
			{
				return this._SuUser.Entity;
			}
			set
			{
				SuUser previousValue = this._SuUser.Entity;
				if (((previousValue != value) 
							|| (this._SuUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUser.Entity = null;
						previousValue.SuUserRoles.Remove(this);
					}
					this._SuUser.Entity = value;
					if ((value != null))
					{
						value.SuUserRoles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SuRole = default(EntityRef<SuRole>);
			this._SuUser = default(EntityRef<SuUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_City")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CityID;
		
		private short _ProvinceID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_Address> _DB_Addresses;
		
		private EntitySet<DB_CityLang> _DB_CityLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(short value);
    partial void OnCityIDChanged();
    partial void OnProvinceIDChanging(short value);
    partial void OnProvinceIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_City()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_City_DB_Address", Storage="_DB_Addresses", ThisKey="CityID", OtherKey="CityID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DB_Address> DB_Addresses
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_Addresses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_Addresses;
			}
			set
			{
				this._DB_Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_City_DB_CityLang", Storage="_DB_CityLangs", ThisKey="CityID", OtherKey="CityID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DB_CityLang> DB_CityLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_CityLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_CityLangs;
			}
			set
			{
				this._DB_CityLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_City = this;
		}
		
		private void detach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_City = null;
		}
		
		private void attach_DB_CityLangs(DB_CityLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_City = this;
		}
		
		private void detach_DB_CityLangs(DB_CityLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_City = null;
		}
		
		private void Initialize()
		{
			this._DB_Addresses = new EntitySet<DB_Address>(new Action<DB_Address>(this.attach_DB_Addresses), new Action<DB_Address>(this.detach_DB_Addresses));
			this._DB_CityLangs = new EntitySet<DB_CityLang>(new Action<DB_CityLang>(this.attach_DB_CityLangs), new Action<DB_CityLang>(this.detach_DB_CityLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_CityLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_CityLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _CityID;
		
		private string _CityName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_City> _DB_City;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnCityIDChanging(short value);
    partial void OnCityIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_CityLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._DB_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_City_DB_CityLang", Storage="_DB_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true)]
		public DB_City DB_City
		{
			get
			{
				return this._DB_City.Entity;
			}
			set
			{
				DB_City previousValue = this._DB_City.Entity;
				if (((previousValue != value) 
							|| (this._DB_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_City.Entity = null;
						previousValue.DB_CityLangs.Remove(this);
					}
					this._DB_City.Entity = value;
					if ((value != null))
					{
						value.DB_CityLangs.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(short);
					}
					this.SendPropertyChanged("DB_City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_CityLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_CityLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_CityLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_City = default(EntityRef<DB_City>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Country")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CountryID;
		
		private string _CountryCode;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_CountryLang> _DB_CountryLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Country()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Country_DB_CountryLang", Storage="_DB_CountryLangs", ThisKey="CountryID", OtherKey="CountryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DB_CountryLang> DB_CountryLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_CountryLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_CountryLangs;
			}
			set
			{
				this._DB_CountryLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_CountryLangs(DB_CountryLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Country = this;
		}
		
		private void detach_DB_CountryLangs(DB_CountryLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Country = null;
		}
		
		private void Initialize()
		{
			this._DB_CountryLangs = new EntitySet<DB_CountryLang>(new Action<DB_CountryLang>(this.attach_DB_CountryLangs), new Action<DB_CountryLang>(this.detach_DB_CountryLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_CountryLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_CountryLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _CountryID;
		
		private string _CountryName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_Country> _DB_Country;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_CountryLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._DB_Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Country_DB_CountryLang", Storage="_DB_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public DB_Country DB_Country
		{
			get
			{
				return this._DB_Country.Entity;
			}
			set
			{
				DB_Country previousValue = this._DB_Country.Entity;
				if (((previousValue != value) 
							|| (this._DB_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Country.Entity = null;
						previousValue.DB_CountryLangs.Remove(this);
					}
					this._DB_Country.Entity = value;
					if ((value != null))
					{
						value.DB_CountryLangs.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(short);
					}
					this.SendPropertyChanged("DB_Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_CountryLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_CountryLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_CountryLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Country = default(EntityRef<DB_Country>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_District")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _DistrictID;
		
		private short _CityID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_Address> _DB_Addresses;
		
		private EntitySet<DB_DistrictLang> _DB_DistrictLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIDChanging(short value);
    partial void OnDistrictIDChanged();
    partial void OnCityIDChanging(short value);
    partial void OnCityIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_District()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_District_DB_Address", Storage="_DB_Addresses", ThisKey="DistrictID", OtherKey="DistrictID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DB_Address> DB_Addresses
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_Addresses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_Addresses;
			}
			set
			{
				this._DB_Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_District_DB_DistrictLang", Storage="_DB_DistrictLangs", ThisKey="DistrictID", OtherKey="DistrictID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DB_DistrictLang> DB_DistrictLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_DistrictLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_DistrictLangs;
			}
			set
			{
				this._DB_DistrictLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_District = this;
		}
		
		private void detach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_District = null;
		}
		
		private void attach_DB_DistrictLangs(DB_DistrictLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_District = this;
		}
		
		private void detach_DB_DistrictLangs(DB_DistrictLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_District = null;
		}
		
		private void Initialize()
		{
			this._DB_Addresses = new EntitySet<DB_Address>(new Action<DB_Address>(this.attach_DB_Addresses), new Action<DB_Address>(this.detach_DB_Addresses));
			this._DB_DistrictLangs = new EntitySet<DB_DistrictLang>(new Action<DB_DistrictLang>(this.attach_DB_DistrictLangs), new Action<DB_DistrictLang>(this.detach_DB_DistrictLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_DistrictLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_DistrictLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _DistrictID;
		
		private string _DistrictName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_District> _DB_District;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnDistrictIDChanging(short value);
    partial void OnDistrictIDChanged();
    partial void OnDistrictNameChanging(string value);
    partial void OnDistrictNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_DistrictLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DB_District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this.OnDistrictNameChanging(value);
					this.SendPropertyChanging();
					this._DistrictName = value;
					this.SendPropertyChanged("DistrictName");
					this.OnDistrictNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_District_DB_DistrictLang", Storage="_DB_District", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DB_District DB_District
		{
			get
			{
				return this._DB_District.Entity;
			}
			set
			{
				DB_District previousValue = this._DB_District.Entity;
				if (((previousValue != value) 
							|| (this._DB_District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_District.Entity = null;
						previousValue.DB_DistrictLangs.Remove(this);
					}
					this._DB_District.Entity = value;
					if ((value != null))
					{
						value.DB_DistrictLangs.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(short);
					}
					this.SendPropertyChanged("DB_District");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_DistrictLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_DistrictLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_DistrictLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_District = default(EntityRef<DB_District>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Parameter")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _GROUP_NO;
		
		private short _SEQ_NO;
		
		private string _PARAM_VALUE;
		
		private string _PARAM_DESC;
		
		private System.Nullable<char> _PARAM_TYPE;
		
		private string _DESCRIPTION;
		
		private string _UPD_BY;
		
		private System.DateTime _UPD_DATE;
		
		private string _UPD_PGM;
		
		private string _CRE_BY;
		
		private System.DateTime _CRE_DATE;
		
		private bool _Active;
		
		private EntityRef<DB_Parameter> _DB_Parameter2;
		
		private EntityRef<DB_Parameter> _DB_Parameter1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_NOChanging(short value);
    partial void OnGROUP_NOChanged();
    partial void OnSEQ_NOChanging(short value);
    partial void OnSEQ_NOChanged();
    partial void OnPARAM_VALUEChanging(string value);
    partial void OnPARAM_VALUEChanged();
    partial void OnPARAM_DESCChanging(string value);
    partial void OnPARAM_DESCChanged();
    partial void OnPARAM_TYPEChanging(System.Nullable<char> value);
    partial void OnPARAM_TYPEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnUPD_BYChanging(string value);
    partial void OnUPD_BYChanged();
    partial void OnUPD_DATEChanging(System.DateTime value);
    partial void OnUPD_DATEChanged();
    partial void OnUPD_PGMChanging(string value);
    partial void OnUPD_PGMChanged();
    partial void OnCRE_BYChanging(string value);
    partial void OnCRE_BYChanged();
    partial void OnCRE_DATEChanging(System.DateTime value);
    partial void OnCRE_DATEChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Parameter()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_NO", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short GROUP_NO
		{
			get
			{
				return this._GROUP_NO;
			}
			set
			{
				if ((this._GROUP_NO != value))
				{
					if (this._DB_Parameter1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGROUP_NOChanging(value);
					this.SendPropertyChanging();
					this._GROUP_NO = value;
					this.SendPropertyChanged("GROUP_NO");
					this.OnGROUP_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEQ_NO", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short SEQ_NO
		{
			get
			{
				return this._SEQ_NO;
			}
			set
			{
				if ((this._SEQ_NO != value))
				{
					if (this._DB_Parameter1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSEQ_NOChanging(value);
					this.SendPropertyChanging();
					this._SEQ_NO = value;
					this.SendPropertyChanged("SEQ_NO");
					this.OnSEQ_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_VALUE", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PARAM_VALUE
		{
			get
			{
				return this._PARAM_VALUE;
			}
			set
			{
				if ((this._PARAM_VALUE != value))
				{
					this.OnPARAM_VALUEChanging(value);
					this.SendPropertyChanging();
					this._PARAM_VALUE = value;
					this.SendPropertyChanged("PARAM_VALUE");
					this.OnPARAM_VALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_DESC", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PARAM_DESC
		{
			get
			{
				return this._PARAM_DESC;
			}
			set
			{
				if ((this._PARAM_DESC != value))
				{
					this.OnPARAM_DESCChanging(value);
					this.SendPropertyChanging();
					this._PARAM_DESC = value;
					this.SendPropertyChanged("PARAM_DESC");
					this.OnPARAM_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_TYPE", DbType="VarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<char> PARAM_TYPE
		{
			get
			{
				return this._PARAM_TYPE;
			}
			set
			{
				if ((this._PARAM_TYPE != value))
				{
					this.OnPARAM_TYPEChanging(value);
					this.SendPropertyChanging();
					this._PARAM_TYPE = value;
					this.SendPropertyChanged("PARAM_TYPE");
					this.OnPARAM_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPD_BY", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string UPD_BY
		{
			get
			{
				return this._UPD_BY;
			}
			set
			{
				if ((this._UPD_BY != value))
				{
					this.OnUPD_BYChanging(value);
					this.SendPropertyChanging();
					this._UPD_BY = value;
					this.SendPropertyChanged("UPD_BY");
					this.OnUPD_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPD_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime UPD_DATE
		{
			get
			{
				return this._UPD_DATE;
			}
			set
			{
				if ((this._UPD_DATE != value))
				{
					this.OnUPD_DATEChanging(value);
					this.SendPropertyChanging();
					this._UPD_DATE = value;
					this.SendPropertyChanged("UPD_DATE");
					this.OnUPD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPD_PGM", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string UPD_PGM
		{
			get
			{
				return this._UPD_PGM;
			}
			set
			{
				if ((this._UPD_PGM != value))
				{
					this.OnUPD_PGMChanging(value);
					this.SendPropertyChanging();
					this._UPD_PGM = value;
					this.SendPropertyChanged("UPD_PGM");
					this.OnUPD_PGMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRE_BY", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string CRE_BY
		{
			get
			{
				return this._CRE_BY;
			}
			set
			{
				if ((this._CRE_BY != value))
				{
					this.OnCRE_BYChanging(value);
					this.SendPropertyChanging();
					this._CRE_BY = value;
					this.SendPropertyChanged("CRE_BY");
					this.OnCRE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRE_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime CRE_DATE
		{
			get
			{
				return this._CRE_DATE;
			}
			set
			{
				if ((this._CRE_DATE != value))
				{
					this.OnCRE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CRE_DATE = value;
					this.SendPropertyChanged("CRE_DATE");
					this.OnCRE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Parameter_DB_Parameter", Storage="_DB_Parameter2", ThisKey="GROUP_NO,SEQ_NO", OtherKey="GROUP_NO,SEQ_NO", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public DB_Parameter DB_Parameter2
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_Parameter2.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DB_Parameter2.Entity;
			}
			set
			{
				DB_Parameter previousValue = this._DB_Parameter2.Entity;
				if (((previousValue != value) 
							|| (this._DB_Parameter2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Parameter2.Entity = null;
						previousValue.DB_Parameter1 = null;
					}
					this._DB_Parameter2.Entity = value;
					if ((value != null))
					{
						value.DB_Parameter1 = this;
					}
					this.SendPropertyChanged("DB_Parameter2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Parameter_DB_Parameter", Storage="_DB_Parameter1", ThisKey="GROUP_NO,SEQ_NO", OtherKey="GROUP_NO,SEQ_NO", IsForeignKey=true)]
		public DB_Parameter DB_Parameter1
		{
			get
			{
				return this._DB_Parameter1.Entity;
			}
			set
			{
				DB_Parameter previousValue = this._DB_Parameter1.Entity;
				if (((previousValue != value) 
							|| (this._DB_Parameter1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Parameter1.Entity = null;
						previousValue.DB_Parameter2 = null;
					}
					this._DB_Parameter1.Entity = value;
					if ((value != null))
					{
						value.DB_Parameter2 = this;
						this._GROUP_NO = value.GROUP_NO;
						this._SEQ_NO = value.SEQ_NO;
					}
					else
					{
						this._GROUP_NO = default(short);
						this._SEQ_NO = default(short);
					}
					this.SendPropertyChanged("DB_Parameter1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Parameter2 = default(EntityRef<DB_Parameter>);
			this._DB_Parameter1 = default(EntityRef<DB_Parameter>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Parameter_Group")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Parameter_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _GROUP_NO;
		
		private string _GROUP_NAME;
		
		private string _DESCRIPTION;
		
		private string _UPD_BY;
		
		private System.DateTime _UPD_DATE;
		
		private string _UPD_PGM;
		
		private string _CRE_BY;
		
		private System.DateTime _CRE_DATE;
		
		private bool _Active;
		
		private EntityRef<DB_Parameter_Group> _DB_Parameter_Group2;
		
		private EntityRef<DB_Parameter_Group> _DB_Parameter_Group1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_NOChanging(short value);
    partial void OnGROUP_NOChanged();
    partial void OnGROUP_NAMEChanging(string value);
    partial void OnGROUP_NAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnUPD_BYChanging(string value);
    partial void OnUPD_BYChanged();
    partial void OnUPD_DATEChanging(System.DateTime value);
    partial void OnUPD_DATEChanged();
    partial void OnUPD_PGMChanging(string value);
    partial void OnUPD_PGMChanged();
    partial void OnCRE_BYChanging(string value);
    partial void OnCRE_BYChanged();
    partial void OnCRE_DATEChanging(System.DateTime value);
    partial void OnCRE_DATEChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Parameter_Group()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_NO", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short GROUP_NO
		{
			get
			{
				return this._GROUP_NO;
			}
			set
			{
				if ((this._GROUP_NO != value))
				{
					if (this._DB_Parameter_Group1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGROUP_NOChanging(value);
					this.SendPropertyChanging();
					this._GROUP_NO = value;
					this.SendPropertyChanged("GROUP_NO");
					this.OnGROUP_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_NAME", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string GROUP_NAME
		{
			get
			{
				return this._GROUP_NAME;
			}
			set
			{
				if ((this._GROUP_NAME != value))
				{
					this.OnGROUP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._GROUP_NAME = value;
					this.SendPropertyChanged("GROUP_NAME");
					this.OnGROUP_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPD_BY", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string UPD_BY
		{
			get
			{
				return this._UPD_BY;
			}
			set
			{
				if ((this._UPD_BY != value))
				{
					this.OnUPD_BYChanging(value);
					this.SendPropertyChanging();
					this._UPD_BY = value;
					this.SendPropertyChanged("UPD_BY");
					this.OnUPD_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPD_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime UPD_DATE
		{
			get
			{
				return this._UPD_DATE;
			}
			set
			{
				if ((this._UPD_DATE != value))
				{
					this.OnUPD_DATEChanging(value);
					this.SendPropertyChanging();
					this._UPD_DATE = value;
					this.SendPropertyChanged("UPD_DATE");
					this.OnUPD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPD_PGM", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string UPD_PGM
		{
			get
			{
				return this._UPD_PGM;
			}
			set
			{
				if ((this._UPD_PGM != value))
				{
					this.OnUPD_PGMChanging(value);
					this.SendPropertyChanging();
					this._UPD_PGM = value;
					this.SendPropertyChanged("UPD_PGM");
					this.OnUPD_PGMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRE_BY", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CRE_BY
		{
			get
			{
				return this._CRE_BY;
			}
			set
			{
				if ((this._CRE_BY != value))
				{
					this.OnCRE_BYChanging(value);
					this.SendPropertyChanging();
					this._CRE_BY = value;
					this.SendPropertyChanged("CRE_BY");
					this.OnCRE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRE_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CRE_DATE
		{
			get
			{
				return this._CRE_DATE;
			}
			set
			{
				if ((this._CRE_DATE != value))
				{
					this.OnCRE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CRE_DATE = value;
					this.SendPropertyChanged("CRE_DATE");
					this.OnCRE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Parameter_Group_DB_Parameter_Group", Storage="_DB_Parameter_Group2", ThisKey="GROUP_NO", OtherKey="GROUP_NO", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public DB_Parameter_Group DB_Parameter_Group2
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_Parameter_Group2.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DB_Parameter_Group2.Entity;
			}
			set
			{
				DB_Parameter_Group previousValue = this._DB_Parameter_Group2.Entity;
				if (((previousValue != value) 
							|| (this._DB_Parameter_Group2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Parameter_Group2.Entity = null;
						previousValue.DB_Parameter_Group1 = null;
					}
					this._DB_Parameter_Group2.Entity = value;
					if ((value != null))
					{
						value.DB_Parameter_Group1 = this;
					}
					this.SendPropertyChanged("DB_Parameter_Group2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Parameter_Group_DB_Parameter_Group", Storage="_DB_Parameter_Group1", ThisKey="GROUP_NO", OtherKey="GROUP_NO", IsForeignKey=true)]
		public DB_Parameter_Group DB_Parameter_Group1
		{
			get
			{
				return this._DB_Parameter_Group1.Entity;
			}
			set
			{
				DB_Parameter_Group previousValue = this._DB_Parameter_Group1.Entity;
				if (((previousValue != value) 
							|| (this._DB_Parameter_Group1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Parameter_Group1.Entity = null;
						previousValue.DB_Parameter_Group2 = null;
					}
					this._DB_Parameter_Group1.Entity = value;
					if ((value != null))
					{
						value.DB_Parameter_Group2 = this;
						this._GROUP_NO = value.GROUP_NO;
					}
					else
					{
						this._GROUP_NO = default(short);
					}
					this.SendPropertyChanged("DB_Parameter_Group1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Parameter_Group2 = default(EntityRef<DB_Parameter_Group>);
			this._DB_Parameter_Group1 = default(EntityRef<DB_Parameter_Group>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Postal")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Postal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PostalID;
		
		private short _PostalCode;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _Rowversion;
		
		private bool _Active;
		
		private EntitySet<DB_Address> _DB_Addresses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalIDChanging(short value);
    partial void OnPostalIDChanged();
    partial void OnPostalCodeChanging(short value);
    partial void OnPostalCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowversionChanging(byte[] value);
    partial void OnRowversionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Postal()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short PostalID
		{
			get
			{
				return this._PostalID;
			}
			set
			{
				if ((this._PostalID != value))
				{
					this.OnPostalIDChanging(value);
					this.SendPropertyChanging();
					this._PostalID = value;
					this.SendPropertyChanged("PostalID");
					this.OnPostalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowversion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] Rowversion
		{
			get
			{
				return this._Rowversion;
			}
			set
			{
				if ((this._Rowversion != value))
				{
					this.OnRowversionChanging(value);
					this.SendPropertyChanging();
					this._Rowversion = value;
					this.SendPropertyChanged("Rowversion");
					this.OnRowversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Postal_DB_Address", Storage="_DB_Addresses", ThisKey="PostalID", OtherKey="PostalID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DB_Address> DB_Addresses
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_Addresses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_Addresses;
			}
			set
			{
				this._DB_Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_Postal = this;
		}
		
		private void detach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_Postal = null;
		}
		
		private void Initialize()
		{
			this._DB_Addresses = new EntitySet<DB_Address>(new Action<DB_Address>(this.attach_DB_Addresses), new Action<DB_Address>(this.detach_DB_Addresses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Prefix")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Prefix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PrefixID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_PrefixLang> _DB_PrefixLangs;
		
		private EntitySet<SuUserProfile> _SuUserProfiles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrefixIDChanging(short value);
    partial void OnPrefixIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Prefix()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short PrefixID
		{
			get
			{
				return this._PrefixID;
			}
			set
			{
				if ((this._PrefixID != value))
				{
					this.OnPrefixIDChanging(value);
					this.SendPropertyChanging();
					this._PrefixID = value;
					this.SendPropertyChanged("PrefixID");
					this.OnPrefixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Prefix_DB_PrefixLang", Storage="_DB_PrefixLangs", ThisKey="PrefixID", OtherKey="PrefixID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DB_PrefixLang> DB_PrefixLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_PrefixLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_PrefixLangs;
			}
			set
			{
				this._DB_PrefixLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Prefix_SuUserProfile", Storage="_SuUserProfiles", ThisKey="PrefixID", OtherKey="PrefixID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SuUserProfile> SuUserProfiles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserProfiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserProfiles;
			}
			set
			{
				this._SuUserProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_PrefixLangs(DB_PrefixLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Prefix = this;
		}
		
		private void detach_DB_PrefixLangs(DB_PrefixLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Prefix = null;
		}
		
		private void attach_SuUserProfiles(SuUserProfile entity)
		{
			this.SendPropertyChanging();
			entity.DB_Prefix = this;
		}
		
		private void detach_SuUserProfiles(SuUserProfile entity)
		{
			this.SendPropertyChanging();
			entity.DB_Prefix = null;
		}
		
		private void Initialize()
		{
			this._DB_PrefixLangs = new EntitySet<DB_PrefixLang>(new Action<DB_PrefixLang>(this.attach_DB_PrefixLangs), new Action<DB_PrefixLang>(this.detach_DB_PrefixLangs));
			this._SuUserProfiles = new EntitySet<SuUserProfile>(new Action<SuUserProfile>(this.attach_SuUserProfiles), new Action<SuUserProfile>(this.detach_SuUserProfiles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_PrefixLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_PrefixLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _PrefixID;
		
		private string _PrefixName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_Prefix> _DB_Prefix;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnPrefixIDChanging(short value);
    partial void OnPrefixIDChanged();
    partial void OnPrefixNameChanging(string value);
    partial void OnPrefixNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_PrefixLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short PrefixID
		{
			get
			{
				return this._PrefixID;
			}
			set
			{
				if ((this._PrefixID != value))
				{
					if (this._DB_Prefix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrefixIDChanging(value);
					this.SendPropertyChanging();
					this._PrefixID = value;
					this.SendPropertyChanged("PrefixID");
					this.OnPrefixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixName", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PrefixName
		{
			get
			{
				return this._PrefixName;
			}
			set
			{
				if ((this._PrefixName != value))
				{
					this.OnPrefixNameChanging(value);
					this.SendPropertyChanging();
					this._PrefixName = value;
					this.SendPropertyChanged("PrefixName");
					this.OnPrefixNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Prefix_DB_PrefixLang", Storage="_DB_Prefix", ThisKey="PrefixID", OtherKey="PrefixID", IsForeignKey=true)]
		public DB_Prefix DB_Prefix
		{
			get
			{
				return this._DB_Prefix.Entity;
			}
			set
			{
				DB_Prefix previousValue = this._DB_Prefix.Entity;
				if (((previousValue != value) 
							|| (this._DB_Prefix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Prefix.Entity = null;
						previousValue.DB_PrefixLangs.Remove(this);
					}
					this._DB_Prefix.Entity = value;
					if ((value != null))
					{
						value.DB_PrefixLangs.Add(this);
						this._PrefixID = value.PrefixID;
					}
					else
					{
						this._PrefixID = default(short);
					}
					this.SendPropertyChanged("DB_Prefix");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_PrefixLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_PrefixLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_PrefixLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Prefix = default(EntityRef<DB_Prefix>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Province")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ProvinceID;
		
		private short _RegionID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_Address> _DB_Addresses;
		
		private EntitySet<DB_ProvinceLang> _DB_ProvinceLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvinceIDChanging(short value);
    partial void OnProvinceIDChanged();
    partial void OnRegionIDChanging(short value);
    partial void OnRegionIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Province()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Province_DB_Address", Storage="_DB_Addresses", ThisKey="ProvinceID", OtherKey="ProvinceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DB_Address> DB_Addresses
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_Addresses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_Addresses;
			}
			set
			{
				this._DB_Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Province_DB_ProvinceLang", Storage="_DB_ProvinceLangs", ThisKey="ProvinceID", OtherKey="ProvinceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DB_ProvinceLang> DB_ProvinceLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_ProvinceLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_ProvinceLangs;
			}
			set
			{
				this._DB_ProvinceLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_Province = this;
		}
		
		private void detach_DB_Addresses(DB_Address entity)
		{
			this.SendPropertyChanging();
			entity.DB_Province = null;
		}
		
		private void attach_DB_ProvinceLangs(DB_ProvinceLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Province = this;
		}
		
		private void detach_DB_ProvinceLangs(DB_ProvinceLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Province = null;
		}
		
		private void Initialize()
		{
			this._DB_Addresses = new EntitySet<DB_Address>(new Action<DB_Address>(this.attach_DB_Addresses), new Action<DB_Address>(this.detach_DB_Addresses));
			this._DB_ProvinceLangs = new EntitySet<DB_ProvinceLang>(new Action<DB_ProvinceLang>(this.attach_DB_ProvinceLangs), new Action<DB_ProvinceLang>(this.detach_DB_ProvinceLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_ProvinceLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_ProvinceLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _ProvinceID;
		
		private string _ProvinceName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_Province> _DB_Province;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnProvinceIDChanging(short value);
    partial void OnProvinceIDChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_ProvinceLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					if (this._DB_Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._ProvinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Province_DB_ProvinceLang", Storage="_DB_Province", ThisKey="ProvinceID", OtherKey="ProvinceID", IsForeignKey=true)]
		public DB_Province DB_Province
		{
			get
			{
				return this._DB_Province.Entity;
			}
			set
			{
				DB_Province previousValue = this._DB_Province.Entity;
				if (((previousValue != value) 
							|| (this._DB_Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Province.Entity = null;
						previousValue.DB_ProvinceLangs.Remove(this);
					}
					this._DB_Province.Entity = value;
					if ((value != null))
					{
						value.DB_ProvinceLangs.Add(this);
						this._ProvinceID = value.ProvinceID;
					}
					else
					{
						this._ProvinceID = default(short);
					}
					this.SendPropertyChanged("DB_Province");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_ProvinceLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_ProvinceLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_ProvinceLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Province = default(EntityRef<DB_Province>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Region")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RegionID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_RegionLang> _DB_RegionLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(short value);
    partial void OnRegionIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Region()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Region_DB_RegionLang", Storage="_DB_RegionLangs", ThisKey="RegionID", OtherKey="RegionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DB_RegionLang> DB_RegionLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_RegionLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_RegionLangs;
			}
			set
			{
				this._DB_RegionLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_RegionLangs(DB_RegionLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Region = this;
		}
		
		private void detach_DB_RegionLangs(DB_RegionLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Region = null;
		}
		
		private void Initialize()
		{
			this._DB_RegionLangs = new EntitySet<DB_RegionLang>(new Action<DB_RegionLang>(this.attach_DB_RegionLangs), new Action<DB_RegionLang>(this.detach_DB_RegionLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_RegionLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_RegionLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _RegionID;
		
		private string _RegionName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_Region> _DB_Region;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnRegionIDChanging(short value);
    partial void OnRegionIDChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_RegionLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._DB_Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Region_DB_RegionLang", Storage="_DB_Region", ThisKey="RegionID", OtherKey="RegionID", IsForeignKey=true)]
		public DB_Region DB_Region
		{
			get
			{
				return this._DB_Region.Entity;
			}
			set
			{
				DB_Region previousValue = this._DB_Region.Entity;
				if (((previousValue != value) 
							|| (this._DB_Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Region.Entity = null;
						previousValue.DB_RegionLangs.Remove(this);
					}
					this._DB_Region.Entity = value;
					if ((value != null))
					{
						value.DB_RegionLangs.Add(this);
						this._RegionID = value.RegionID;
					}
					else
					{
						this._RegionID = default(short);
					}
					this.SendPropertyChanged("DB_Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_RegionLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_RegionLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_RegionLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Region = default(EntityRef<DB_Region>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Zone")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_Zone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ZoneID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<DB_ZoneLang> _DB_ZoneLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZoneIDChanging(short value);
    partial void OnZoneIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_Zone()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Zone_DB_ZoneLang", Storage="_DB_ZoneLangs", ThisKey="ZoneID", OtherKey="ZoneID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DB_ZoneLang> DB_ZoneLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_ZoneLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_ZoneLangs;
			}
			set
			{
				this._DB_ZoneLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_ZoneLangs(DB_ZoneLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Zone = this;
		}
		
		private void detach_DB_ZoneLangs(DB_ZoneLang entity)
		{
			this.SendPropertyChanging();
			entity.DB_Zone = null;
		}
		
		private void Initialize()
		{
			this._DB_ZoneLangs = new EntitySet<DB_ZoneLang>(new Action<DB_ZoneLang>(this.attach_DB_ZoneLangs), new Action<DB_ZoneLang>(this.detach_DB_ZoneLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_ZoneLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DB_ZoneLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _ZoneID;
		
		private string _ZoneName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<DB_Zone> _DB_Zone;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnZoneIDChanging(short value);
    partial void OnZoneIDChanged();
    partial void OnZoneNameChanging(string value);
    partial void OnZoneNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DB_ZoneLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._DB_Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this.OnZoneNameChanging(value);
					this.SendPropertyChanging();
					this._ZoneName = value;
					this.SendPropertyChanged("ZoneName");
					this.OnZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Zone_DB_ZoneLang", Storage="_DB_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public DB_Zone DB_Zone
		{
			get
			{
				return this._DB_Zone.Entity;
			}
			set
			{
				DB_Zone previousValue = this._DB_Zone.Entity;
				if (((previousValue != value) 
							|| (this._DB_Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Zone.Entity = null;
						previousValue.DB_ZoneLangs.Remove(this);
					}
					this._DB_Zone.Entity = value;
					if ((value != null))
					{
						value.DB_ZoneLangs.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(short);
					}
					this.SendPropertyChanged("DB_Zone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_ZoneLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.DB_ZoneLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.DB_ZoneLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DB_Zone = default(EntityRef<DB_Zone>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_AlertGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_AlertGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _AlertGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_AlertGroupLang> _SU_AlertGroupLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlertGroupIDChanging(short value);
    partial void OnAlertGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_AlertGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short AlertGroupID
		{
			get
			{
				return this._AlertGroupID;
			}
			set
			{
				if ((this._AlertGroupID != value))
				{
					this.OnAlertGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AlertGroupID = value;
					this.SendPropertyChanged("AlertGroupID");
					this.OnAlertGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_AlertGroup_SU_AlertGroupLang", Storage="_SU_AlertGroupLangs", ThisKey="AlertGroupID", OtherKey="AlertGroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SU_AlertGroupLang> SU_AlertGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_AlertGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_AlertGroupLangs;
			}
			set
			{
				this._SU_AlertGroupLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_AlertGroupLangs(SU_AlertGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_AlertGroup = this;
		}
		
		private void detach_SU_AlertGroupLangs(SU_AlertGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_AlertGroup = null;
		}
		
		private void Initialize()
		{
			this._SU_AlertGroupLangs = new EntitySet<SU_AlertGroupLang>(new Action<SU_AlertGroupLang>(this.attach_SU_AlertGroupLangs), new Action<SU_AlertGroupLang>(this.detach_SU_AlertGroupLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_AlertGroupLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_AlertGroupLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _AlertGroupID;
		
		private string _AlertGroupName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_AlertGroup> _SU_AlertGroup;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnAlertGroupIDChanging(short value);
    partial void OnAlertGroupIDChanged();
    partial void OnAlertGroupNameChanging(string value);
    partial void OnAlertGroupNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_AlertGroupLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short AlertGroupID
		{
			get
			{
				return this._AlertGroupID;
			}
			set
			{
				if ((this._AlertGroupID != value))
				{
					if (this._SU_AlertGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlertGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AlertGroupID = value;
					this.SendPropertyChanged("AlertGroupID");
					this.OnAlertGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertGroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AlertGroupName
		{
			get
			{
				return this._AlertGroupName;
			}
			set
			{
				if ((this._AlertGroupName != value))
				{
					this.OnAlertGroupNameChanging(value);
					this.SendPropertyChanging();
					this._AlertGroupName = value;
					this.SendPropertyChanged("AlertGroupName");
					this.OnAlertGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_AlertGroup_SU_AlertGroupLang", Storage="_SU_AlertGroup", ThisKey="AlertGroupID", OtherKey="AlertGroupID", IsForeignKey=true)]
		public SU_AlertGroup SU_AlertGroup
		{
			get
			{
				return this._SU_AlertGroup.Entity;
			}
			set
			{
				SU_AlertGroup previousValue = this._SU_AlertGroup.Entity;
				if (((previousValue != value) 
							|| (this._SU_AlertGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_AlertGroup.Entity = null;
						previousValue.SU_AlertGroupLangs.Remove(this);
					}
					this._SU_AlertGroup.Entity = value;
					if ((value != null))
					{
						value.SU_AlertGroupLangs.Add(this);
						this._AlertGroupID = value.AlertGroupID;
					}
					else
					{
						this._AlertGroupID = default(short);
					}
					this.SendPropertyChanged("SU_AlertGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_AlertGroupLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SU_AlertGroupLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SU_AlertGroupLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_AlertGroup = default(EntityRef<SU_AlertGroup>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_AlertMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_AlertMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _AlertMessageID;
		
		private short _AlertGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_AlertMessageLang> _SU_AlertMessageLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlertMessageIDChanging(short value);
    partial void OnAlertMessageIDChanged();
    partial void OnAlertGroupIDChanging(short value);
    partial void OnAlertGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_AlertMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertMessageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short AlertMessageID
		{
			get
			{
				return this._AlertMessageID;
			}
			set
			{
				if ((this._AlertMessageID != value))
				{
					this.OnAlertMessageIDChanging(value);
					this.SendPropertyChanging();
					this._AlertMessageID = value;
					this.SendPropertyChanged("AlertMessageID");
					this.OnAlertMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertGroupID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short AlertGroupID
		{
			get
			{
				return this._AlertGroupID;
			}
			set
			{
				if ((this._AlertGroupID != value))
				{
					this.OnAlertGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AlertGroupID = value;
					this.SendPropertyChanged("AlertGroupID");
					this.OnAlertGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_AlertMessage_SU_AlertMessageLang", Storage="_SU_AlertMessageLangs", ThisKey="AlertMessageID", OtherKey="AlertMessageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SU_AlertMessageLang> SU_AlertMessageLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_AlertMessageLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_AlertMessageLangs;
			}
			set
			{
				this._SU_AlertMessageLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_AlertMessageLangs(SU_AlertMessageLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_AlertMessage = this;
		}
		
		private void detach_SU_AlertMessageLangs(SU_AlertMessageLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_AlertMessage = null;
		}
		
		private void Initialize()
		{
			this._SU_AlertMessageLangs = new EntitySet<SU_AlertMessageLang>(new Action<SU_AlertMessageLang>(this.attach_SU_AlertMessageLangs), new Action<SU_AlertMessageLang>(this.detach_SU_AlertMessageLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_AlertMessageLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_AlertMessageLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _AlertMessageID;
		
		private string _AlertMessageBody;
		
		private string _AlertMessageTopic;
		
		private string _AlertMessageSolution;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_AlertMessage> _SU_AlertMessage;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnAlertMessageIDChanging(short value);
    partial void OnAlertMessageIDChanged();
    partial void OnAlertMessageBodyChanging(string value);
    partial void OnAlertMessageBodyChanged();
    partial void OnAlertMessageTopicChanging(string value);
    partial void OnAlertMessageTopicChanged();
    partial void OnAlertMessageSolutionChanging(string value);
    partial void OnAlertMessageSolutionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_AlertMessageLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertMessageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short AlertMessageID
		{
			get
			{
				return this._AlertMessageID;
			}
			set
			{
				if ((this._AlertMessageID != value))
				{
					if (this._SU_AlertMessage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlertMessageIDChanging(value);
					this.SendPropertyChanging();
					this._AlertMessageID = value;
					this.SendPropertyChanged("AlertMessageID");
					this.OnAlertMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertMessageBody", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AlertMessageBody
		{
			get
			{
				return this._AlertMessageBody;
			}
			set
			{
				if ((this._AlertMessageBody != value))
				{
					this.OnAlertMessageBodyChanging(value);
					this.SendPropertyChanging();
					this._AlertMessageBody = value;
					this.SendPropertyChanged("AlertMessageBody");
					this.OnAlertMessageBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertMessageTopic", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AlertMessageTopic
		{
			get
			{
				return this._AlertMessageTopic;
			}
			set
			{
				if ((this._AlertMessageTopic != value))
				{
					this.OnAlertMessageTopicChanging(value);
					this.SendPropertyChanging();
					this._AlertMessageTopic = value;
					this.SendPropertyChanged("AlertMessageTopic");
					this.OnAlertMessageTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertMessageSolution", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string AlertMessageSolution
		{
			get
			{
				return this._AlertMessageSolution;
			}
			set
			{
				if ((this._AlertMessageSolution != value))
				{
					this.OnAlertMessageSolutionChanging(value);
					this.SendPropertyChanging();
					this._AlertMessageSolution = value;
					this.SendPropertyChanged("AlertMessageSolution");
					this.OnAlertMessageSolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_AlertMessage_SU_AlertMessageLang", Storage="_SU_AlertMessage", ThisKey="AlertMessageID", OtherKey="AlertMessageID", IsForeignKey=true)]
		public SU_AlertMessage SU_AlertMessage
		{
			get
			{
				return this._SU_AlertMessage.Entity;
			}
			set
			{
				SU_AlertMessage previousValue = this._SU_AlertMessage.Entity;
				if (((previousValue != value) 
							|| (this._SU_AlertMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_AlertMessage.Entity = null;
						previousValue.SU_AlertMessageLangs.Remove(this);
					}
					this._SU_AlertMessage.Entity = value;
					if ((value != null))
					{
						value.SU_AlertMessageLangs.Add(this);
						this._AlertMessageID = value.AlertMessageID;
					}
					else
					{
						this._AlertMessageID = default(short);
					}
					this.SendPropertyChanged("SU_AlertMessage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_AlertMessageLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SU_AlertMessageLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SU_AlertMessageLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_AlertMessage = default(EntityRef<SU_AlertMessage>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_Application")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _ApplicationName;
		
		private string _LogoPath;
		
		private string _DefaultHome;
		
		private string _Permission;
		
		private short _DefaultLanguageId;
		
		private string _DefaultLanguageName;
		
		private short _SessionTimeOut;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnDefaultHomeChanging(string value);
    partial void OnDefaultHomeChanged();
    partial void OnPermissionChanging(string value);
    partial void OnPermissionChanged();
    partial void OnDefaultLanguageIdChanging(short value);
    partial void OnDefaultLanguageIdChanged();
    partial void OnDefaultLanguageNameChanging(string value);
    partial void OnDefaultLanguageNameChanged();
    partial void OnSessionTimeOutChanging(short value);
    partial void OnSessionTimeOutChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_Application()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="VarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPath", DbType="VarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LogoPath
		{
			get
			{
				return this._LogoPath;
			}
			set
			{
				if ((this._LogoPath != value))
				{
					this.OnLogoPathChanging(value);
					this.SendPropertyChanging();
					this._LogoPath = value;
					this.SendPropertyChanged("LogoPath");
					this.OnLogoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultHome", DbType="VarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string DefaultHome
		{
			get
			{
				return this._DefaultHome;
			}
			set
			{
				if ((this._DefaultHome != value))
				{
					this.OnDefaultHomeChanging(value);
					this.SendPropertyChanging();
					this._DefaultHome = value;
					this.SendPropertyChanged("DefaultHome");
					this.OnDefaultHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="VarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageId", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public short DefaultLanguageId
		{
			get
			{
				return this._DefaultLanguageId;
			}
			set
			{
				if ((this._DefaultLanguageId != value))
				{
					this.OnDefaultLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageId = value;
					this.SendPropertyChanged("DefaultLanguageId");
					this.OnDefaultLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string DefaultLanguageName
		{
			get
			{
				return this._DefaultLanguageName;
			}
			set
			{
				if ((this._DefaultLanguageName != value))
				{
					this.OnDefaultLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageName = value;
					this.SendPropertyChanged("DefaultLanguageName");
					this.OnDefaultLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionTimeOut", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public short SessionTimeOut
		{
			get
			{
				return this._SessionTimeOut;
			}
			set
			{
				if ((this._SessionTimeOut != value))
				{
					this.OnSessionTimeOutChanging(value);
					this.SendPropertyChanging();
					this._SessionTimeOut = value;
					this.SendPropertyChanged("SessionTimeOut");
					this.OnSessionTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_Division")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _DivisionID;
		
		private short _OrganizationID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_DivisionLang> _SU_DivisionLangs;
		
		private EntitySet<SuUserDivision> _SuUserDivisions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIDChanging(short value);
    partial void OnDivisionIDChanged();
    partial void OnOrganizationIDChanging(short value);
    partial void OnOrganizationIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_Division()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Division_SU_DivisionLang", Storage="_SU_DivisionLangs", ThisKey="DivisionID", OtherKey="DivisionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SU_DivisionLang> SU_DivisionLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_DivisionLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_DivisionLangs;
			}
			set
			{
				this._SU_DivisionLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Division_SuUserDivision", Storage="_SuUserDivisions", ThisKey="DivisionID", OtherKey="DivisionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SuUserDivision> SuUserDivisions
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserDivisions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserDivisions;
			}
			set
			{
				this._SuUserDivisions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_DivisionLangs(SU_DivisionLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Division = this;
		}
		
		private void detach_SU_DivisionLangs(SU_DivisionLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Division = null;
		}
		
		private void attach_SuUserDivisions(SuUserDivision entity)
		{
			this.SendPropertyChanging();
			entity.SU_Division = this;
		}
		
		private void detach_SuUserDivisions(SuUserDivision entity)
		{
			this.SendPropertyChanging();
			entity.SU_Division = null;
		}
		
		private void Initialize()
		{
			this._SU_DivisionLangs = new EntitySet<SU_DivisionLang>(new Action<SU_DivisionLang>(this.attach_SU_DivisionLangs), new Action<SU_DivisionLang>(this.detach_SU_DivisionLangs));
			this._SuUserDivisions = new EntitySet<SuUserDivision>(new Action<SuUserDivision>(this.attach_SuUserDivisions), new Action<SuUserDivision>(this.detach_SuUserDivisions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_DivisionLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_DivisionLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _DivisionID;
		
		private string _DivisionName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Division> _SU_Division;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnDivisionIDChanging(short value);
    partial void OnDivisionIDChanged();
    partial void OnDivisionNameChanging(string value);
    partial void OnDivisionNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_DivisionLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					if (this._SU_Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this.OnDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._DivisionName = value;
					this.SendPropertyChanged("DivisionName");
					this.OnDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Division_SU_DivisionLang", Storage="_SU_Division", ThisKey="DivisionID", OtherKey="DivisionID", IsForeignKey=true)]
		public SU_Division SU_Division
		{
			get
			{
				return this._SU_Division.Entity;
			}
			set
			{
				SU_Division previousValue = this._SU_Division.Entity;
				if (((previousValue != value) 
							|| (this._SU_Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Division.Entity = null;
						previousValue.SU_DivisionLangs.Remove(this);
					}
					this._SU_Division.Entity = value;
					if ((value != null))
					{
						value.SU_DivisionLangs.Add(this);
						this._DivisionID = value.DivisionID;
					}
					else
					{
						this._DivisionID = default(short);
					}
					this.SendPropertyChanged("SU_Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_DivisionLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SU_DivisionLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SU_DivisionLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Division = default(EntityRef<SU_Division>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_EventLogGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_EventLogGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _EventLogGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_EventLogGroupLang> _SU_EventLogGroupLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventLogGroupIDChanging(short value);
    partial void OnEventLogGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_EventLogGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short EventLogGroupID
		{
			get
			{
				return this._EventLogGroupID;
			}
			set
			{
				if ((this._EventLogGroupID != value))
				{
					this.OnEventLogGroupIDChanging(value);
					this.SendPropertyChanging();
					this._EventLogGroupID = value;
					this.SendPropertyChanged("EventLogGroupID");
					this.OnEventLogGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_EventLogGroup_SU_EventLogGroupLang", Storage="_SU_EventLogGroupLangs", ThisKey="EventLogGroupID", OtherKey="EventLogGroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SU_EventLogGroupLang> SU_EventLogGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_EventLogGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_EventLogGroupLangs;
			}
			set
			{
				this._SU_EventLogGroupLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_EventLogGroupLangs(SU_EventLogGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_EventLogGroup = this;
		}
		
		private void detach_SU_EventLogGroupLangs(SU_EventLogGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_EventLogGroup = null;
		}
		
		private void Initialize()
		{
			this._SU_EventLogGroupLangs = new EntitySet<SU_EventLogGroupLang>(new Action<SU_EventLogGroupLang>(this.attach_SU_EventLogGroupLangs), new Action<SU_EventLogGroupLang>(this.detach_SU_EventLogGroupLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_EventLogGroupLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_EventLogGroupLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _EventLogGroupID;
		
		private string _EventLogGroupName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_EventLogGroup> _SU_EventLogGroup;
		
		private EntityRef<SU_Language> _SU_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnEventLogGroupIDChanging(short value);
    partial void OnEventLogGroupIDChanged();
    partial void OnEventLogGroupNameChanging(string value);
    partial void OnEventLogGroupNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_EventLogGroupLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short EventLogGroupID
		{
			get
			{
				return this._EventLogGroupID;
			}
			set
			{
				if ((this._EventLogGroupID != value))
				{
					if (this._SU_EventLogGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventLogGroupIDChanging(value);
					this.SendPropertyChanging();
					this._EventLogGroupID = value;
					this.SendPropertyChanged("EventLogGroupID");
					this.OnEventLogGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogGroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string EventLogGroupName
		{
			get
			{
				return this._EventLogGroupName;
			}
			set
			{
				if ((this._EventLogGroupName != value))
				{
					this.OnEventLogGroupNameChanging(value);
					this.SendPropertyChanging();
					this._EventLogGroupName = value;
					this.SendPropertyChanged("EventLogGroupName");
					this.OnEventLogGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_EventLogGroup_SU_EventLogGroupLang", Storage="_SU_EventLogGroup", ThisKey="EventLogGroupID", OtherKey="EventLogGroupID", IsForeignKey=true)]
		public SU_EventLogGroup SU_EventLogGroup
		{
			get
			{
				return this._SU_EventLogGroup.Entity;
			}
			set
			{
				SU_EventLogGroup previousValue = this._SU_EventLogGroup.Entity;
				if (((previousValue != value) 
							|| (this._SU_EventLogGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_EventLogGroup.Entity = null;
						previousValue.SU_EventLogGroupLangs.Remove(this);
					}
					this._SU_EventLogGroup.Entity = value;
					if ((value != null))
					{
						value.SU_EventLogGroupLangs.Add(this);
						this._EventLogGroupID = value.EventLogGroupID;
					}
					else
					{
						this._EventLogGroupID = default(short);
					}
					this.SendPropertyChanged("SU_EventLogGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_EventLogGroupLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SU_EventLogGroupLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SU_EventLogGroupLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_EventLogGroup = default(EntityRef<SU_EventLogGroup>);
			this._SU_Language = default(EntityRef<SU_Language>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_Language")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private string _LanguageName;
		
		private string _ImagePath;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _Rowversion;
		
		private bool _Active;
		
		private EntitySet<DB_CityLang> _DB_CityLangs;
		
		private EntitySet<DB_CountryLang> _DB_CountryLangs;
		
		private EntitySet<DB_DistrictLang> _DB_DistrictLangs;
		
		private EntitySet<DB_PrefixLang> _DB_PrefixLangs;
		
		private EntitySet<DB_ProvinceLang> _DB_ProvinceLangs;
		
		private EntitySet<DB_RegionLang> _DB_RegionLangs;
		
		private EntitySet<DB_ZoneLang> _DB_ZoneLangs;
		
		private EntitySet<SU_AlertGroupLang> _SU_AlertGroupLangs;
		
		private EntitySet<SU_AlertMessageLang> _SU_AlertMessageLangs;
		
		private EntitySet<SU_DivisionLang> _SU_DivisionLangs;
		
		private EntitySet<SU_EventLogGroupLang> _SU_EventLogGroupLangs;
		
		private EntitySet<SU_MenuGroupLang> _SU_MenuGroupLangs;
		
		private EntitySet<SU_OrganizationLang> _SU_OrganizationLangs;
		
		private EntitySet<SuProgramLang> _SuProgramLangs;
		
		private EntitySet<SuRoleGroupLang> _SuRoleGroupLangs;
		
		private EntitySet<SuUser> _SuUsers;
		
		private EntitySet<SuUserProfileLang> _SuUserProfileLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowversionChanging(byte[] value);
    partial void OnRowversionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_Language()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowversion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] Rowversion
		{
			get
			{
				return this._Rowversion;
			}
			set
			{
				if ((this._Rowversion != value))
				{
					this.OnRowversionChanging(value);
					this.SendPropertyChanging();
					this._Rowversion = value;
					this.SendPropertyChanged("Rowversion");
					this.OnRowversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_CityLang", Storage="_DB_CityLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DB_CityLang> DB_CityLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_CityLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_CityLangs;
			}
			set
			{
				this._DB_CityLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_CountryLang", Storage="_DB_CountryLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<DB_CountryLang> DB_CountryLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_CountryLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_CountryLangs;
			}
			set
			{
				this._DB_CountryLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_DistrictLang", Storage="_DB_DistrictLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<DB_DistrictLang> DB_DistrictLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_DistrictLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_DistrictLangs;
			}
			set
			{
				this._DB_DistrictLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_PrefixLang", Storage="_DB_PrefixLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<DB_PrefixLang> DB_PrefixLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_PrefixLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_PrefixLangs;
			}
			set
			{
				this._DB_PrefixLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_ProvinceLang", Storage="_DB_ProvinceLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<DB_ProvinceLang> DB_ProvinceLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_ProvinceLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_ProvinceLangs;
			}
			set
			{
				this._DB_ProvinceLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_RegionLang", Storage="_DB_RegionLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<DB_RegionLang> DB_RegionLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_RegionLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_RegionLangs;
			}
			set
			{
				this._DB_RegionLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_DB_ZoneLang", Storage="_DB_ZoneLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<DB_ZoneLang> DB_ZoneLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._DB_ZoneLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DB_ZoneLangs;
			}
			set
			{
				this._DB_ZoneLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_AlertGroupLang", Storage="_SU_AlertGroupLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<SU_AlertGroupLang> SU_AlertGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_AlertGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_AlertGroupLangs;
			}
			set
			{
				this._SU_AlertGroupLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_AlertMessageLang", Storage="_SU_AlertMessageLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<SU_AlertMessageLang> SU_AlertMessageLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_AlertMessageLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_AlertMessageLangs;
			}
			set
			{
				this._SU_AlertMessageLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_DivisionLang", Storage="_SU_DivisionLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<SU_DivisionLang> SU_DivisionLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_DivisionLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_DivisionLangs;
			}
			set
			{
				this._SU_DivisionLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_EventLogGroupLang", Storage="_SU_EventLogGroupLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<SU_EventLogGroupLang> SU_EventLogGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_EventLogGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_EventLogGroupLangs;
			}
			set
			{
				this._SU_EventLogGroupLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_MenuGroupLang", Storage="_SU_MenuGroupLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<SU_MenuGroupLang> SU_MenuGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_MenuGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_MenuGroupLangs;
			}
			set
			{
				this._SU_MenuGroupLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_OrganizationLang", Storage="_SU_OrganizationLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<SU_OrganizationLang> SU_OrganizationLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_OrganizationLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_OrganizationLangs;
			}
			set
			{
				this._SU_OrganizationLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuProgramLang", Storage="_SuProgramLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<SuProgramLang> SuProgramLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuProgramLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuProgramLangs;
			}
			set
			{
				this._SuProgramLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuRoleGroupLang", Storage="_SuRoleGroupLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<SuRoleGroupLang> SuRoleGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuRoleGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuRoleGroupLangs;
			}
			set
			{
				this._SuRoleGroupLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuUser", Storage="_SuUsers", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<SuUser> SuUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUsers;
			}
			set
			{
				this._SuUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuUserProfileLang", Storage="_SuUserProfileLangs", ThisKey="LanguageID", OtherKey="LanguageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<SuUserProfileLang> SuUserProfileLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserProfileLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserProfileLangs;
			}
			set
			{
				this._SuUserProfileLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_CityLangs(DB_CityLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_CityLangs(DB_CityLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_DB_CountryLangs(DB_CountryLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_CountryLangs(DB_CountryLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_DB_DistrictLangs(DB_DistrictLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_DistrictLangs(DB_DistrictLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_DB_PrefixLangs(DB_PrefixLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_PrefixLangs(DB_PrefixLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_DB_ProvinceLangs(DB_ProvinceLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_ProvinceLangs(DB_ProvinceLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_DB_RegionLangs(DB_RegionLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_RegionLangs(DB_RegionLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_DB_ZoneLangs(DB_ZoneLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_DB_ZoneLangs(DB_ZoneLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SU_AlertGroupLangs(SU_AlertGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SU_AlertGroupLangs(SU_AlertGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SU_AlertMessageLangs(SU_AlertMessageLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SU_AlertMessageLangs(SU_AlertMessageLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SU_DivisionLangs(SU_DivisionLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SU_DivisionLangs(SU_DivisionLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SU_EventLogGroupLangs(SU_EventLogGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SU_EventLogGroupLangs(SU_EventLogGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SU_MenuGroupLangs(SU_MenuGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SU_MenuGroupLangs(SU_MenuGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SU_OrganizationLangs(SU_OrganizationLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SU_OrganizationLangs(SU_OrganizationLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SuProgramLangs(SuProgramLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SuProgramLangs(SuProgramLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SuRoleGroupLangs(SuRoleGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SuRoleGroupLangs(SuRoleGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SuUsers(SuUser entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SuUsers(SuUser entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void attach_SuUserProfileLangs(SuUserProfileLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = this;
		}
		
		private void detach_SuUserProfileLangs(SuUserProfileLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Language = null;
		}
		
		private void Initialize()
		{
			this._DB_CityLangs = new EntitySet<DB_CityLang>(new Action<DB_CityLang>(this.attach_DB_CityLangs), new Action<DB_CityLang>(this.detach_DB_CityLangs));
			this._DB_CountryLangs = new EntitySet<DB_CountryLang>(new Action<DB_CountryLang>(this.attach_DB_CountryLangs), new Action<DB_CountryLang>(this.detach_DB_CountryLangs));
			this._DB_DistrictLangs = new EntitySet<DB_DistrictLang>(new Action<DB_DistrictLang>(this.attach_DB_DistrictLangs), new Action<DB_DistrictLang>(this.detach_DB_DistrictLangs));
			this._DB_PrefixLangs = new EntitySet<DB_PrefixLang>(new Action<DB_PrefixLang>(this.attach_DB_PrefixLangs), new Action<DB_PrefixLang>(this.detach_DB_PrefixLangs));
			this._DB_ProvinceLangs = new EntitySet<DB_ProvinceLang>(new Action<DB_ProvinceLang>(this.attach_DB_ProvinceLangs), new Action<DB_ProvinceLang>(this.detach_DB_ProvinceLangs));
			this._DB_RegionLangs = new EntitySet<DB_RegionLang>(new Action<DB_RegionLang>(this.attach_DB_RegionLangs), new Action<DB_RegionLang>(this.detach_DB_RegionLangs));
			this._DB_ZoneLangs = new EntitySet<DB_ZoneLang>(new Action<DB_ZoneLang>(this.attach_DB_ZoneLangs), new Action<DB_ZoneLang>(this.detach_DB_ZoneLangs));
			this._SU_AlertGroupLangs = new EntitySet<SU_AlertGroupLang>(new Action<SU_AlertGroupLang>(this.attach_SU_AlertGroupLangs), new Action<SU_AlertGroupLang>(this.detach_SU_AlertGroupLangs));
			this._SU_AlertMessageLangs = new EntitySet<SU_AlertMessageLang>(new Action<SU_AlertMessageLang>(this.attach_SU_AlertMessageLangs), new Action<SU_AlertMessageLang>(this.detach_SU_AlertMessageLangs));
			this._SU_DivisionLangs = new EntitySet<SU_DivisionLang>(new Action<SU_DivisionLang>(this.attach_SU_DivisionLangs), new Action<SU_DivisionLang>(this.detach_SU_DivisionLangs));
			this._SU_EventLogGroupLangs = new EntitySet<SU_EventLogGroupLang>(new Action<SU_EventLogGroupLang>(this.attach_SU_EventLogGroupLangs), new Action<SU_EventLogGroupLang>(this.detach_SU_EventLogGroupLangs));
			this._SU_MenuGroupLangs = new EntitySet<SU_MenuGroupLang>(new Action<SU_MenuGroupLang>(this.attach_SU_MenuGroupLangs), new Action<SU_MenuGroupLang>(this.detach_SU_MenuGroupLangs));
			this._SU_OrganizationLangs = new EntitySet<SU_OrganizationLang>(new Action<SU_OrganizationLang>(this.attach_SU_OrganizationLangs), new Action<SU_OrganizationLang>(this.detach_SU_OrganizationLangs));
			this._SuProgramLangs = new EntitySet<SuProgramLang>(new Action<SuProgramLang>(this.attach_SuProgramLangs), new Action<SuProgramLang>(this.detach_SuProgramLangs));
			this._SuRoleGroupLangs = new EntitySet<SuRoleGroupLang>(new Action<SuRoleGroupLang>(this.attach_SuRoleGroupLangs), new Action<SuRoleGroupLang>(this.detach_SuRoleGroupLangs));
			this._SuUsers = new EntitySet<SuUser>(new Action<SuUser>(this.attach_SuUsers), new Action<SuUser>(this.detach_SuUsers));
			this._SuUserProfileLangs = new EntitySet<SuUserProfileLang>(new Action<SuUserProfileLang>(this.attach_SuUserProfileLangs), new Action<SuUserProfileLang>(this.detach_SuUserProfileLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_Menu")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _MenuID;
		
		private short _MenuGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_MenuLang> _SU_MenuLangs;
		
		private EntitySet<SuProgramMenu> _SuProgramMenus;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(short value);
    partial void OnMenuIDChanged();
    partial void OnMenuGroupIDChanging(short value);
    partial void OnMenuGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_Menu()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short MenuGroupID
		{
			get
			{
				return this._MenuGroupID;
			}
			set
			{
				if ((this._MenuGroupID != value))
				{
					this.OnMenuGroupIDChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupID = value;
					this.SendPropertyChanged("MenuGroupID");
					this.OnMenuGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Menu_SU_MenuLang", Storage="_SU_MenuLangs", ThisKey="MenuID", OtherKey="MenuID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SU_MenuLang> SU_MenuLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_MenuLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_MenuLangs;
			}
			set
			{
				this._SU_MenuLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Menu_SuProgramMenu", Storage="_SuProgramMenus", ThisKey="MenuID", OtherKey="MenuID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SuProgramMenu> SuProgramMenus
		{
			get
			{
				if ((this.serializing 
							&& (this._SuProgramMenus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuProgramMenus;
			}
			set
			{
				this._SuProgramMenus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_MenuLangs(SU_MenuLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Menu = this;
		}
		
		private void detach_SU_MenuLangs(SU_MenuLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Menu = null;
		}
		
		private void attach_SuProgramMenus(SuProgramMenu entity)
		{
			this.SendPropertyChanging();
			entity.SU_Menu = this;
		}
		
		private void detach_SuProgramMenus(SuProgramMenu entity)
		{
			this.SendPropertyChanging();
			entity.SU_Menu = null;
		}
		
		private void Initialize()
		{
			this._SU_MenuLangs = new EntitySet<SU_MenuLang>(new Action<SU_MenuLang>(this.attach_SU_MenuLangs), new Action<SU_MenuLang>(this.detach_SU_MenuLangs));
			this._SuProgramMenus = new EntitySet<SuProgramMenu>(new Action<SuProgramMenu>(this.attach_SuProgramMenus), new Action<SuProgramMenu>(this.detach_SuProgramMenus));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_MenuGroupLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_MenuGroupLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _MenuGroupID;
		
		private string _MenuGroupName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Language> _SU_Language;
		
		private EntityRef<SU_MenusGroup> _SU_MenusGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnMenuGroupIDChanging(short value);
    partial void OnMenuGroupIDChanged();
    partial void OnMenuGroupNameChanging(string value);
    partial void OnMenuGroupNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_MenuGroupLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short MenuGroupID
		{
			get
			{
				return this._MenuGroupID;
			}
			set
			{
				if ((this._MenuGroupID != value))
				{
					if (this._SU_MenusGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuGroupIDChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupID = value;
					this.SendPropertyChanged("MenuGroupID");
					this.OnMenuGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MenuGroupName
		{
			get
			{
				return this._MenuGroupName;
			}
			set
			{
				if ((this._MenuGroupName != value))
				{
					this.OnMenuGroupNameChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupName = value;
					this.SendPropertyChanged("MenuGroupName");
					this.OnMenuGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_MenuGroupLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SU_MenuGroupLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SU_MenuGroupLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_MenusGroup_SU_MenuGroupLang", Storage="_SU_MenusGroup", ThisKey="MenuGroupID", OtherKey="MenuGroupID", IsForeignKey=true)]
		public SU_MenusGroup SU_MenusGroup
		{
			get
			{
				return this._SU_MenusGroup.Entity;
			}
			set
			{
				SU_MenusGroup previousValue = this._SU_MenusGroup.Entity;
				if (((previousValue != value) 
							|| (this._SU_MenusGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_MenusGroup.Entity = null;
						previousValue.SU_MenuGroupLangs.Remove(this);
					}
					this._SU_MenusGroup.Entity = value;
					if ((value != null))
					{
						value.SU_MenuGroupLangs.Add(this);
						this._MenuGroupID = value.MenuGroupID;
					}
					else
					{
						this._MenuGroupID = default(short);
					}
					this.SendPropertyChanged("SU_MenusGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Language = default(EntityRef<SU_Language>);
			this._SU_MenusGroup = default(EntityRef<SU_MenusGroup>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_MenuLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_MenuLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _MenuLangID;
		
		private short _LanguageID;
		
		private short _MenuID;
		
		private string _MenuName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Menu> _SU_Menu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuLangIDChanging(short value);
    partial void OnMenuLangIDChanged();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnMenuIDChanging(short value);
    partial void OnMenuIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_MenuLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuLangID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short MenuLangID
		{
			get
			{
				return this._MenuLangID;
			}
			set
			{
				if ((this._MenuLangID != value))
				{
					this.OnMenuLangIDChanging(value);
					this.SendPropertyChanging();
					this._MenuLangID = value;
					this.SendPropertyChanged("MenuLangID");
					this.OnMenuLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public short MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._SU_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Menu_SU_MenuLang", Storage="_SU_Menu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public SU_Menu SU_Menu
		{
			get
			{
				return this._SU_Menu.Entity;
			}
			set
			{
				SU_Menu previousValue = this._SU_Menu.Entity;
				if (((previousValue != value) 
							|| (this._SU_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Menu.Entity = null;
						previousValue.SU_MenuLangs.Remove(this);
					}
					this._SU_Menu.Entity = value;
					if ((value != null))
					{
						value.SU_MenuLangs.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(short);
					}
					this.SendPropertyChanged("SU_Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Menu = default(EntityRef<SU_Menu>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_MenusGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_MenusGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _MenuGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_MenuGroupLang> _SU_MenuGroupLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuGroupIDChanging(short value);
    partial void OnMenuGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_MenusGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short MenuGroupID
		{
			get
			{
				return this._MenuGroupID;
			}
			set
			{
				if ((this._MenuGroupID != value))
				{
					this.OnMenuGroupIDChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupID = value;
					this.SendPropertyChanged("MenuGroupID");
					this.OnMenuGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_MenusGroup_SU_MenuGroupLang", Storage="_SU_MenuGroupLangs", ThisKey="MenuGroupID", OtherKey="MenuGroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SU_MenuGroupLang> SU_MenuGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_MenuGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_MenuGroupLangs;
			}
			set
			{
				this._SU_MenuGroupLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_MenuGroupLangs(SU_MenuGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_MenusGroup = this;
		}
		
		private void detach_SU_MenuGroupLangs(SU_MenuGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_MenusGroup = null;
		}
		
		private void Initialize()
		{
			this._SU_MenuGroupLangs = new EntitySet<SU_MenuGroupLang>(new Action<SU_MenuGroupLang>(this.attach_SU_MenuGroupLangs), new Action<SU_MenuGroupLang>(this.detach_SU_MenuGroupLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_Organization")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OrganizationID;
		
		private int _AddressID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SU_OrganizationLang> _SU_OrganizationLangs;
		
		private EntitySet<SuUser> _SuUsers;
		
		private EntitySet<SuUserOrgPermission> _SuUserOrgPermissions;
		
		private EntityRef<DB_Address> _DB_Address;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationIDChanging(short value);
    partial void OnOrganizationIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_Organization()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._DB_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Organization_SU_OrganizationLang", Storage="_SU_OrganizationLangs", ThisKey="OrganizationID", OtherKey="OrganizationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SU_OrganizationLang> SU_OrganizationLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SU_OrganizationLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SU_OrganizationLangs;
			}
			set
			{
				this._SU_OrganizationLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Organization_SuUser", Storage="_SuUsers", ThisKey="OrganizationID", OtherKey="OrganizationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SuUser> SuUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUsers;
			}
			set
			{
				this._SuUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Organization_SuUserOrgPermission", Storage="_SuUserOrgPermissions", ThisKey="OrganizationID", OtherKey="OrganizationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<SuUserOrgPermission> SuUserOrgPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserOrgPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserOrgPermissions;
			}
			set
			{
				this._SuUserOrgPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Address_SU_Organization", Storage="_DB_Address", ThisKey="AddressID", OtherKey="AddressID", IsForeignKey=true)]
		public DB_Address DB_Address
		{
			get
			{
				return this._DB_Address.Entity;
			}
			set
			{
				DB_Address previousValue = this._DB_Address.Entity;
				if (((previousValue != value) 
							|| (this._DB_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Address.Entity = null;
						previousValue.SU_Organizations.Remove(this);
					}
					this._DB_Address.Entity = value;
					if ((value != null))
					{
						value.SU_Organizations.Add(this);
						this._AddressID = value.AddressID;
					}
					else
					{
						this._AddressID = default(int);
					}
					this.SendPropertyChanged("DB_Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SU_OrganizationLangs(SU_OrganizationLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Organization = this;
		}
		
		private void detach_SU_OrganizationLangs(SU_OrganizationLang entity)
		{
			this.SendPropertyChanging();
			entity.SU_Organization = null;
		}
		
		private void attach_SuUsers(SuUser entity)
		{
			this.SendPropertyChanging();
			entity.SU_Organization = this;
		}
		
		private void detach_SuUsers(SuUser entity)
		{
			this.SendPropertyChanging();
			entity.SU_Organization = null;
		}
		
		private void attach_SuUserOrgPermissions(SuUserOrgPermission entity)
		{
			this.SendPropertyChanging();
			entity.SU_Organization = this;
		}
		
		private void detach_SuUserOrgPermissions(SuUserOrgPermission entity)
		{
			this.SendPropertyChanging();
			entity.SU_Organization = null;
		}
		
		private void Initialize()
		{
			this._SU_OrganizationLangs = new EntitySet<SU_OrganizationLang>(new Action<SU_OrganizationLang>(this.attach_SU_OrganizationLangs), new Action<SU_OrganizationLang>(this.detach_SU_OrganizationLangs));
			this._SuUsers = new EntitySet<SuUser>(new Action<SuUser>(this.attach_SuUsers), new Action<SuUser>(this.detach_SuUsers));
			this._SuUserOrgPermissions = new EntitySet<SuUserOrgPermission>(new Action<SuUserOrgPermission>(this.attach_SuUserOrgPermissions), new Action<SuUserOrgPermission>(this.detach_SuUserOrgPermissions));
			this._DB_Address = default(EntityRef<DB_Address>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SU_OrganizationLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SU_OrganizationLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _OrganizationID;
		
		private string _OrganizationName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Language> _SU_Language;
		
		private EntityRef<SU_Organization> _SU_Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnOrganizationIDChanging(short value);
    partial void OnOrganizationIDChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SU_OrganizationLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					if (this._SU_Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SU_OrganizationLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SU_OrganizationLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SU_OrganizationLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Organization_SU_OrganizationLang", Storage="_SU_Organization", ThisKey="OrganizationID", OtherKey="OrganizationID", IsForeignKey=true)]
		public SU_Organization SU_Organization
		{
			get
			{
				return this._SU_Organization.Entity;
			}
			set
			{
				SU_Organization previousValue = this._SU_Organization.Entity;
				if (((previousValue != value) 
							|| (this._SU_Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Organization.Entity = null;
						previousValue.SU_OrganizationLangs.Remove(this);
					}
					this._SU_Organization.Entity = value;
					if ((value != null))
					{
						value.SU_OrganizationLangs.Add(this);
						this._OrganizationID = value.OrganizationID;
					}
					else
					{
						this._OrganizationID = default(short);
					}
					this.SendPropertyChanged("SU_Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Language = default(EntityRef<SU_Language>);
			this._SU_Organization = default(EntityRef<SU_Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuProgram")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuProgram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ProgramCode;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SuProgramLang> _SuProgramLangs;
		
		private EntitySet<SuProgramMenu> _SuProgramMenus;
		
		private EntitySet<SuProgramRole> _SuProgramRoles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramCodeChanging(short value);
    partial void OnProgramCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuProgram()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this.OnProgramCodeChanging(value);
					this.SendPropertyChanging();
					this._ProgramCode = value;
					this.SendPropertyChanged("ProgramCode");
					this.OnProgramCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuProgram_SuProgramLang", Storage="_SuProgramLangs", ThisKey="ProgramCode", OtherKey="ProgramCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SuProgramLang> SuProgramLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuProgramLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuProgramLangs;
			}
			set
			{
				this._SuProgramLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuProgram_SuProgramMenu", Storage="_SuProgramMenus", ThisKey="ProgramCode", OtherKey="ProgramCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SuProgramMenu> SuProgramMenus
		{
			get
			{
				if ((this.serializing 
							&& (this._SuProgramMenus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuProgramMenus;
			}
			set
			{
				this._SuProgramMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuProgram_SuProgramRole", Storage="_SuProgramRoles", ThisKey="ProgramCode", OtherKey="ProgramCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SuProgramRole> SuProgramRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuProgramRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuProgramRoles;
			}
			set
			{
				this._SuProgramRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuProgramLangs(SuProgramLang entity)
		{
			this.SendPropertyChanging();
			entity.SuProgram = this;
		}
		
		private void detach_SuProgramLangs(SuProgramLang entity)
		{
			this.SendPropertyChanging();
			entity.SuProgram = null;
		}
		
		private void attach_SuProgramMenus(SuProgramMenu entity)
		{
			this.SendPropertyChanging();
			entity.SuProgram = this;
		}
		
		private void detach_SuProgramMenus(SuProgramMenu entity)
		{
			this.SendPropertyChanging();
			entity.SuProgram = null;
		}
		
		private void attach_SuProgramRoles(SuProgramRole entity)
		{
			this.SendPropertyChanging();
			entity.SuProgram = this;
		}
		
		private void detach_SuProgramRoles(SuProgramRole entity)
		{
			this.SendPropertyChanging();
			entity.SuProgram = null;
		}
		
		private void Initialize()
		{
			this._SuProgramLangs = new EntitySet<SuProgramLang>(new Action<SuProgramLang>(this.attach_SuProgramLangs), new Action<SuProgramLang>(this.detach_SuProgramLangs));
			this._SuProgramMenus = new EntitySet<SuProgramMenu>(new Action<SuProgramMenu>(this.attach_SuProgramMenus), new Action<SuProgramMenu>(this.detach_SuProgramMenus));
			this._SuProgramRoles = new EntitySet<SuProgramRole>(new Action<SuProgramRole>(this.attach_SuProgramRoles), new Action<SuProgramRole>(this.detach_SuProgramRoles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuProgramLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuProgramLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _ProgramCode;
		
		private string _ProgramsName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Language> _SU_Language;
		
		private EntityRef<SuProgram> _SuProgram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnProgramCodeChanging(short value);
    partial void OnProgramCodeChanged();
    partial void OnProgramsNameChanging(string value);
    partial void OnProgramsNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuProgramLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					if (this._SuProgram.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramCodeChanging(value);
					this.SendPropertyChanging();
					this._ProgramCode = value;
					this.SendPropertyChanged("ProgramCode");
					this.OnProgramCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramsName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProgramsName
		{
			get
			{
				return this._ProgramsName;
			}
			set
			{
				if ((this._ProgramsName != value))
				{
					this.OnProgramsNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramsName = value;
					this.SendPropertyChanged("ProgramsName");
					this.OnProgramsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuProgramLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SuProgramLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SuProgramLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuProgram_SuProgramLang", Storage="_SuProgram", ThisKey="ProgramCode", OtherKey="ProgramCode", IsForeignKey=true)]
		public SuProgram SuProgram
		{
			get
			{
				return this._SuProgram.Entity;
			}
			set
			{
				SuProgram previousValue = this._SuProgram.Entity;
				if (((previousValue != value) 
							|| (this._SuProgram.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuProgram.Entity = null;
						previousValue.SuProgramLangs.Remove(this);
					}
					this._SuProgram.Entity = value;
					if ((value != null))
					{
						value.SuProgramLangs.Add(this);
						this._ProgramCode = value.ProgramCode;
					}
					else
					{
						this._ProgramCode = default(short);
					}
					this.SendPropertyChanged("SuProgram");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Language = default(EntityRef<SU_Language>);
			this._SuProgram = default(EntityRef<SuProgram>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuProgramMenu")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuProgramMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _MenuID;
		
		private short _ProgramCode;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Menu> _SU_Menu;
		
		private EntityRef<SuProgram> _SuProgram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(short value);
    partial void OnMenuIDChanged();
    partial void OnProgramCodeChanging(short value);
    partial void OnProgramCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuProgramMenu()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._SU_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					if (this._SuProgram.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramCodeChanging(value);
					this.SendPropertyChanging();
					this._ProgramCode = value;
					this.SendPropertyChanged("ProgramCode");
					this.OnProgramCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Menu_SuProgramMenu", Storage="_SU_Menu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public SU_Menu SU_Menu
		{
			get
			{
				return this._SU_Menu.Entity;
			}
			set
			{
				SU_Menu previousValue = this._SU_Menu.Entity;
				if (((previousValue != value) 
							|| (this._SU_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Menu.Entity = null;
						previousValue.SuProgramMenus.Remove(this);
					}
					this._SU_Menu.Entity = value;
					if ((value != null))
					{
						value.SuProgramMenus.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(short);
					}
					this.SendPropertyChanged("SU_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuProgram_SuProgramMenu", Storage="_SuProgram", ThisKey="ProgramCode", OtherKey="ProgramCode", IsForeignKey=true)]
		public SuProgram SuProgram
		{
			get
			{
				return this._SuProgram.Entity;
			}
			set
			{
				SuProgram previousValue = this._SuProgram.Entity;
				if (((previousValue != value) 
							|| (this._SuProgram.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuProgram.Entity = null;
						previousValue.SuProgramMenus.Remove(this);
					}
					this._SuProgram.Entity = value;
					if ((value != null))
					{
						value.SuProgramMenus.Add(this);
						this._ProgramCode = value.ProgramCode;
					}
					else
					{
						this._ProgramCode = default(short);
					}
					this.SendPropertyChanged("SuProgram");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Menu = default(EntityRef<SU_Menu>);
			this._SuProgram = default(EntityRef<SuProgram>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuProgramRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuProgramRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleID;
		
		private short _ProgramCode;
		
		private bool _AddState;
		
		private bool _EditState;
		
		private bool _DeleteState;
		
		private bool _DisplayState;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SuProgram> _SuProgram;
		
		private EntityRef<SuRole> _SuRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(short value);
    partial void OnRoleIDChanged();
    partial void OnProgramCodeChanging(short value);
    partial void OnProgramCodeChanged();
    partial void OnAddStateChanging(bool value);
    partial void OnAddStateChanged();
    partial void OnEditStateChanging(bool value);
    partial void OnEditStateChanged();
    partial void OnDeleteStateChanging(bool value);
    partial void OnDeleteStateChanged();
    partial void OnDisplayStateChanging(bool value);
    partial void OnDisplayStateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuProgramRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._SuRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					if (this._SuProgram.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramCodeChanging(value);
					this.SendPropertyChanging();
					this._ProgramCode = value;
					this.SendPropertyChanged("ProgramCode");
					this.OnProgramCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddState", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool AddState
		{
			get
			{
				return this._AddState;
			}
			set
			{
				if ((this._AddState != value))
				{
					this.OnAddStateChanging(value);
					this.SendPropertyChanging();
					this._AddState = value;
					this.SendPropertyChanged("AddState");
					this.OnAddStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditState", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool EditState
		{
			get
			{
				return this._EditState;
			}
			set
			{
				if ((this._EditState != value))
				{
					this.OnEditStateChanging(value);
					this.SendPropertyChanging();
					this._EditState = value;
					this.SendPropertyChanged("EditState");
					this.OnEditStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteState", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool DeleteState
		{
			get
			{
				return this._DeleteState;
			}
			set
			{
				if ((this._DeleteState != value))
				{
					this.OnDeleteStateChanging(value);
					this.SendPropertyChanging();
					this._DeleteState = value;
					this.SendPropertyChanged("DeleteState");
					this.OnDeleteStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayState", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool DisplayState
		{
			get
			{
				return this._DisplayState;
			}
			set
			{
				if ((this._DisplayState != value))
				{
					this.OnDisplayStateChanging(value);
					this.SendPropertyChanging();
					this._DisplayState = value;
					this.SendPropertyChanged("DisplayState");
					this.OnDisplayStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuProgram_SuProgramRole", Storage="_SuProgram", ThisKey="ProgramCode", OtherKey="ProgramCode", IsForeignKey=true)]
		public SuProgram SuProgram
		{
			get
			{
				return this._SuProgram.Entity;
			}
			set
			{
				SuProgram previousValue = this._SuProgram.Entity;
				if (((previousValue != value) 
							|| (this._SuProgram.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuProgram.Entity = null;
						previousValue.SuProgramRoles.Remove(this);
					}
					this._SuProgram.Entity = value;
					if ((value != null))
					{
						value.SuProgramRoles.Add(this);
						this._ProgramCode = value.ProgramCode;
					}
					else
					{
						this._ProgramCode = default(short);
					}
					this.SendPropertyChanged("SuProgram");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRole_SuProgramRole", Storage="_SuRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public SuRole SuRole
		{
			get
			{
				return this._SuRole.Entity;
			}
			set
			{
				SuRole previousValue = this._SuRole.Entity;
				if (((previousValue != value) 
							|| (this._SuRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuRole.Entity = null;
						previousValue.SuProgramRoles.Remove(this);
					}
					this._SuRole.Entity = value;
					if ((value != null))
					{
						value.SuProgramRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(short);
					}
					this.SendPropertyChanged("SuRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SuProgram = default(EntityRef<SuProgram>);
			this._SuRole = default(EntityRef<SuRole>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleID;
		
		private short _RoleGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SuUserRole> _SuUserRoles;
		
		private EntitySet<SuProgramRole> _SuProgramRoles;
		
		private EntitySet<SuSession> _SuSessions;
		
		private EntityRef<SuRoleGroup> _SuRoleGroup;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(short value);
    partial void OnRoleIDChanged();
    partial void OnRoleGroupIDChanging(short value);
    partial void OnRoleGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					if (this._SuRoleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRole_SuUserRole", Storage="_SuUserRoles", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SuUserRole> SuUserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserRoles;
			}
			set
			{
				this._SuUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRole_SuProgramRole", Storage="_SuProgramRoles", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SuProgramRole> SuProgramRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuProgramRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuProgramRoles;
			}
			set
			{
				this._SuProgramRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRole_SuSession", Storage="_SuSessions", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<SuSession> SuSessions
		{
			get
			{
				if ((this.serializing 
							&& (this._SuSessions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuSessions;
			}
			set
			{
				this._SuSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRoleGroup_SuRole", Storage="_SuRoleGroup", ThisKey="RoleGroupID", OtherKey="RoleGroupID", IsForeignKey=true)]
		public SuRoleGroup SuRoleGroup
		{
			get
			{
				return this._SuRoleGroup.Entity;
			}
			set
			{
				SuRoleGroup previousValue = this._SuRoleGroup.Entity;
				if (((previousValue != value) 
							|| (this._SuRoleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuRoleGroup.Entity = null;
						previousValue.SuRoles.Remove(this);
					}
					this._SuRoleGroup.Entity = value;
					if ((value != null))
					{
						value.SuRoles.Add(this);
						this._RoleGroupID = value.RoleGroupID;
					}
					else
					{
						this._RoleGroupID = default(short);
					}
					this.SendPropertyChanged("SuRoleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuUserRoles(SuUserRole entity)
		{
			this.SendPropertyChanging();
			entity.SuRole = this;
		}
		
		private void detach_SuUserRoles(SuUserRole entity)
		{
			this.SendPropertyChanging();
			entity.SuRole = null;
		}
		
		private void attach_SuProgramRoles(SuProgramRole entity)
		{
			this.SendPropertyChanging();
			entity.SuRole = this;
		}
		
		private void detach_SuProgramRoles(SuProgramRole entity)
		{
			this.SendPropertyChanging();
			entity.SuRole = null;
		}
		
		private void attach_SuSessions(SuSession entity)
		{
			this.SendPropertyChanging();
			entity.SuRole = this;
		}
		
		private void detach_SuSessions(SuSession entity)
		{
			this.SendPropertyChanging();
			entity.SuRole = null;
		}
		
		private void Initialize()
		{
			this._SuUserRoles = new EntitySet<SuUserRole>(new Action<SuUserRole>(this.attach_SuUserRoles), new Action<SuUserRole>(this.detach_SuUserRoles));
			this._SuProgramRoles = new EntitySet<SuProgramRole>(new Action<SuProgramRole>(this.attach_SuProgramRoles), new Action<SuProgramRole>(this.detach_SuProgramRoles));
			this._SuSessions = new EntitySet<SuSession>(new Action<SuSession>(this.attach_SuSessions), new Action<SuSession>(this.detach_SuSessions));
			this._SuRoleGroup = default(EntityRef<SuRoleGroup>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuRoleGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuRoleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleGroupID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SuRole> _SuRoles;
		
		private EntitySet<SuRoleGroupLang> _SuRoleGroupLangs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleGroupIDChanging(short value);
    partial void OnRoleGroupIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuRoleGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRoleGroup_SuRole", Storage="_SuRoles", ThisKey="RoleGroupID", OtherKey="RoleGroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SuRole> SuRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuRoles;
			}
			set
			{
				this._SuRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRoleGroup_SuRoleGroupLang", Storage="_SuRoleGroupLangs", ThisKey="RoleGroupID", OtherKey="RoleGroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SuRoleGroupLang> SuRoleGroupLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuRoleGroupLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuRoleGroupLangs;
			}
			set
			{
				this._SuRoleGroupLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuRoles(SuRole entity)
		{
			this.SendPropertyChanging();
			entity.SuRoleGroup = this;
		}
		
		private void detach_SuRoles(SuRole entity)
		{
			this.SendPropertyChanging();
			entity.SuRoleGroup = null;
		}
		
		private void attach_SuRoleGroupLangs(SuRoleGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SuRoleGroup = this;
		}
		
		private void detach_SuRoleGroupLangs(SuRoleGroupLang entity)
		{
			this.SendPropertyChanging();
			entity.SuRoleGroup = null;
		}
		
		private void Initialize()
		{
			this._SuRoles = new EntitySet<SuRole>(new Action<SuRole>(this.attach_SuRoles), new Action<SuRole>(this.detach_SuRoles));
			this._SuRoleGroupLangs = new EntitySet<SuRoleGroupLang>(new Action<SuRoleGroupLang>(this.attach_SuRoleGroupLangs), new Action<SuRoleGroupLang>(this.detach_SuRoleGroupLangs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuRoleGroupLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuRoleGroupLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LanguageID;
		
		private short _RoleGroupID;
		
		private string _RoleGroupName;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Language> _SU_Language;
		
		private EntityRef<SuRoleGroup> _SuRoleGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnRoleGroupIDChanging(short value);
    partial void OnRoleGroupIDChanged();
    partial void OnRoleGroupNameChanging(string value);
    partial void OnRoleGroupNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuRoleGroupLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					if (this._SuRoleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RoleGroupName
		{
			get
			{
				return this._RoleGroupName;
			}
			set
			{
				if ((this._RoleGroupName != value))
				{
					this.OnRoleGroupNameChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupName = value;
					this.SendPropertyChanged("RoleGroupName");
					this.OnRoleGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuRoleGroupLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SuRoleGroupLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SuRoleGroupLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRoleGroup_SuRoleGroupLang", Storage="_SuRoleGroup", ThisKey="RoleGroupID", OtherKey="RoleGroupID", IsForeignKey=true)]
		public SuRoleGroup SuRoleGroup
		{
			get
			{
				return this._SuRoleGroup.Entity;
			}
			set
			{
				SuRoleGroup previousValue = this._SuRoleGroup.Entity;
				if (((previousValue != value) 
							|| (this._SuRoleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuRoleGroup.Entity = null;
						previousValue.SuRoleGroupLangs.Remove(this);
					}
					this._SuRoleGroup.Entity = value;
					if ((value != null))
					{
						value.SuRoleGroupLangs.Add(this);
						this._RoleGroupID = value.RoleGroupID;
					}
					else
					{
						this._RoleGroupID = default(short);
					}
					this.SendPropertyChanged("SuRoleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Language = default(EntityRef<SU_Language>);
			this._SuRoleGroup = default(EntityRef<SuRoleGroup>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuSession")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private string _SessionID;
		
		private short _RoleID;
		
		private System.DateTime _TimeStamp;
		
		private EntityRef<SuRole> _SuRole;
		
		private EntityRef<SuUser> _SuUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnSessionIDChanging(string value);
    partial void OnSessionIDChanged();
    partial void OnRoleIDChanging(short value);
    partial void OnRoleIDChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public SuSession()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this.OnSessionIDChanging(value);
					this.SendPropertyChanging();
					this._SessionID = value;
					this.SendPropertyChanged("SessionID");
					this.OnSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public short RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._SuRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuRole_SuSession", Storage="_SuRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public SuRole SuRole
		{
			get
			{
				return this._SuRole.Entity;
			}
			set
			{
				SuRole previousValue = this._SuRole.Entity;
				if (((previousValue != value) 
							|| (this._SuRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuRole.Entity = null;
						previousValue.SuSessions.Remove(this);
					}
					this._SuRole.Entity = value;
					if ((value != null))
					{
						value.SuSessions.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(short);
					}
					this.SendPropertyChanged("SuRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuSession", Storage="_SuUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUser SuUser
		{
			get
			{
				return this._SuUser.Entity;
			}
			set
			{
				SuUser previousValue = this._SuUser.Entity;
				if (((previousValue != value) 
							|| (this._SuUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUser.Entity = null;
						previousValue.SuSession = null;
					}
					this._SuUser.Entity = value;
					if ((value != null))
					{
						value.SuSession = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SuRole = default(EntityRef<SuRole>);
			this._SuUser = default(EntityRef<SuUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private short _OrganizationID;
		
		private short _LanguageID;
		
		private string _UserName;
		
		private string _Password;
		
		private short _FailTime;
		
		private System.DateTime _EffDate;
		
		private System.DateTime _EndDate;
		
		private bool _ChangePassword;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SuUserRole> _SuUserRoles;
		
		private EntityRef<SuSession> _SuSession;
		
		private EntitySet<SuUserDivision> _SuUserDivisions;
		
		private EntitySet<SuUserLog> _SuUserLogs;
		
		private EntitySet<SuUserOrgPermission> _SuUserOrgPermissions;
		
		private EntityRef<SuUserProfile> _SuUserProfile;
		
		private EntityRef<SU_Language> _SU_Language;
		
		private EntityRef<SU_Organization> _SU_Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnOrganizationIDChanging(short value);
    partial void OnOrganizationIDChanged();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFailTimeChanging(short value);
    partial void OnFailTimeChanged();
    partial void OnEffDateChanging(System.DateTime value);
    partial void OnEffDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnChangePasswordChanging(bool value);
    partial void OnChangePasswordChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					if (this._SU_Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailTime", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public short FailTime
		{
			get
			{
				return this._FailTime;
			}
			set
			{
				if ((this._FailTime != value))
				{
					this.OnFailTimeChanging(value);
					this.SendPropertyChanging();
					this._FailTime = value;
					this.SendPropertyChanged("FailTime");
					this.OnFailTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime EffDate
		{
			get
			{
				return this._EffDate;
			}
			set
			{
				if ((this._EffDate != value))
				{
					this.OnEffDateChanging(value);
					this.SendPropertyChanging();
					this._EffDate = value;
					this.SendPropertyChanged("EffDate");
					this.OnEffDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePassword", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool ChangePassword
		{
			get
			{
				return this._ChangePassword;
			}
			set
			{
				if ((this._ChangePassword != value))
				{
					this.OnChangePasswordChanging(value);
					this.SendPropertyChanging();
					this._ChangePassword = value;
					this.SendPropertyChanged("ChangePassword");
					this.OnChangePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserRole", Storage="_SuUserRoles", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<SuUserRole> SuUserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserRoles;
			}
			set
			{
				this._SuUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuSession", Storage="_SuSession", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public SuSession SuSession
		{
			get
			{
				if ((this.serializing 
							&& (this._SuSession.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._SuSession.Entity;
			}
			set
			{
				SuSession previousValue = this._SuSession.Entity;
				if (((previousValue != value) 
							|| (this._SuSession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuSession.Entity = null;
						previousValue.SuUser = null;
					}
					this._SuSession.Entity = value;
					if ((value != null))
					{
						value.SuUser = this;
					}
					this.SendPropertyChanged("SuSession");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserDivision", Storage="_SuUserDivisions", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<SuUserDivision> SuUserDivisions
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserDivisions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserDivisions;
			}
			set
			{
				this._SuUserDivisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserLog", Storage="_SuUserLogs", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<SuUserLog> SuUserLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserLogs;
			}
			set
			{
				this._SuUserLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserOrgPermission", Storage="_SuUserOrgPermissions", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<SuUserOrgPermission> SuUserOrgPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserOrgPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserOrgPermissions;
			}
			set
			{
				this._SuUserOrgPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserProfile", Storage="_SuUserProfile", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public SuUserProfile SuUserProfile
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserProfile.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._SuUserProfile.Entity;
			}
			set
			{
				SuUserProfile previousValue = this._SuUserProfile.Entity;
				if (((previousValue != value) 
							|| (this._SuUserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUserProfile.Entity = null;
						previousValue.SuUser = null;
					}
					this._SuUserProfile.Entity = value;
					if ((value != null))
					{
						value.SuUser = this;
					}
					this.SendPropertyChanged("SuUserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuUser", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SuUsers.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SuUsers.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Organization_SuUser", Storage="_SU_Organization", ThisKey="OrganizationID", OtherKey="OrganizationID", IsForeignKey=true)]
		public SU_Organization SU_Organization
		{
			get
			{
				return this._SU_Organization.Entity;
			}
			set
			{
				SU_Organization previousValue = this._SU_Organization.Entity;
				if (((previousValue != value) 
							|| (this._SU_Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Organization.Entity = null;
						previousValue.SuUsers.Remove(this);
					}
					this._SU_Organization.Entity = value;
					if ((value != null))
					{
						value.SuUsers.Add(this);
						this._OrganizationID = value.OrganizationID;
					}
					else
					{
						this._OrganizationID = default(short);
					}
					this.SendPropertyChanged("SU_Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuUserRoles(SuUserRole entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = this;
		}
		
		private void detach_SuUserRoles(SuUserRole entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = null;
		}
		
		private void attach_SuUserDivisions(SuUserDivision entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = this;
		}
		
		private void detach_SuUserDivisions(SuUserDivision entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = null;
		}
		
		private void attach_SuUserLogs(SuUserLog entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = this;
		}
		
		private void detach_SuUserLogs(SuUserLog entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = null;
		}
		
		private void attach_SuUserOrgPermissions(SuUserOrgPermission entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = this;
		}
		
		private void detach_SuUserOrgPermissions(SuUserOrgPermission entity)
		{
			this.SendPropertyChanging();
			entity.SuUser = null;
		}
		
		private void Initialize()
		{
			this._SuUserRoles = new EntitySet<SuUserRole>(new Action<SuUserRole>(this.attach_SuUserRoles), new Action<SuUserRole>(this.detach_SuUserRoles));
			this._SuSession = default(EntityRef<SuSession>);
			this._SuUserDivisions = new EntitySet<SuUserDivision>(new Action<SuUserDivision>(this.attach_SuUserDivisions), new Action<SuUserDivision>(this.detach_SuUserDivisions));
			this._SuUserLogs = new EntitySet<SuUserLog>(new Action<SuUserLog>(this.attach_SuUserLogs), new Action<SuUserLog>(this.detach_SuUserLogs));
			this._SuUserOrgPermissions = new EntitySet<SuUserOrgPermission>(new Action<SuUserOrgPermission>(this.attach_SuUserOrgPermissions), new Action<SuUserOrgPermission>(this.detach_SuUserOrgPermissions));
			this._SuUserProfile = default(EntityRef<SuUserProfile>);
			this._SU_Language = default(EntityRef<SU_Language>);
			this._SU_Organization = default(EntityRef<SU_Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUserDivision")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUserDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _DivisionID;
		
		private long _UserID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Division> _SU_Division;
		
		private EntityRef<SuUser> _SuUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIDChanging(short value);
    partial void OnDivisionIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuUserDivision()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public short DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					if (this._SU_Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Division_SuUserDivision", Storage="_SU_Division", ThisKey="DivisionID", OtherKey="DivisionID", IsForeignKey=true)]
		public SU_Division SU_Division
		{
			get
			{
				return this._SU_Division.Entity;
			}
			set
			{
				SU_Division previousValue = this._SU_Division.Entity;
				if (((previousValue != value) 
							|| (this._SU_Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Division.Entity = null;
						previousValue.SuUserDivisions.Remove(this);
					}
					this._SU_Division.Entity = value;
					if ((value != null))
					{
						value.SuUserDivisions.Add(this);
						this._DivisionID = value.DivisionID;
					}
					else
					{
						this._DivisionID = default(short);
					}
					this.SendPropertyChanged("SU_Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserDivision", Storage="_SuUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUser SuUser
		{
			get
			{
				return this._SuUser.Entity;
			}
			set
			{
				SuUser previousValue = this._SuUser.Entity;
				if (((previousValue != value) 
							|| (this._SuUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUser.Entity = null;
						previousValue.SuUserDivisions.Remove(this);
					}
					this._SuUser.Entity = value;
					if ((value != null))
					{
						value.SuUserDivisions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Division = default(EntityRef<SU_Division>);
			this._SuUser = default(EntityRef<SuUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUserLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserLogID;
		
		private long _UserID;
		
		private string _SessionID;
		
		private short _IPAddress;
		
		private System.DateTime _SignInDate;
		
		private System.Nullable<System.DateTime> _SignOutDate;
		
		private EntityRef<SuUser> _SuUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserLogIDChanging(long value);
    partial void OnUserLogIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnSessionIDChanging(string value);
    partial void OnSessionIDChanged();
    partial void OnIPAddressChanging(short value);
    partial void OnIPAddressChanged();
    partial void OnSignInDateChanging(System.DateTime value);
    partial void OnSignInDateChanged();
    partial void OnSignOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignOutDateChanged();
    #endregion
		
		public SuUserLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long UserLogID
		{
			get
			{
				return this._UserLogID;
			}
			set
			{
				if ((this._UserLogID != value))
				{
					this.OnUserLogIDChanging(value);
					this.SendPropertyChanging();
					this._UserLogID = value;
					this.SendPropertyChanged("UserLogID");
					this.OnUserLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this.OnSessionIDChanging(value);
					this.SendPropertyChanging();
					this._SessionID = value;
					this.SendPropertyChanged("SessionID");
					this.OnSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public short IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignInDate", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime SignInDate
		{
			get
			{
				return this._SignInDate;
			}
			set
			{
				if ((this._SignInDate != value))
				{
					this.OnSignInDateChanging(value);
					this.SendPropertyChanging();
					this._SignInDate = value;
					this.SendPropertyChanged("SignInDate");
					this.OnSignInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignOutDate", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> SignOutDate
		{
			get
			{
				return this._SignOutDate;
			}
			set
			{
				if ((this._SignOutDate != value))
				{
					this.OnSignOutDateChanging(value);
					this.SendPropertyChanging();
					this._SignOutDate = value;
					this.SendPropertyChanged("SignOutDate");
					this.OnSignOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserLog", Storage="_SuUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUser SuUser
		{
			get
			{
				return this._SuUser.Entity;
			}
			set
			{
				SuUser previousValue = this._SuUser.Entity;
				if (((previousValue != value) 
							|| (this._SuUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUser.Entity = null;
						previousValue.SuUserLogs.Remove(this);
					}
					this._SuUser.Entity = value;
					if ((value != null))
					{
						value.SuUserLogs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SuUser = default(EntityRef<SuUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUserOrgPermission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUserOrgPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private short _OrganizationID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Organization> _SU_Organization;
		
		private EntityRef<SuUser> _SuUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnOrganizationIDChanging(short value);
    partial void OnOrganizationIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuUserOrgPermission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					if (this._SU_Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Organization_SuUserOrgPermission", Storage="_SU_Organization", ThisKey="OrganizationID", OtherKey="OrganizationID", IsForeignKey=true)]
		public SU_Organization SU_Organization
		{
			get
			{
				return this._SU_Organization.Entity;
			}
			set
			{
				SU_Organization previousValue = this._SU_Organization.Entity;
				if (((previousValue != value) 
							|| (this._SU_Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Organization.Entity = null;
						previousValue.SuUserOrgPermissions.Remove(this);
					}
					this._SU_Organization.Entity = value;
					if ((value != null))
					{
						value.SuUserOrgPermissions.Add(this);
						this._OrganizationID = value.OrganizationID;
					}
					else
					{
						this._OrganizationID = default(short);
					}
					this.SendPropertyChanged("SU_Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserOrgPermission", Storage="_SuUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUser SuUser
		{
			get
			{
				return this._SuUser.Entity;
			}
			set
			{
				SuUser previousValue = this._SuUser.Entity;
				if (((previousValue != value) 
							|| (this._SuUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUser.Entity = null;
						previousValue.SuUserOrgPermissions.Remove(this);
					}
					this._SuUser.Entity = value;
					if ((value != null))
					{
						value.SuUserOrgPermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Organization = default(EntityRef<SU_Organization>);
			this._SuUser = default(EntityRef<SuUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUserProfile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private short _PrefixID;
		
		private int _AddressID;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntitySet<SuUserProfileLang> _SuUserProfileLangs;
		
		private EntityRef<DB_Address> _DB_Address;
		
		private EntityRef<DB_Prefix> _DB_Prefix;
		
		private EntityRef<SuUser> _SuUser;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnPrefixIDChanging(short value);
    partial void OnPrefixIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuUserProfile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short PrefixID
		{
			get
			{
				return this._PrefixID;
			}
			set
			{
				if ((this._PrefixID != value))
				{
					if (this._DB_Prefix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrefixIDChanging(value);
					this.SendPropertyChanging();
					this._PrefixID = value;
					this.SendPropertyChanged("PrefixID");
					this.OnPrefixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._DB_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUserProfile_SuUserProfileLang", Storage="_SuUserProfileLangs", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SuUserProfileLang> SuUserProfileLangs
		{
			get
			{
				if ((this.serializing 
							&& (this._SuUserProfileLangs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SuUserProfileLangs;
			}
			set
			{
				this._SuUserProfileLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Address_SuUserProfile", Storage="_DB_Address", ThisKey="AddressID", OtherKey="AddressID", IsForeignKey=true)]
		public DB_Address DB_Address
		{
			get
			{
				return this._DB_Address.Entity;
			}
			set
			{
				DB_Address previousValue = this._DB_Address.Entity;
				if (((previousValue != value) 
							|| (this._DB_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Address.Entity = null;
						previousValue.SuUserProfiles.Remove(this);
					}
					this._DB_Address.Entity = value;
					if ((value != null))
					{
						value.SuUserProfiles.Add(this);
						this._AddressID = value.AddressID;
					}
					else
					{
						this._AddressID = default(int);
					}
					this.SendPropertyChanged("DB_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DB_Prefix_SuUserProfile", Storage="_DB_Prefix", ThisKey="PrefixID", OtherKey="PrefixID", IsForeignKey=true)]
		public DB_Prefix DB_Prefix
		{
			get
			{
				return this._DB_Prefix.Entity;
			}
			set
			{
				DB_Prefix previousValue = this._DB_Prefix.Entity;
				if (((previousValue != value) 
							|| (this._DB_Prefix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DB_Prefix.Entity = null;
						previousValue.SuUserProfiles.Remove(this);
					}
					this._DB_Prefix.Entity = value;
					if ((value != null))
					{
						value.SuUserProfiles.Add(this);
						this._PrefixID = value.PrefixID;
					}
					else
					{
						this._PrefixID = default(short);
					}
					this.SendPropertyChanged("DB_Prefix");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUser_SuUserProfile", Storage="_SuUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUser SuUser
		{
			get
			{
				return this._SuUser.Entity;
			}
			set
			{
				SuUser previousValue = this._SuUser.Entity;
				if (((previousValue != value) 
							|| (this._SuUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUser.Entity = null;
						previousValue.SuUserProfile = null;
					}
					this._SuUser.Entity = value;
					if ((value != null))
					{
						value.SuUserProfile = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuUserProfileLangs(SuUserProfileLang entity)
		{
			this.SendPropertyChanging();
			entity.SuUserProfile = this;
		}
		
		private void detach_SuUserProfileLangs(SuUserProfileLang entity)
		{
			this.SendPropertyChanging();
			entity.SuUserProfile = null;
		}
		
		private void Initialize()
		{
			this._SuUserProfileLangs = new EntitySet<SuUserProfileLang>(new Action<SuUserProfileLang>(this.attach_SuUserProfileLangs), new Action<SuUserProfileLang>(this.detach_SuUserProfileLangs));
			this._DB_Address = default(EntityRef<DB_Address>);
			this._DB_Prefix = default(EntityRef<DB_Prefix>);
			this._SuUser = default(EntityRef<SuUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuUserProfileLang")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuUserProfileLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private short _LanguageID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PersonalWebUrl;
		
		private string _Comment;
		
		private long _Upd_By;
		
		private System.DateTime _Upd_Date;
		
		private long _Cre_By;
		
		private System.DateTime _Cre_Date;
		
		private string _Upd_Pgm;
		
		private byte[] _RowVersion;
		
		private bool _Active;
		
		private EntityRef<SU_Language> _SU_Language;
		
		private EntityRef<SuUserProfile> _SuUserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnLanguageIDChanging(short value);
    partial void OnLanguageIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPersonalWebUrlChanging(string value);
    partial void OnPersonalWebUrlChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUpd_ByChanging(long value);
    partial void OnUpd_ByChanged();
    partial void OnUpd_DateChanging(System.DateTime value);
    partial void OnUpd_DateChanged();
    partial void OnCre_ByChanging(long value);
    partial void OnCre_ByChanged();
    partial void OnCre_DateChanging(System.DateTime value);
    partial void OnCre_DateChanged();
    partial void OnUpd_PgmChanging(string value);
    partial void OnUpd_PgmChanged();
    partial void OnRowVersionChanging(byte[] value);
    partial void OnRowVersionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SuUserProfileLang()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SuUserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._SU_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalWebUrl", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PersonalWebUrl
		{
			get
			{
				return this._PersonalWebUrl;
			}
			set
			{
				if ((this._PersonalWebUrl != value))
				{
					this.OnPersonalWebUrlChanging(value);
					this.SendPropertyChanging();
					this._PersonalWebUrl = value;
					this.SendPropertyChanged("PersonalWebUrl");
					this.OnPersonalWebUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public long Upd_By
		{
			get
			{
				return this._Upd_By;
			}
			set
			{
				if ((this._Upd_By != value))
				{
					this.OnUpd_ByChanging(value);
					this.SendPropertyChanging();
					this._Upd_By = value;
					this.SendPropertyChanged("Upd_By");
					this.OnUpd_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime Upd_Date
		{
			get
			{
				return this._Upd_Date;
			}
			set
			{
				if ((this._Upd_Date != value))
				{
					this.OnUpd_DateChanging(value);
					this.SendPropertyChanging();
					this._Upd_Date = value;
					this.SendPropertyChanged("Upd_Date");
					this.OnUpd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_By", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public long Cre_By
		{
			get
			{
				return this._Cre_By;
			}
			set
			{
				if ((this._Cre_By != value))
				{
					this.OnCre_ByChanging(value);
					this.SendPropertyChanging();
					this._Cre_By = value;
					this.SendPropertyChanged("Cre_By");
					this.OnCre_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cre_Date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime Cre_Date
		{
			get
			{
				return this._Cre_Date;
			}
			set
			{
				if ((this._Cre_Date != value))
				{
					this.OnCre_DateChanging(value);
					this.SendPropertyChanging();
					this._Cre_Date = value;
					this.SendPropertyChanged("Cre_Date");
					this.OnCre_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upd_Pgm", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Upd_Pgm
		{
			get
			{
				return this._Upd_Pgm;
			}
			set
			{
				if ((this._Upd_Pgm != value))
				{
					this.OnUpd_PgmChanging(value);
					this.SendPropertyChanging();
					this._Upd_Pgm = value;
					this.SendPropertyChanged("Upd_Pgm");
					this.OnUpd_PgmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public byte[] RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SU_Language_SuUserProfileLang", Storage="_SU_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public SU_Language SU_Language
		{
			get
			{
				return this._SU_Language.Entity;
			}
			set
			{
				SU_Language previousValue = this._SU_Language.Entity;
				if (((previousValue != value) 
							|| (this._SU_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SU_Language.Entity = null;
						previousValue.SuUserProfileLangs.Remove(this);
					}
					this._SU_Language.Entity = value;
					if ((value != null))
					{
						value.SuUserProfileLangs.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(short);
					}
					this.SendPropertyChanged("SU_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuUserProfile_SuUserProfileLang", Storage="_SuUserProfile", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public SuUserProfile SuUserProfile
		{
			get
			{
				return this._SuUserProfile.Entity;
			}
			set
			{
				SuUserProfile previousValue = this._SuUserProfile.Entity;
				if (((previousValue != value) 
							|| (this._SuUserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuUserProfile.Entity = null;
						previousValue.SuUserProfileLangs.Remove(this);
					}
					this._SuUserProfile.Entity = value;
					if ((value != null))
					{
						value.SuUserProfileLangs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SuUserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SU_Language = default(EntityRef<SU_Language>);
			this._SuUserProfile = default(EntityRef<SuUserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
